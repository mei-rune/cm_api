openapi: 3.0.1
info:
  title: Cloudera Manager API
  description: |-
    <h1>Cloudera Manager API v32</h1>
          <p>Introduced in Cloudera Manager 6.2.0</p>
          <p><a href="http://www.cloudera.com/documentation.html">Cloudera Product Documentation</a></p>
  version: 6.2.0
servers:
- url: /api/v32
security:
- basic: []
tags:
- name: ActivitiesResource
- name: AllHostsResource
- name: AuditsResource
- name: AuthRoleMetadatasResource
- name: AuthRolesResource
- name: AuthServiceResource
  description: "."
- name: AuthServiceRoleCommandsResource
- name: AuthServiceRoleConfigGroupsResource
- name: AuthServiceRolesResource
- name: BatchResource
- name: ClouderaManagerResource
- name: ClustersResource
- name: CmPeersResource
- name: CommandsResource
- name: DashboardsResource
- name: DataContextsResource
- name: EventsResource
- name: ExternalAccountsResource
  description: |-
    Manage external accounts used by various Cloudera Manager features, for
    performing external tasks.
- name: ExternalUserMappingsResource
- name: HostTemplatesResource
- name: HostsResource
- name: ImpalaQueriesResource
- name: MgmtRoleCommandsResource
- name: MgmtRoleConfigGroupsResource
- name: MgmtRolesResource
- name: MgmtServiceResource
- name: NameservicesResource
- name: ParcelResource
  description: |-
    This interface describes a parcel resource and all the operations that can
    be performed on it.
- name: ParcelsResource
- name: ProcessResource
- name: ReplicationsResource
- name: RoleCommandsResource
- name: RoleConfigGroupsResource
- name: RolesResource
- name: ServicesResource
- name: SnapshotsResource
  description: Available since API v6.
- name: TimeSeriesResource
- name: ToolsResource
- name: UsersResource
- name: WatchedDirResource
- name: YarnApplicationsResource
paths:
  /clusters/{clusterName}/services/{serviceName}/activities:
    get:
      tags:
      - ActivitiesResource
      summary: Read all activities in the system.
      description: Read all activities in the system
      operationId: readActivities
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of activities to return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: query
        in: query
        description: |-
          The query to perform to find activities in the system. By default,
          this call returns top level (i.e. root) activities that have currently
          started.
          <p>
          The query specifies the intersection of a list of constraints,
          joined together with semicolons (without spaces). For example:
          </p>
          <dl>
          <dt>status==started;parent==</dt>
          <dd>looks for running root activities. This is also the
          default query.</dd>
          <dt>status==failed;finishTime=gt=2012-04-01T20:30:00.000Z</dt>
          <dd>looks for failed activities after the given date time.</dd>
          <dt>name==Pi Estimator;startTime=gt=2012-04-01T20:30:00.000Z</dt>
          <dd>looks for activities started after the given date time,
          with the name of "Pi Estimator".</dd>
          <dt>startTime=lt=2012-01-02T00:00:00.000Z;finishTime=ge=2012-01-01T00:00:00.000Z</dt>
          <dd>looks for activities that are active on 2012 New Year's Day.
          Note that they may start before or finish after that day.</dd>
          <dt>status==failed;parent==000014-20120425161321-oozie-joe</dt>
          <dd>looks for failed child activities of the given parent
          activity id.</dd>
          <dt>status==started;metrics.cpu_user=gt=10</dt>
          <dd>looks for started activities that are using more than 10 cores
          per second.</dd>
          <dt>type==hive;metrics.user==bc;finishTime=gt=2012-04-01T20:30:00.000Z</dt>
          <dd>looks for all hive queries submitted by user bc after the
          given date time.</dd>
          </dl>

          You may query any fields present in the ApiActivity object. You can
          also query by activity metric values using the <em>metrics.*</em>
          syntax. Values for date time fields should be ISO8601 timestamps.
          <p>
          The valid comparators are <em>==</em>, <em>!=</em>, <em>=lt=</em>,
          <em>=le=</em>, <em>=ge=</em>, and <em>=gt=</em>.
          They stand for "==", "!=", "&lt;", "&lt;=",
          "&gt;=", "&gt;" respectively.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: status==started;parent==
      - name: resultOffset
        in: query
        description: Specified the offset of activities to return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: view
        in: query
        description: The view of the activities to materialize
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiActivityList'
              example:
                items:
                - name: '...'
                  type: UNKNOWN
                  parent: '...'
                  startTime: '...'
                  finishTime: '...'
                  id: '...'
                  status: ASSUMED_SUCCEEDED
                  user: '...'
                  group: '...'
                  inputDir: '...'
                  outputDir: '...'
                  mapper: '...'
                  combiner: '...'
                  reducer: '...'
                  queueName: '...'
                  schedulerPriority: '...'
                - name: '...'
                  type: HIVE
                  parent: '...'
                  startTime: '...'
                  finishTime: '...'
                  id: '...'
                  status: SUSPENDED
                  user: '...'
                  group: '...'
                  inputDir: '...'
                  outputDir: '...'
                  mapper: '...'
                  combiner: '...'
                  reducer: '...'
                  queueName: '...'
                  schedulerPriority: '...'
  /clusters/{clusterName}/services/{serviceName}/activities/{activityId}:
    get:
      tags:
      - ActivitiesResource
      summary: Returns a specific activity in the system.
      description: Returns a specific activity in the system
      operationId: readActivity
      parameters:
      - name: activityId
        in: path
        description: The id of the activity to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: The view of the activity to materialize
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiActivity'
              example:
                name: '...'
                type: PIG
                parent: '...'
                startTime: '...'
                finishTime: '...'
                id: '...'
                status: FAILED
                user: '...'
                group: '...'
                inputDir: '...'
                outputDir: '...'
                mapper: '...'
                combiner: '...'
                reducer: '...'
                queueName: '...'
                schedulerPriority: '...'
  /clusters/{clusterName}/services/{serviceName}/activities/{activityId}/children:
    get:
      tags:
      - ActivitiesResource
      summary: Returns the child activities.
      description: Returns the child activities
      operationId: readChildActivities
      parameters:
      - name: activityId
        in: path
        description: The id of the activity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of activities to return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: resultOffset
        in: query
        description: Specified the offset of activities to return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: view
        in: query
        description: The view of the children to materialize
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiActivityList'
              example:
                items:
                - name: '...'
                  type: OOZIE
                  parent: '...'
                  startTime: '...'
                  finishTime: '...'
                  id: '...'
                  status: KILLED
                  user: '...'
                  group: '...'
                  inputDir: '...'
                  outputDir: '...'
                  mapper: '...'
                  combiner: '...'
                  reducer: '...'
                  queueName: '...'
                  schedulerPriority: '...'
                - name: '...'
                  type: HIVE
                  parent: '...'
                  startTime: '...'
                  finishTime: '...'
                  id: '...'
                  status: STARTED
                  user: '...'
                  group: '...'
                  inputDir: '...'
                  outputDir: '...'
                  mapper: '...'
                  combiner: '...'
                  reducer: '...'
                  queueName: '...'
                  schedulerPriority: '...'
  /clusters/{clusterName}/services/{serviceName}/activities/{activityId}/metrics:
    get:
      tags:
      - ActivitiesResource
      summary: Fetch metric readings for a particular activity.
      description: |-
        Fetch metric readings for a particular activity.
        <p>
        By default, this call will look up all metrics available for the activity. If
        only specific metrics are desired, use the <i>metrics</i> parameter.
        <p>
        By default, the returned results correspond to a 5 minute window based on
        the provided end time (which defaults to the current server time). The
        <i>from</i> and <i>to</i> parameters can be used to control the window
        being queried. A maximum window of 3 hours is enforced.
        <p>
        When requesting a "full" view, aside from the extended properties of the
        returned metric data, the collection will also contain information about
        all metrics available for the activity, even if no readings are available
        in the requested window.
      operationId: getMetrics
      parameters:
      - name: activityId
        in: path
        description: The name of the activity.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: Start of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: metrics
        in: query
        description: Filter for which metrics to query.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: to
        in: query
        description: End of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetricList'
              example:
                items:
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
  /clusters/{clusterName}/services/{serviceName}/activities/{activityId}/similar:
    get:
      tags:
      - ActivitiesResource
      summary: Returns a list of similar activities.
      description: Returns a list of similar activities
      operationId: readSimilarActivities
      parameters:
      - name: activityId
        in: path
        description: The id of the activity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: The view of the activities to materialize
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiActivityList'
              example:
                items:
                - name: '...'
                  type: UNKNOWN
                  parent: '...'
                  startTime: '...'
                  finishTime: '...'
                  id: '...'
                  status: FAILED
                  user: '...'
                  group: '...'
                  inputDir: '...'
                  outputDir: '...'
                  mapper: '...'
                  combiner: '...'
                  reducer: '...'
                  queueName: '...'
                  schedulerPriority: '...'
                - name: '...'
                  type: PIG
                  parent: '...'
                  startTime: '...'
                  finishTime: '...'
                  id: '...'
                  status: FAILED
                  user: '...'
                  group: '...'
                  inputDir: '...'
                  outputDir: '...'
                  mapper: '...'
                  combiner: '...'
                  reducer: '...'
                  queueName: '...'
                  schedulerPriority: '...'
  /cm/allHosts/config:
    get:
      tags:
      - AllHostsResource
      summary: Retrieve the default configuration for all hosts.
      description: |-
        Retrieve the default configuration for all hosts.
        <p/>
        These values will apply to all hosts managed by CM unless overridden
        at the host level.
      operationId: readConfig
      parameters:
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - AllHostsResource
      summary: Update the default configuration values for all hosts.
      description: |-
        Update the default configuration values for all hosts.
        <p/>
        Note that this does not override values set at the host level. It just
        updates the default values that will be inherited by each host's
        configuration.
      operationId: updateConfig
      parameters:
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The config values to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /audits:
    get:
      tags:
      - AuditsResource
      summary: |-
        Fetch audit events from Cloudera Manager (CM) and CM managed services
        like HDFS, HBase, Impala, Hive, and Sentry.
      description: |-
        Fetch audit events from Cloudera Manager (CM) and CM managed services
        like HDFS, HBase, Impala, Hive, and Sentry.
        <p>
        By default, this call will fetch the first 100 audit events (sorted from most
        recent to oldest) corresponding to a 1 day window based on provided end time
        (which defaults to the  current CM server time). The <em>startTime</em> and
        <em>endTime</em> parameters can be used to control the window being queried.
        <p>
        Audit events for CM managed services are only retrieved if Cloudera
        Navigator server is running.
      operationId: readAudits
      parameters:
      - name: endTime
        in: query
        description: |-
          End of the period to query in ISO 8601 format (defaults to
          current time).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      - name: maxResults
        in: query
        description: Maximum number of audits to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: query
        in: query
        description: |-
          The query to filter out audits in the system. It accepts
          querying the intersection of a list of constraints,
          joined together with semicolons (without spaces). For example:
          </p>
          <dl>
          <dt>command==listStatus</dt>
          <dd>looks for audits with listStatus command.</dd>
          <dt>command==listStatus;username!=foo</dt>
          <dd>looks for audits with listStatus command but excludes
          audits generated by foo username</dd>
          <dt>command==listStatus;source==*oozie*</dt>
          <dd>looks for audits with listStatus command and source that
          contains the string 'oozie'.
          </dd>
          </dl>

          Following are valid selectors for the query (if applicable to the
          audit):
          <table>
          <tr>
          <th> Selector </th>
          <th> Description </th>
          <th> SCM </th>
          <th> HDFS </th>
          <th> HBase </th>
          <th> Hive </th>
          <th> Impala </th>
          <th> Sentry </th>
          </tr>
          <tr>
          <td> service </td>
          <td> Cloudera Manager Service </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> operation </td>
          <td> Operation name </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> username </td>
          <td> User name </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> impersonator</td>
          <td> Impersonator </td>
          <td> </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> ip_address </td>
          <td> IP Address </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> allowed </td>
          <td> Whether the request was allowed or denied </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> qualifier</td>
          <td> Column qualifier </td>
          <td> </td>
          <td> </td>
          <td> x </td>
          <td> </td>
          <td> </td>
          <td> </td>
          </tr>
          <tr>
          <td> source </td>
          <td> Source resource of the operation  </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> </td>
          </tr>
          <tr>
          <td> destination </td>
          <td> Destination resource of the operation </td>
          <td> </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> </td>
          </tr>
          <tr>
          <td> hostIpAddress </td>
          <td> Host IP Address </td>
          <td> x </td>
          <td> </td>
          <td> </td>
          <td> </td>
          <td> </td>
          <td> </td>
          </tr>
          <tr>
          <td> role </td>
          <td> Cloudera Manager Role </td>
          <td> x </td>
          <td> </td>
          <td> </td>
          <td> </td>
          <td> </td>
          <td> </td>
          </tr>
          <tr>
          <td> family </td>
          <td> Column family </td>
          <td> </td>
          <td> </td>
          <td> x </td>
          <td> </td>
          <td> </td>
          <td> </td>
          </tr>
          <tr>
          <td> database_name </td>
          <td> Database name </td>
          <td> </td>
          <td> </td>
          <td> </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> table_name </td>
          <td> Table name </td>
          <td> </td>
          <td> </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> object_type </td>
          <td> Type of object being handled </td>
          <td> </td>
          <td> </td>
          <td> </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          <tr>
          <td> operation_text </td>
          <td> Command/query text </td>
          <td> </td>
          <td> </td>
          <td> </td>
          <td> x </td>
          <td> x </td>
          <td> x </td>
          </tr>
          </table>
          <p>
          The only supported operator is <em>";"</em> (Boolean AND). Boolean OR is
          not supported.
          <p>
          The supported comparators are <em>==</em> and <em>!=</em>
          Note that "LIKE" comparison is supported using the wild card syntax,
          for example <em>foo==*value*</em>. Asterisk is interpreted as a wild
          card character and must not be part of the value. (LIKE comparison
          queries are converted to standard SQL LIKE syntax, so any % (%25)
          character in a value that also contains a wild card will be
          interpreted as a wild card.)
          <p/>
          Available since API v8. A subset of these features is available since v4.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resultOffset
        in: query
        description: Offset of audits to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: startTime
        in: query
        description: |-
          Start of the period to query in ISO 8601 format (defaults
          to 1 day ago relative to endTime).
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuditList'
              example:
                items:
                - timestamp: '...'
                  service: '...'
                  username: '...'
                  impersonator: '...'
                  ipAddress: '...'
                  command: '...'
                  resource: '...'
                  operationText: '...'
                  allowed: true
                - timestamp: '...'
                  service: '...'
                  username: '...'
                  impersonator: '...'
                  ipAddress: '...'
                  command: '...'
                  resource: '...'
                  operationText: '...'
                  allowed: true
  /audits/stream:
    get:
      tags:
      - AuditsResource
      operationId: streamAudits
      parameters:
      - name: endTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      - name: maxResults
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: query
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resultOffset
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: startTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
                description: ""
                format: binary
                x-content-type: application/json
  /authRoleMetadatas:
    get:
      tags:
      - AuthRoleMetadatasResource
      summary: Returns a list of the auth roles' metadata for the built-in roles.
      description: Returns a list of the auth roles' metadata for the built-in roles.
      operationId: readAuthRolesMetadata
      parameters:
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuthRoleMetadataList'
              example:
                items:
                - displayName: '...'
                  uuid: '...'
                  role: '...'
                  authorities:
                  - name: '...'
                    description: '...'
                  - name: '...'
                    description: '...'
                  allowedScopes:
                  - '...'
                  - '...'
                - displayName: '...'
                  uuid: '...'
                  role: '...'
                  authorities:
                  - name: '...'
                    description: '...'
                  - name: '...'
                    description: '...'
                  allowedScopes:
                  - '...'
                  - '...'
  /authRoles:
    get:
      tags:
      - AuthRolesResource
      summary: Returns a list of the auth roles configured in the system.
      description: Returns a list of the auth roles configured in the system.
      operationId: readAuthRoles
      parameters:
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuthRoleList'
              example:
                items:
                - displayName: '...'
                  name: '...'
                  clusters:
                  - clusterName: '...'
                    displayName: '...'
                  - clusterName: '...'
                    displayName: '...'
                  users:
                  - name: '...'
                  - name: '...'
                  externalUserMappings:
                  - uuid: '...'
                    name: '...'
                    type: EXTERNAL_PROGRAM
                  - uuid: '...'
                    name: '...'
                    type: SAML_SCRIPT
                  baseRole:
                    displayName: '...'
                    name: '...'
                    uuid: '...'
                  uuid: '...'
                  isCustom: true
                - displayName: '...'
                  name: '...'
                  clusters:
                  - clusterName: '...'
                    displayName: '...'
                  - clusterName: '...'
                    displayName: '...'
                  users:
                  - name: '...'
                  - name: '...'
                  externalUserMappings:
                  - uuid: '...'
                    name: '...'
                    type: EXTERNAL_PROGRAM
                  - uuid: '...'
                    name: '...'
                    type: SAML_SCRIPT
                  baseRole:
                    displayName: '...'
                    name: '...'
                    uuid: '...'
                  uuid: '...'
                  isCustom: true
    post:
      tags:
      - AuthRolesResource
      summary: Creates a list of auth roles.
      description: Creates a list of auth roles.
      operationId: createAuthRoles
      requestBody:
        description: List of auth roles to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAuthRoleList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuthRoleList'
              example:
                items:
                - displayName: '...'
                  name: '...'
                  clusters:
                  - clusterName: '...'
                    displayName: '...'
                  - clusterName: '...'
                    displayName: '...'
                  users:
                  - name: '...'
                  - name: '...'
                  externalUserMappings:
                  - uuid: '...'
                    name: '...'
                    type: SAML_SCRIPT
                  - uuid: '...'
                    name: '...'
                    type: SAML_SCRIPT
                  baseRole:
                    displayName: '...'
                    name: '...'
                    uuid: '...'
                  uuid: '...'
                  isCustom: true
                - displayName: '...'
                  name: '...'
                  clusters:
                  - clusterName: '...'
                    displayName: '...'
                  - clusterName: '...'
                    displayName: '...'
                  users:
                  - name: '...'
                  - name: '...'
                  externalUserMappings:
                  - uuid: '...'
                    name: '...'
                    type: LDAP
                  - uuid: '...'
                    name: '...'
                    type: EXTERNAL_PROGRAM
                  baseRole:
                    displayName: '...'
                    name: '...'
                    uuid: '...'
                  uuid: '...'
                  isCustom: true
      x-codegen-request-body-name: body
  /authRoles/metadata:
    get:
      tags:
      - AuthRolesResource
      summary: Returns a list of the auth roles' metadata for the built-in roles.
      description: Returns a list of the auth roles' metadata for the built-in roles.
      operationId: readAuthRolesMetadata
      parameters:
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuthRoleMetadataList'
              example:
                items:
                - displayName: '...'
                  uuid: '...'
                  role: '...'
                  authorities:
                  - name: '...'
                    description: '...'
                  - name: '...'
                    description: '...'
                  allowedScopes:
                  - '...'
                  - '...'
                - displayName: '...'
                  uuid: '...'
                  role: '...'
                  authorities:
                  - name: '...'
                    description: '...'
                  - name: '...'
                    description: '...'
                  allowedScopes:
                  - '...'
                  - '...'
  /authRoles/{uuid}:
    get:
      tags:
      - AuthRolesResource
      summary: Returns detailed information about an auth role.
      description: Returns detailed information about an auth role.
      operationId: readAuthRole
      parameters:
      - name: uuid
        in: path
        description: The auth role to read.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuthRole'
              example:
                displayName: '...'
                name: '...'
                clusters:
                - clusterName: '...'
                  displayName: '...'
                - clusterName: '...'
                  displayName: '...'
                users:
                - name: '...'
                - name: '...'
                externalUserMappings:
                - uuid: '...'
                  name: '...'
                  type: EXTERNAL_PROGRAM
                - uuid: '...'
                  name: '...'
                  type: LDAP
                baseRole:
                  displayName: '...'
                  name: '...'
                  uuid: '...'
                uuid: '...'
                isCustom: true
    put:
      tags:
      - AuthRolesResource
      summary: Updates the given auth role's information.
      description: Updates the given auth role's information.
      operationId: updateAuthRole
      parameters:
      - name: uuid
        in: path
        description: Uuid of the auth role being updated.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The auth role information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAuthRole'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuthRole'
              example:
                displayName: '...'
                name: '...'
                clusters:
                - clusterName: '...'
                  displayName: '...'
                - clusterName: '...'
                  displayName: '...'
                users:
                - name: '...'
                - name: '...'
                externalUserMappings:
                - uuid: '...'
                  name: '...'
                  type: EXTERNAL_PROGRAM
                - uuid: '...'
                  name: '...'
                  type: EXTERNAL_PROGRAM
                baseRole:
                  displayName: '...'
                  name: '...'
                  uuid: '...'
                uuid: '...'
                isCustom: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - AuthRolesResource
      summary: Deletes an auth role from the system.
      description: |-
        Deletes an auth role from the system.
        <p/>
      operationId: deleteAuthRole
      parameters:
      - name: uuid
        in: path
        description: The uuid of the auth role to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuthRole'
              example:
                displayName: '...'
                name: '...'
                clusters:
                - clusterName: '...'
                  displayName: '...'
                - clusterName: '...'
                  displayName: '...'
                users:
                - name: '...'
                - name: '...'
                externalUserMappings:
                - uuid: '...'
                  name: '...'
                  type: LDAP
                - uuid: '...'
                  name: '...'
                  type: EXTERNAL_PROGRAM
                baseRole:
                  displayName: '...'
                  name: '...'
                  uuid: '...'
                uuid: '...'
                isCustom: true
  /cm/authService:
    get:
      tags:
      - AuthServiceResource
      summary: Retrieve information about the Authentication Services.
      description: Retrieve information about the Authentication Services.
      operationId: readService
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: NA
                healthSummary: CONCERNING
                configStalenessStatus: FRESH
                clientConfigStalenessStatus: STALE_REFRESHABLE
                healthChecks:
                - name: '...'
                  summary: HISTORY_NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - ROLE
                - SERVICE
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: UNKNOWN
                  commissionState: UNKNOWN
                  healthSummary: CONCERNING
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - SERVICE
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: UNKNOWN
                  entityStatus: STARTING
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: UNKNOWN
                  healthSummary: BAD
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_FOLLOWER
                  entityStatus: NONE
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: KEEP_DATA_IN_CLOUD
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: WEEK
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: YEAR
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: CONCERNING_HEALTH
    put:
      tags:
      - AuthServiceResource
      summary: Setup the Authentication Service.
      description: |-
        Setup the Authentication Service.
        <p>
        Configure the Auth Service instance with the information given in
        the ApiService. The provided configuration data can be used to set
        up host mappings for each role, and required configuration such as
        database connection information for specific roles.
        <p>
        This method needs a valid CM license to be installed beforehand.
        <p>
        This method does not start any services or roles.
        <p>
        This method will fail if a Auth Service instance already exists.
        <p>
        Available role types:
        <ul>
        <li>AUTHSRV</li>
        </ul>
      operationId: setup
      requestBody:
        description: Role configuration overrides.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiService'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: STARTED
                healthSummary: DISABLED
                configStalenessStatus: STALE
                clientConfigStalenessStatus: FRESH
                healthChecks:
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: DISABLED
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - ROLE
                - HOST
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STARTED
                  commissionState: DECOMMISSIONING
                  healthSummary: CONCERNING
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_FOLLOWER
                  entityStatus: NONE
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: BUSY
                  commissionState: DECOMMISSIONED
                  healthSummary: GOOD
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: UNKNOWN
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MINUTE
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: YEAR
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: UNKNOWN_HEALTH
      x-codegen-request-body-name: body
    delete:
      tags:
      - AuthServiceResource
      summary: Delete the Authentication Service.
      description: |-
        Delete the Authentication Service.
        <p>
        This method will fail if a CMS instance doesn't already exist.
      operationId: delete
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: STOPPING
                healthSummary: DISABLED
                configStalenessStatus: STALE_REFRESHABLE
                clientConfigStalenessStatus: FRESH
                healthChecks:
                - name: '...'
                  summary: HISTORY_NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - HOST
                - ROLE
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: UNKNOWN
                  commissionState: UNKNOWN
                  healthSummary: DISABLED
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_FOLLOWER
                  entityStatus: DOWN
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: NA
                  commissionState: OFFLINING
                  healthSummary: BAD
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                  entityStatus: NONE
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: WEEK
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: YEAR
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: DOWN
  /cm/authService/autoAssignRoles:
    put:
      tags:
      - AuthServiceResource
      summary: |-
        Automatically assign roles to hosts and create the roles for the
        Authentication Service.
      description: |-
        Automatically assign roles to hosts and create the roles for the
        Authentication Service.
        <p>
        Assignments are done based on number of hosts in the deployment
        and hardware specifications. If no hosts are part of the deployment,
        an exception will be thrown preventing any role assignments.
        Existing roles will be taken into account and their assignments
        will be not be modified. The deployment should not have any clusters
        when calling this endpoint. If it does, an exception will be thrown
        preventing any role assignments.
      operationId: autoAssignRoles
      responses:
        "204":
          description: Success
          content: {}
  /cm/authService/autoConfigure:
    put:
      tags:
      - AuthServiceResource
      summary: Automatically configures roles of the Authentication Service.
      description: |-
        Automatically configures roles of the Authentication Service.
        <p>
        Overwrites some existing configurations. Only default role config
        groups must exist before calling this endpoint. Other role config
        groups must not exist. If they do, an exception will be thrown
        preventing any configuration. Ignores any clusters (and their
        services and roles) colocated with the Authentication Service.
      operationId: autoConfigure
      responses:
        "204":
          description: Success
          content: {}
  /cm/authService/commands:
    get:
      tags:
      - AuthServiceResource
      summary: List active Authentication Service commands.
      description: List active Authentication Service commands.
      operationId: listActiveCommands
      parameters:
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandList'
              example:
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /cm/authService/config:
    get:
      tags:
      - AuthServiceResource
      operationId: readServiceConfig
      parameters:
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceConfig'
              example:
                roleTypeConfigs:
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - AuthServiceResource
      operationId: updateServiceConfig
      parameters:
      - name: message
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceConfig'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceConfig'
              example:
                roleTypeConfigs:
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /cm/authService/roleTypes:
    get:
      tags:
      - AuthServiceResource
      summary: List the supported role types for the Authentication Service.
      description: List the supported role types for the Authentication Service.
      operationId: listRoleTypes
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleTypeList'
              example:
                items:
                - '...'
                - '...'
  /cm/authService/commands/enterMaintenanceMode:
    post:
      tags:
      - AuthServiceResource
      summary: Put the Authentication Service into maintenance mode.
      description: |-
        Put the Authentication Service into maintenance mode. This is a
        synchronous command. The result is known immediately upon return.
      operationId: enterMaintenanceMode
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/authService/commands/exitMaintenanceMode:
    post:
      tags:
      - AuthServiceResource
      summary: Take the Authentication Service out of maintenance mode.
      description: |-
        Take the Authentication Service out of maintenance mode. This is a
        synchronous command. The result is known immediately upon return.
      operationId: exitMaintenanceMode
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/authService/commands/restart:
    post:
      tags:
      - AuthServiceResource
      summary: Restart the Authentication Service.
      description: Restart the Authentication Service.
      operationId: restartCommand
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/authService/commands/start:
    post:
      tags:
      - AuthServiceResource
      summary: Start the Authentication Service.
      description: Start the Authentication Service.
      operationId: startCommand
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/authService/commands/stop:
    post:
      tags:
      - AuthServiceResource
      summary: Stop the Authentication Service.
      description: Stop the Authentication Service.
      operationId: stopCommand
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/authService/roleCommands/restart:
    post:
      tags:
      - AuthServiceRoleCommandsResource
      summary: Restart a set of Authentication Service roles.
      description: Restart a set of Authentication Service roles.
      operationId: restartCommand
      requestBody:
        description: The roles to restart.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/authService/roleCommands/start:
    post:
      tags:
      - AuthServiceRoleCommandsResource
      summary: Start a set of Authentication Service roles.
      description: Start a set of Authentication Service roles.
      operationId: startCommand
      requestBody:
        description: The roles to start.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/authService/roleCommands/stop:
    post:
      tags:
      - AuthServiceRoleCommandsResource
      summary: Stop a set of Authentication Service roles.
      description: Stop a set of Authentication Service roles.
      operationId: stopCommand
      requestBody:
        description: The roles to stop.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/authService/roleConfigGroups:
    get:
      tags:
      - AuthServiceRoleConfigGroupsResource
      summary: |-
        Returns the information for all role config groups in
        the Authentication Service.
      description: |-
        Returns the information for all role config groups in
        the Authentication Service.
      operationId: readRoleConfigGroups
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroupList'
              example:
                items:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
  /cm/authService/roleConfigGroups/{roleConfigGroupName}:
    get:
      tags:
      - AuthServiceRoleConfigGroupsResource
      summary: |-
        Returns the information for a given role config group
        in the Authentication Service.
      description: |-
        Returns the information for a given role config group
        in the Authentication Service.
      operationId: readRoleConfigGroup
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the requested group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroup'
              example:
                name: '...'
                roleType: '...'
                base: true
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
    put:
      tags:
      - AuthServiceRoleConfigGroupsResource
      summary: Updates an existing role config group in the Authentication Service.
      description: Updates an existing role config group in the Authentication Service.
      operationId: updateRoleConfigGroup
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the group to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: The optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The updated role config group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleConfigGroup'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroup'
              example:
                name: '...'
                roleType: '...'
                base: true
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
      x-codegen-request-body-name: body
  /cm/authService/roleConfigGroups/{roleConfigGroupName}/config:
    get:
      tags:
      - AuthServiceRoleConfigGroupsResource
      summary: |-
        Returns the current revision of the config
        for the specified role config group in the Authentication Service.
      description: |-
        Returns the current revision of the config
        for the specified role config group in the Authentication Service.
      operationId: readConfig
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - AuthServiceRoleConfigGroupsResource
      summary: |-
        Updates the config for the given role config group
        in the Authentication Service.
      description: |-
        Updates the config for the given role config group
        in the Authentication Service.
      operationId: updateConfig
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The new config information for the group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /cm/authService/roleConfigGroups/{roleConfigGroupName}/roles:
    get:
      tags:
      - AuthServiceRoleConfigGroupsResource
      summary: |-
        Returns all roles in the given role config group
        in the Authentication Service.
      description: |-
        Returns all roles in the given role config group
        in the Authentication Service.
      operationId: readRoles
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPING
                  commissionState: DECOMMISSIONED
                  healthSummary: GOOD
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                  entityStatus: STOPPING
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: BUSY
                  commissionState: DECOMMISSIONED
                  healthSummary: GOOD
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: HISTORY_NOT_AVAILABLE
  /cm/authService/roles:
    get:
      tags:
      - AuthServiceRolesResource
      summary: List all roles of the Authentication Services.
      description: List all roles of the Authentication Services.
      operationId: readRoles
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: UNKNOWN
                  commissionState: OFFLINED
                  healthSummary: BAD
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: STANDALONE
                  entityStatus: STARTING
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: UNKNOWN
                  commissionState: DECOMMISSIONED
                  healthSummary: CONCERNING
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: BAD_HEALTH
    post:
      tags:
      - AuthServiceRolesResource
      summary: Create new roles in the Authentication Services.
      description: Create new roles in the Authentication Services.
      operationId: createRoles
      requestBody:
        description: Roles to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STARTED
                  commissionState: COMMISSIONED
                  healthSummary: BAD
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: UNKNOWN
                  entityStatus: UNKNOWN_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPING
                  commissionState: DECOMMISSIONED
                  healthSummary: GOOD
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: UNKNOWN
                  entityStatus: STOPPING
      x-codegen-request-body-name: body
  /cm/authService/roles/{roleName}:
    get:
      tags:
      - AuthServiceRolesResource
      summary: Retrieve detailed information about a Authentication Services role.
      description: Retrieve detailed information about a Authentication Services role.
      operationId: readRole
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRole'
              example:
                name: '...'
                type: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleState: NA
                commissionState: OFFLINED
                healthSummary: GOOD
                configStalenessStatus: STALE_REFRESHABLE
                healthChecks:
                - name: '...'
                  summary: CONCERNING
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                haStatus: ACTIVE
                roleUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - HOST
                - HOST
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roleConfigGroupRef:
                  roleConfigGroupName: '...'
                zooKeeperServerMode: REPLICATED_FOLLOWER
                entityStatus: HISTORY_NOT_AVAILABLE
    delete:
      tags:
      - AuthServiceRolesResource
      summary: Delete a role from the Authentication Services.
      description: Delete a role from the Authentication Services.
      operationId: deleteRole
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRole'
              example:
                name: '...'
                type: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleState: STOPPED
                commissionState: OFFLINING
                healthSummary: DISABLED
                configStalenessStatus: STALE_REFRESHABLE
                healthChecks:
                - name: '...'
                  summary: BAD
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                haStatus: STANDBY
                roleUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - HOST
                - CLUSTER
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roleConfigGroupRef:
                  roleConfigGroupName: '...'
                zooKeeperServerMode: UNKNOWN
                entityStatus: STARTING
  /cm/authService/roles/{roleName}/commands:
    get:
      tags:
      - AuthServiceRolesResource
      summary: List active role commands.
      description: List active role commands.
      operationId: listActiveCommands
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandList'
              example:
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /cm/authService/roles/{roleName}/config:
    get:
      tags:
      - AuthServiceRolesResource
      summary: Retrieve the configuration of a specific Authentication Services role.
      description: Retrieve the configuration of a specific Authentication Services
        role.
      operationId: readRoleConfig
      parameters:
      - name: roleName
        in: path
        description: The role to look up.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - AuthServiceRolesResource
      summary: Update the configuration of a Authentication Services role.
      description: |-
        Update the configuration of a Authentication Services role.
        <p>
        If a value is set in the given configuration, it will be added
        to the role's configuration, replacing any existing entries.
        If a value is unset (its value is null), the existing
        configuration for the attribute will be erased, if any.
        <p>
        Attributes that are not listed in the input will maintain their
        current values in the configuration.
      operationId: updateRoleConfig
      parameters:
      - name: roleName
        in: path
        description: The role to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Configuration changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /cm/authService/roles/{roleName}/commands/enterMaintenanceMode:
    post:
      tags:
      - AuthServiceRolesResource
      summary: Put the Authentication Service role into maintenance mode.
      description: |-
        Put the Authentication Service role into maintenance mode.This is a
        synchronous command. The result is known immediately upon return.
      operationId: enterMaintenanceMode
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/authService/roles/{roleName}/commands/exitMaintenanceMode:
    post:
      tags:
      - AuthServiceRolesResource
      summary: Take the Authentication Service role out of maintenance mode.
      description: |-
        Take the Authentication Service role out of maintenance mode. This is
        a synchronous command. The result is known immediately upon return.
      operationId: exitMaintenanceMode
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/authService/roles/{roleName}/logs/full:
    get:
      tags:
      - AuthServiceRolesResource
      summary: Retrieves the log file for the role's main process.
      description: |-
        Retrieves the log file for the role's main process.
        <p>
        If the role is not started, this will be the log file associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getFullLog
      parameters:
      - name: roleName
        in: path
        description: The role to fetch logs from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /cm/authService/roles/{roleName}/logs/stacks:
    get:
      tags:
      - AuthServiceRolesResource
      summary: "Retrieves the stacks log file, if any, for the role's main process."
      description: |-
        Retrieves the stacks log file, if any, for the role's main process. Note
        that not all roles support periodic stacks collection.

        The log files are returned as plain text (type "text/plain").
      operationId: getStacksLog
      parameters:
      - name: roleName
        in: path
        description: The role to fetch stacks logs from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /cm/authService/roles/{roleName}/logs/stacksBundle:
    get:
      tags:
      - AuthServiceRolesResource
      summary: Download a zip-compressed archive of role stacks logs.
      description: |-
        Download a zip-compressed archive of role stacks logs. Note that not all
        roles support periodic stacks collection.
      operationId: getStacksLogsBundle
      parameters:
      - name: roleName
        in: path
        description: The role to fetch the stacks logs bundle from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
  /cm/authService/roles/{roleName}/logs/stderr:
    get:
      tags:
      - AuthServiceRolesResource
      summary: Retrieves the role's standard error output.
      description: |-
        Retrieves the role's standard error output.
        <p>
        If the role is not started, this will be the output associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getStandardError
      parameters:
      - name: roleName
        in: path
        description: The role to fetch stderr from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /cm/authService/roles/{roleName}/logs/stdout:
    get:
      tags:
      - AuthServiceRolesResource
      summary: Retrieves the role's standard output.
      description: |-
        Retrieves the role's standard output.
        <p>
        If the role is not started, this will be the output associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getStandardOutput
      parameters:
      - name: roleName
        in: path
        description: The role to fetch stdout from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /batch:
    post:
      tags:
      - BatchResource
      summary: Executes a batch of API requests in one database transaction.
      description: |-
        Executes a batch of API requests in one database transaction. If any
        request fails, execution halts and the transaction is rolled back.
      operationId: execute
      requestBody:
        description: Batch of request to execute.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiBatchRequest'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBatchResponse'
              example:
                items:
                - statusCode: 12345
                  response: {}
                - statusCode: 12345
                  response: {}
                success: true
      x-codegen-request-body-name: body
  /cm/commands:
    get:
      tags:
      - ClouderaManagerResource
      summary: List active global commands.
      description: List active global commands.
      operationId: listActiveCommands
      parameters:
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandList'
              example:
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /cm/config:
    get:
      tags:
      - ClouderaManagerResource
      summary: Retrieve the Cloudera Manager settings.
      description: Retrieve the Cloudera Manager settings.
      operationId: getConfig
      parameters:
      - name: view
        in: query
        description: "The view to materialize, either \"summary\" or \"full\"."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - ClouderaManagerResource
      summary: Update the Cloudera Manager settings.
      description: |-
        Update the Cloudera Manager settings.
        <p>
        If a value is set in the given configuration, it will be added to the
        manager's settings, replacing any existing entry. If a value is unset (its
        value is null), the existing the setting will be erased.
        <p>
        Settings that are not listed in the input will maintain their current
        values.
      operationId: updateConfig
      parameters:
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Settings to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /cm/deployment:
    get:
      tags:
      - ClouderaManagerResource
      summary: |-
        Retrieve full description of the entire Cloudera Manager deployment
        including all hosts, clusters, services, roles, users, settings, etc.
      description: |-
        Retrieve full description of the entire Cloudera Manager deployment
        including all hosts, clusters, services, roles, users, settings, etc.
        <p/>
        This object can be used to reconstruct your entire deployment
        <p/>
        Note: Only users with sufficient privileges are allowed to call this.
        <ul>
        <li>Full Administrators</li>
        <li>Cluster Administrators (but Navigator config will be redacted)</li>
        </ul>
        <p/>
        Note: starting with v19, the deployment information contains a newer
        version of users ApiUser2 that can hold granular permissions.
      operationId: getDeployment2
      parameters:
      - name: view
        in: query
        description: |-
          May be one of "export" (default) or "export_redacted".  The latter
          replaces configurations that are sensitive with the word "REDACTED".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: export
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment2'
              example:
                timestamp: '...'
                clusters:
                - name: '...'
                  displayName: '...'
                  fullVersion: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - CLUSTER
                  services:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STOPPING
                    healthSummary: GOOD
                    configStalenessStatus: STALE_REFRESHABLE
                    clientConfigStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - SERVICE
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: NONE
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STARTED
                    healthSummary: BAD
                    configStalenessStatus: FRESH
                    clientConfigStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - CLUSTER
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STARTING
                  parcels:
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  clusterUrl: '...'
                  hostsUrl: '...'
                  entityStatus: NONE
                  uuid: '...'
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
                  clusterType: '...'
                - name: '...'
                  displayName: '...'
                  fullVersion: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  services:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: NA
                    healthSummary: DISABLED
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - HOST
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STOPPED
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STOPPING
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    clientConfigStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - ROLE
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: CONCERNING_HEALTH
                  parcels:
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  clusterUrl: '...'
                  hostsUrl: '...'
                  entityStatus: BAD_HEALTH
                  uuid: '...'
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
                  clusterType: '...'
                hosts:
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: BAD
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: COMMISSIONED
                  maintenanceOwners:
                  - ROLE
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: NONE
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: DISABLED
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: COMMISSIONED
                  maintenanceOwners:
                  - SERVICE
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: BAD_HEALTH
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                authRoles:
                - displayName: '...'
                  name: '...'
                  clusters:
                  - clusterName: '...'
                    displayName: '...'
                  - clusterName: '...'
                    displayName: '...'
                  users:
                  - name: '...'
                  - name: '...'
                  externalUserMappings:
                  - uuid: '...'
                    name: '...'
                    type: LDAP
                  - uuid: '...'
                    name: '...'
                    type: LDAP
                  baseRole:
                    displayName: '...'
                    name: '...'
                    uuid: '...'
                  uuid: '...'
                  isCustom: true
                - displayName: '...'
                  name: '...'
                  clusters:
                  - clusterName: '...'
                    displayName: '...'
                  - clusterName: '...'
                    displayName: '...'
                  users:
                  - name: '...'
                  - name: '...'
                  externalUserMappings:
                  - uuid: '...'
                    name: '...'
                    type: SAML_SCRIPT
                  - uuid: '...'
                    name: '...'
                    type: EXTERNAL_PROGRAM
                  baseRole:
                    displayName: '...'
                    name: '...'
                    uuid: '...'
                  uuid: '...'
                  isCustom: true
                externalUserMappings:
                - name: '...'
                  type: SAML_SCRIPT
                  uuid: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                - name: '...'
                  type: LDAP
                  uuid: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                users:
                - name: '...'
                  password: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  pwHash: '...'
                  pwSalt: 12345
                  pwLogin: true
                - name: '...'
                  password: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  pwHash: '...'
                  pwSalt: 12345
                  pwLogin: true
                versionInfo:
                  version: '...'
                  snapshot: true
                  buildUser: '...'
                  buildTimestamp: '...'
                  gitHash: '...'
                managementService:
                  name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTED
                  healthSummary: DISABLED
                  configStalenessStatus: FRESH
                  clientConfigStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPING
                    commissionState: DECOMMISSIONED
                    healthSummary: HISTORY_NOT_AVAILABLE
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_FOLLOWER
                    entityStatus: HISTORY_NOT_AVAILABLE
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: BUSY
                    commissionState: DECOMMISSIONING
                    healthSummary: BAD
                    configStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER
                    entityStatus: STOPPED
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: HOUR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: HOUR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: DOWN
                managerSettings:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                allHostsConfig:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                peers:
                - name: '...'
                  type: REPLICATION
                  url: '...'
                  username: '...'
                  password: '...'
                  clouderaManagerCreatedUser: true
                - name: '...'
                  type: REPLICATION
                  url: '...'
                  username: '...'
                  password: '...'
                  clouderaManagerCreatedUser: true
                hostTemplates:
                  items:
                  - name: '...'
                    clusterRef: {}
                    roleConfigGroupRefs:
                    - {}
                    - {}
                  - name: '...'
                    clusterRef: {}
                    roleConfigGroupRefs:
                    - {}
                    - {}
                dataContexts:
                  items:
                  - name: '...'
                    displayName: '...'
                    nameservice: '...'
                    createdTime: '...'
                    lastModifiedTime: '...'
                    services:
                    - {}
                    - {}
                    servicesDetails:
                    - {}
                    - {}
                    supportedServiceTypes:
                    - '...'
                    - '...'
                    allowedClusterVersions:
                    - {}
                    - {}
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: FRESH
                    healthSummary: BAD
                  - name: '...'
                    displayName: '...'
                    nameservice: '...'
                    createdTime: '...'
                    lastModifiedTime: '...'
                    services:
                    - {}
                    - {}
                    servicesDetails:
                    - {}
                    - {}
                    supportedServiceTypes:
                    - '...'
                    - '...'
                    allowedClusterVersions:
                    - {}
                    - {}
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: STALE
                    healthSummary: DISABLED
    put:
      tags:
      - ClouderaManagerResource
      summary: Apply the supplied deployment description to the system.
      description: |-
        Apply the supplied deployment description to the system. This will
        create the clusters, services, hosts and other objects specified in
        the argument. This call does not allow for any merge conflicts. If
        an entity already exists in the system, this call will fail.
        You can request, however, that all entities in the system are deleted
        before instantiating the new ones.
        <p/>
        You may specify a complete or partial deployment, e.g. you can provide
        host info with no clusters.  However, if you request that
        the current deployment be deleted, you are required to specify at
        least one admin user or this call will fail. This is to protect
        you from creating a system that cannot be logged into again.
        <p/>
        If there are any errors creating (or optionally deleting) a deployment,
        all changes will be rolled back leaving the system exactly as it was
        before calling this method.  The system will never be left in a state
        where part of the deployment is created and other parts are not.
        <p/>
        If the submitted deployment contains entities that require Cloudera
        Enterprise license, then the license should be provided to Cloudera Manager
        before making this API call.
      operationId: updateDeployment2
      parameters:
      - name: deleteCurrentDeployment
        in: query
        description: |-
          If true, the current deployment is deleted
          before the specified deployment is applied
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: The deployment to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDeployment2'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment2'
              example:
                timestamp: '...'
                clusters:
                - name: '...'
                  displayName: '...'
                  fullVersion: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - CLUSTER
                  services:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STARTED
                    healthSummary: GOOD
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - CLUSTER
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: BAD_HEALTH
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: HISTORY_NOT_AVAILABLE
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    clientConfigStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - SERVICE
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STOPPING
                  parcels:
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  clusterUrl: '...'
                  hostsUrl: '...'
                  entityStatus: BAD_HEALTH
                  uuid: '...'
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
                  clusterType: '...'
                - name: '...'
                  displayName: '...'
                  fullVersion: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - HOST
                  services:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: UNKNOWN
                    healthSummary: GOOD
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - CLUSTER
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STARTING
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STARTING
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: STALE_REFRESHABLE
                    clientConfigStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - HOST
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: DOWN
                  parcels:
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  clusterUrl: '...'
                  hostsUrl: '...'
                  entityStatus: NONE
                  uuid: '...'
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
                  clusterType: '...'
                hosts:
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: NOT_AVAILABLE
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: UNKNOWN
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: GOOD_HEALTH
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: CONCERNING
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: DECOMMISSIONING
                  maintenanceOwners:
                  - SERVICE
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: DOWN
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                authRoles:
                - displayName: '...'
                  name: '...'
                  clusters:
                  - clusterName: '...'
                    displayName: '...'
                  - clusterName: '...'
                    displayName: '...'
                  users:
                  - name: '...'
                  - name: '...'
                  externalUserMappings:
                  - uuid: '...'
                    name: '...'
                    type: EXTERNAL_PROGRAM
                  - uuid: '...'
                    name: '...'
                    type: EXTERNAL_PROGRAM
                  baseRole:
                    displayName: '...'
                    name: '...'
                    uuid: '...'
                  uuid: '...'
                  isCustom: true
                - displayName: '...'
                  name: '...'
                  clusters:
                  - clusterName: '...'
                    displayName: '...'
                  - clusterName: '...'
                    displayName: '...'
                  users:
                  - name: '...'
                  - name: '...'
                  externalUserMappings:
                  - uuid: '...'
                    name: '...'
                    type: LDAP
                  - uuid: '...'
                    name: '...'
                    type: SAML_SCRIPT
                  baseRole:
                    displayName: '...'
                    name: '...'
                    uuid: '...'
                  uuid: '...'
                  isCustom: true
                externalUserMappings:
                - name: '...'
                  type: SAML_SCRIPT
                  uuid: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                - name: '...'
                  type: SAML_ATTRIBUTE
                  uuid: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                users:
                - name: '...'
                  password: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  pwHash: '...'
                  pwSalt: 12345
                  pwLogin: true
                - name: '...'
                  password: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  pwHash: '...'
                  pwSalt: 12345
                  pwLogin: true
                versionInfo:
                  version: '...'
                  snapshot: true
                  buildUser: '...'
                  buildTimestamp: '...'
                  gitHash: '...'
                managementService:
                  name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STOPPING
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: BUSY
                    commissionState: DECOMMISSIONED
                    healthSummary: CONCERNING
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: UNKNOWN
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: BUSY
                    commissionState: COMMISSIONED
                    healthSummary: BAD
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: NONE
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: HOUR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: UNKNOWN
                managerSettings:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                allHostsConfig:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                peers:
                - name: '...'
                  type: REPLICATION
                  url: '...'
                  username: '...'
                  password: '...'
                  clouderaManagerCreatedUser: true
                - name: '...'
                  type: STATUS_AGGREGATION
                  url: '...'
                  username: '...'
                  password: '...'
                  clouderaManagerCreatedUser: true
                hostTemplates:
                  items:
                  - name: '...'
                    clusterRef: {}
                    roleConfigGroupRefs:
                    - {}
                    - {}
                  - name: '...'
                    clusterRef: {}
                    roleConfigGroupRefs:
                    - {}
                    - {}
                dataContexts:
                  items:
                  - name: '...'
                    displayName: '...'
                    nameservice: '...'
                    createdTime: '...'
                    lastModifiedTime: '...'
                    services:
                    - {}
                    - {}
                    servicesDetails:
                    - {}
                    - {}
                    supportedServiceTypes:
                    - '...'
                    - '...'
                    allowedClusterVersions:
                    - {}
                    - {}
                    configStalenessStatus: FRESH
                    clientConfigStalenessStatus: STALE
                    healthSummary: CONCERNING
                  - name: '...'
                    displayName: '...'
                    nameservice: '...'
                    createdTime: '...'
                    lastModifiedTime: '...'
                    services:
                    - {}
                    - {}
                    servicesDetails:
                    - {}
                    - {}
                    supportedServiceTypes:
                    - '...'
                    - '...'
                    allowedClusterVersions:
                    - {}
                    - {}
                    configStalenessStatus: STALE_REFRESHABLE
                    clientConfigStalenessStatus: STALE
                    healthSummary: DISABLED
      x-codegen-request-body-name: body
  /cm/importClusterTemplate:
    post:
      tags:
      - ClouderaManagerResource
      summary: Create cluster as per the given cluster template.
      description: Create cluster as per the given cluster template
      operationId: importClusterTemplate
      parameters:
      - name: addRepositories
        in: query
        description: |-
          if true the parcels repositories in the cluster
          template will be added.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: cluster template
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClusterTemplate'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/kerberosInfo:
    get:
      tags:
      - ClouderaManagerResource
      summary: Provides Cloudera Manager Kerberos information.
      description: Provides Cloudera Manager Kerberos information
      operationId: getKerberosInfo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKerberosInfo'
              example:
                kerberized: true
                kdcType: '...'
                kerberosRealm: '...'
                kdcHost: '...'
                adminHost: '...'
                domain:
                - '...'
                - '...'
  /cm/kerberosPrincipals:
    get:
      tags:
      - ClouderaManagerResource
      summary: |-
        Returns the Kerberos principals needed by the services being managed
        by Cloudera Manager.
      description: |-
        Returns the Kerberos principals needed by the services being managed
        by Cloudera Manager.
      operationId: getKerberosPrincipals
      parameters:
      - name: missingOnly
        in: query
        description: |-
          Whether to include only those principals which do
          not already exist in Cloudera Manager's database.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPrincipalList'
              example:
                items:
                - '...'
                - '...'
  /cm/license:
    get:
      tags:
      - ClouderaManagerResource
      summary: Retrieve information about the Cloudera Manager license.
      description: Retrieve information about the Cloudera Manager license.
      operationId: readLicense
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicense'
              example:
                owner: '...'
                uuid: '...'
                expiration: '...'
                features:
                - name: '...'
                  enabled: true
                  description: '...'
                - name: '...'
                  enabled: true
                  description: '...'
                deactivationDate: '...'
                startDate: '...'
    post:
      tags:
      - ClouderaManagerResource
      summary: Updates the Cloudera Manager license.
      description: |-
        Updates the Cloudera Manager license.
        <p>
        After a new license is installed, the Cloudera Manager needs to be
        restarted for the changes to take effect.
        <p>
        The license file should be uploaded using a request with content type
        "multipart/form-data", instead of being encoded into a JSON representation.
      operationId: updateLicense
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/cm_license_body'
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicense'
              example:
                owner: '...'
                uuid: '...'
                expiration: '...'
                features:
                - name: '...'
                  enabled: true
                  description: '...'
                - name: '...'
                  enabled: true
                  description: '...'
                deactivationDate: '...'
                startDate: '...'
  /cm/licensedFeatureUsage:
    get:
      tags:
      - ClouderaManagerResource
      summary: Retrieve a summary of licensed feature usage.
      description: |-
        Retrieve a summary of licensed feature usage.
        <p/>
        This command will return information about what Cloudera Enterprise
        licensed features are in use in the clusters being managed by this Cloudera
        Manager, as well as totals for usage across all clusters.
        <p/>
        The specific features described can vary between different versions of
        Cloudera Manager.
        <p/>
        Available since API v6.
      operationId: getLicensedFeatureUsage
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicensedFeatureUsage'
              example:
                totals:
                  property1: 12345
                  property2: 12345
                clusters:
                  property1: {}
                  property2: {}
  /cm/log:
    get:
      tags:
      - ClouderaManagerResource
      summary: Returns the entire contents of the Cloudera Manager log file.
      description: Returns the entire contents of the Cloudera Manager log file
      operationId: getLog
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /cm/scmDbInfo:
    get:
      tags:
      - ClouderaManagerResource
      summary: Provides Cloudera Manager server's database information.
      description: Provides Cloudera Manager server's database information
      operationId: getScmDbInfo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiScmDbInfo'
              example:
                scmDbType: POSTGRESQL
                embeddedDbUsed: true
  /cm/shutdownReadiness:
    get:
      tags:
      - ClouderaManagerResource
      summary: Retrieve Cloudera Manager's readiness for shutdown and destroy.
      description: |-
        Retrieve Cloudera Manager's readiness for shutdown and destroy.
        Applications that wish to destroy Cloudera Manager and its managed cluster
        should poll this API, repeatedly if necessary, to respect its readiness.
      operationId: getShutdownReadiness
      parameters:
      - name: lastActivityTime
        in: query
        description: |-
          End time of the last known activity/workload
          against the managed clusters, in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiShutdownReadiness'
              example:
                state: NOT_READY
  /cm/version:
    get:
      tags:
      - ClouderaManagerResource
      summary: Provides version information of Cloudera Manager itself.
      description: Provides version information of Cloudera Manager itself.
      operationId: getVersion
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionInfo'
              example:
                version: '...'
                snapshot: true
                buildUser: '...'
                buildTimestamp: '...'
                gitHash: '...'
  /cm/commands/addCustomCerts:
    post:
      tags:
      - ClouderaManagerResource
      summary: Add custom certificates to the Auto-TLS certificate database.
      description: Add custom certificates to the Auto-TLS certificate database
      operationId: addCustomCerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAddCustomCertsArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/clustersPerfInspector:
    post:
      tags:
      - ClouderaManagerResource
      summary: |-
        Run performance diagnostics test against specified clusters
        in ApiClustersPerfInspectorArgs

        User must be Full Administrator or Global Cluster Administrator.
      description: |-
        Run performance diagnostics test against specified clusters
        in ApiClustersPerfInspectorArgs

        User must be Full Administrator or Global Cluster Administrator.
      operationId: clustersPerfInspectorCommand
      requestBody:
        description: Required arguments for the command. See ApiClustersPerfInspectorArgs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClustersPerfInspectorArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/collectDiagnosticData:
    post:
      tags:
      - ClouderaManagerResource
      summary: Collect diagnostic data from hosts managed by Cloudera Manager.
      description: |-
        Collect diagnostic data from hosts managed by Cloudera Manager.
        <p>
        After the command has completed, the ApiCommand will contain a
        resultDataUrl from where you can download the result.
        <p/>
        Only available with Cloudera Manager Enterprise Edition.
      operationId: collectDiagnosticDataCommand
      requestBody:
        description: The command arguments.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCollectDiagnosticDataArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/deleteCredentials:
    post:
      tags:
      - ClouderaManagerResource
      summary: Delete existing Kerberos credentials.
      description: |-
        Delete existing Kerberos credentials.
        <p>
        This command will affect all services that have been configured to use
        Kerberos, and have existing credentials. In V18 this takes a new
        paramater to determine whether it needs to delete all credentials
        or just unused ones.
      operationId: deleteCredentialsCommand
      parameters:
      - name: deleteCredentialsMode
        in: query
        description: this can be set to "all" or "unused"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/commands/generateCmca:
    post:
      tags:
      - ClouderaManagerResource
      summary: Generate a CMCA.
      description: Generate a CMCA
      operationId: generateCmca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiGenerateCmcaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/generateCredentials:
    post:
      tags:
      - ClouderaManagerResource
      summary: Generate missing Kerberos credentials.
      description: |-
        Generate missing Kerberos credentials.
        <p>
        This command will affect all services that have been configured to use
        Kerberos, and haven't had their credentials generated yet.
      operationId: generateCredentialsCommand
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/commands/hostInstall:
    post:
      tags:
      - ClouderaManagerResource
      summary: Perform installation on a set of hosts.
      description: |-
        Perform installation on a set of hosts.
        <p/>
        This command installs Cloudera Manager Agent on a
        set of hosts.
        <p/>
        Available since API v6.
      operationId: hostInstallCommand
      requestBody:
        description: Hosts to perform installation on
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostInstallArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/hostsDecommission:
    post:
      tags:
      - ClouderaManagerResource
      summary: Decommission the given hosts.
      description: |-
        Decommission the given hosts.
        All slave roles on the hosts will be decommissioned.
        All other roles will be stopped.
      operationId: hostsDecommissionCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/hostsOfflineOrDecommission:
    post:
      tags:
      - ClouderaManagerResource
      summary: Decommission the given hosts.
      description: |-
        Decommission the given hosts.
        All slave roles on the hosts will be offlined or decommissioned with
        preference being offlined if supported by the service.
        <p>
        Currently the offline operation is only supported by HDFS, where
        the offline operation will put DataNodes into <em>HDFS IN MAINTENANCE</em> state which
        prevents unnecessary re-replication which could occur if decommissioned.
        <p>
        All other roles on the hosts will be stopped.
        <p>
        The <em>offlineTimeout</em> parameter is used to specify a timeout for offline. For HDFS, when the
        timeout expires, the DataNode will automatically transition out of <em>HDFS IN MAINTENANCE</em> state,
        back to <em>HDFS IN SERVICE</em> state.
        <p>
      operationId: hostsOfflineOrDecommissionCommand
      parameters:
      - name: offlineTimeout
        in: query
        description: |-
          offline timeout in seconds. Specify as null to get the default timeout (4 hours).
          Ignored if service does not support he offline operation.
        required: false
        style: form
        explode: true
        schema:
          type: number
      requestBody:
        description: list of host names to decommission.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/hostsPerfInspector:
    post:
      tags:
      - ClouderaManagerResource
      summary: |-
        Run performance diagnostics test against specified hosts in
        ApiHostsPerfInspectorArgs

        User must be Full Administrator or Global Cluster Administrator.
      description: |-
        Run performance diagnostics test against specified hosts in
        ApiHostsPerfInspectorArgs

        User must be Full Administrator or Global Cluster Administrator.
      operationId: hostsPerfInspectorCommand
      requestBody:
        description: Required arguments for the command. See ApiHostsPerfInspectorArgs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostsPerfInspectorArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/hostsRecommission:
    post:
      tags:
      - ClouderaManagerResource
      summary: Recommission the given hosts.
      description: |-
        Recommission the given hosts.
        All slave roles on the hosts will be recommissioned.
        Roles are not started after this command. Use hostsStartRoles command
        for that.
      operationId: hostsRecommissionCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/hostsRecommissionAndExitMaintenanceMode:
    post:
      tags:
      - ClouderaManagerResource
      summary: Recommission and exit maintenance on the given hosts.
      description: |-
        Recommission and exit maintenance on the given hosts.
        The recommission step may optionally start roles as well.
      operationId: hostsRecommissionAndExitMaintenanceModeCommand
      parameters:
      - name: recommissionType
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: recommission
          enum:
          - RECOMMISSION
          - RECOMMISSION_WITH_START
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/hostsRecommissionWithStart:
    post:
      tags:
      - ClouderaManagerResource
      summary: Recommission the given hosts.
      description: |-
        Recommission the given hosts. If slave roles support start when decommissioned,
        start those roles before recommission.
        All slave roles on the hosts will be recommissioned.

        Warning: Evolving. This method may change in the future and does not offer standard compatibility guarantees.
        Recommission the given hosts. If possible, start those roles before recommission. All slave roles on the hosts
        will be recommissioned.
        Do not use without guidance from Cloudera.

        Currently, only HDFS DataNodes will be started by this command.
      operationId: hostsRecommissionWithStartCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/hostsStartRoles:
    post:
      tags:
      - ClouderaManagerResource
      summary: Start all the roles on the given hosts.
      description: Start all the roles on the given hosts.
      operationId: hostsStartRolesCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /cm/commands/importAdminCredentials:
    post:
      tags:
      - ClouderaManagerResource
      summary: |-
        Imports the KDC Account Manager credentials needed by Cloudera
        Manager to create kerberos principals needed by CDH services.
      description: |-
        Imports the KDC Account Manager credentials needed by Cloudera
        Manager to create kerberos principals needed by CDH services.
      operationId: importAdminCredentials
      parameters:
      - name: password
        in: query
        description: |-
          Password for the Account Manager.

          return Information about the submitted command.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: username
        in: query
        description: |-
          Username of the Account Manager. Full name including the Kerberos
          realm must be specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/commands/importKerberosPrincipal:
    post:
      tags:
      - ClouderaManagerResource
      summary: |-
        Imports the Kerberos credentials for the specified principal
        which can then be used to add to a role's keytab by running
        Generate Credentials command.
      description: |-
        Imports the Kerberos credentials for the specified principal
        which can then be used to add to a role's keytab by running
        Generate Credentials command.
      operationId: importKerberosPrincipal
      parameters:
      - name: kvno
        in: query
        description: |-
          Key-version number of the password.

          return Information about the submitted command.
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: password
        in: query
        description: |-
          Password for the Kerberos principal. Cloudera Manager
          will encrypt the principal and password and use it when needed for a daemon.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: principal
        in: query
        description: |-
          Name of the principal. Full name including the Kerberos
          realm must be specified. If it already exists, it will be overwritten.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/commands/inspectHosts:
    post:
      tags:
      - ClouderaManagerResource
      summary: Runs the host inspector on the configured hosts.
      description: Runs the host inspector on the configured hosts.
      operationId: inspectHostsCommand
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/commands/refreshParcelRepos:
    post:
      tags:
      - ClouderaManagerResource
      summary: "."
      description: |-
        <p>
        Submit a command to refresh parcels information.
        </p>
        <p>
        This API could be used following two scenarios.<br>
        - User updated Cloudera Manager's local parcel repository. <br>
        - User updated remote parcel locations.
        <p>
        User wants to invoke this API to make sure that Cloudera Manager gets
        latest parcels information. User can then monitor the returned command
        before proceeding to the next step.
        </p>
      operationId: refreshParcelRepos
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/trial/begin:
    post:
      tags:
      - ClouderaManagerResource
      summary: Begin trial license.
      description: Begin trial license.
      operationId: beginTrial
      responses:
        "201":
          description: Success
          content: {}
  /cm/trial/end:
    post:
      tags:
      - ClouderaManagerResource
      summary: End trial license.
      description: End trial license.
      operationId: endTrial
      responses:
        "201":
          description: Success
          content: {}
  /clusters:
    get:
      tags:
      - ClustersResource
      summary: List all known clusters.
      description: List all known clusters.
      operationId: readClusters
      parameters:
      - name: clusterType
        in: query
        description: "Type of cluster, either \"any\", \"base\" or \"compute\". Default\
          \ is \"base\"."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: base
          enum:
          - ANY
          - BASE
          - COMPUTE
      - name: view
        in: query
        description: "The view of the data to materialize, either \"summary\" or \"\
          full\"."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClusterList'
              example:
                items:
                - name: '...'
                  displayName: '...'
                  fullVersion: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - CLUSTER
                  services:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STARTED
                    healthSummary: BAD
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - HOST
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STOPPING
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: HISTORY_NOT_AVAILABLE
                    healthSummary: GOOD
                    configStalenessStatus: FRESH
                    clientConfigStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - SERVICE
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STOPPED
                  parcels:
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  clusterUrl: '...'
                  hostsUrl: '...'
                  entityStatus: HISTORY_NOT_AVAILABLE
                  uuid: '...'
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
                  clusterType: '...'
                - name: '...'
                  displayName: '...'
                  fullVersion: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  services:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STARTED
                    healthSummary: BAD
                    configStalenessStatus: STALE_REFRESHABLE
                    clientConfigStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - CLUSTER
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: UNKNOWN_HEALTH
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STARTED
                    healthSummary: HISTORY_NOT_AVAILABLE
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - CLUSTER
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: DISABLED_HEALTH
                  parcels:
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  clusterUrl: '...'
                  hostsUrl: '...'
                  entityStatus: STOPPED
                  uuid: '...'
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
                  clusterType: '...'
    post:
      tags:
      - ClustersResource
      summary: Creates a collection of clusters.
      description: Creates a collection of clusters.
      operationId: createClusters
      requestBody:
        description: List of clusters to created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClusterList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClusterList'
              example:
                items:
                - name: '...'
                  displayName: '...'
                  fullVersion: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - SERVICE
                  services:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STARTING
                    healthSummary: BAD
                    configStalenessStatus: FRESH
                    clientConfigStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - SERVICE
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STOPPING
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STOPPING
                    healthSummary: CONCERNING
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - SERVICE
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: HISTORY_NOT_AVAILABLE
                  parcels:
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  clusterUrl: '...'
                  hostsUrl: '...'
                  entityStatus: STOPPED
                  uuid: '...'
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
                  clusterType: '...'
                - name: '...'
                  displayName: '...'
                  fullVersion: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - HOST
                  services:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: HISTORY_NOT_AVAILABLE
                    healthSummary: DISABLED
                    configStalenessStatus: FRESH
                    clientConfigStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - HOST
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: HISTORY_NOT_AVAILABLE
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STOPPED
                    healthSummary: GOOD
                    configStalenessStatus: STALE
                    clientConfigStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - ROLE
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STARTING
                  parcels:
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  - product: '...'
                    version: '...'
                    stage: '...'
                    state: {}
                    clusterRef: {}
                  clusterUrl: '...'
                  hostsUrl: '...'
                  entityStatus: STARTING
                  uuid: '...'
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
                  clusterType: '...'
      x-codegen-request-body-name: body
  /clusters/{clusterName}:
    get:
      tags:
      - ClustersResource
      summary: Reads information about a cluster.
      description: Reads information about a cluster.
      operationId: readCluster
      parameters:
      - name: clusterName
        in: path
        description: Name of cluster to look up.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCluster'
              example:
                name: '...'
                displayName: '...'
                fullVersion: '...'
                maintenanceMode: true
                maintenanceOwners:
                - ROLE
                - SERVICE
                services:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STOPPING
                  healthSummary: GOOD
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - ROLE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPING
                    commissionState: DECOMMISSIONED
                    healthSummary: BAD
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                    entityStatus: CONCERNING_HEALTH
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTED
                    commissionState: DECOMMISSIONED
                    healthSummary: CONCERNING
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - CLUSTER
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_FOLLOWER
                    entityStatus: NONE
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MONTH
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: GOOD_HEALTH
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTED
                  healthSummary: DISABLED
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: HISTORY_NOT_AVAILABLE
                    commissionState: OFFLINING
                    healthSummary: HISTORY_NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: BAD_HEALTH
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTED
                    commissionState: OFFLINING
                    healthSummary: HISTORY_NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - CLUSTER
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_FOLLOWER
                    entityStatus: UNKNOWN_HEALTH
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: DAY
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: DAY
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: UNKNOWN
                parcels:
                - product: '...'
                  version: '...'
                  stage: '...'
                  state:
                    progress: 12345
                    totalProgress: 12345
                    count: 12345
                    totalCount: 12345
                    errors:
                    - '...'
                    - '...'
                    warnings:
                    - '...'
                    - '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - product: '...'
                  version: '...'
                  stage: '...'
                  state:
                    progress: 12345
                    totalProgress: 12345
                    count: 12345
                    totalCount: 12345
                    errors:
                    - '...'
                    - '...'
                    warnings:
                    - '...'
                    - '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                clusterUrl: '...'
                hostsUrl: '...'
                entityStatus: UNKNOWN_HEALTH
                uuid: '...'
                dataContextRefs:
                - name: '...'
                - name: '...'
                clusterType: '...'
    put:
      tags:
      - ClustersResource
      summary: Update an existing cluster.
      description: |-
        Update an existing cluster.
        <p>
        To update the CDH version, provide the new value in the "fullVersion"
        property. Setting a correct version that matches the actual installed software
        will ensure the correct version-specific features, such as services, roles,
        commands, and configurations. This need not be manually set for clusters
        using parcels. In general this action is only necessary after the CDH
        packages have been manually updated. Note that a downgrade may be rejected
        if it would render existing services or roles unusable. For major upgrade,
        the "upgradeService" cluster command should be used instead.</p>
        <p>
        To rename the cluster, provide the new name in the "displayName"
        property for API >= 6, or in the "name" property for API <=5.
        <p>
        Available since API v2.
      operationId: updateCluster
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCluster'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCluster'
              example:
                name: '...'
                displayName: '...'
                fullVersion: '...'
                maintenanceMode: true
                maintenanceOwners:
                - ROLE
                - SERVICE
                services:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: NA
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: STALE
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - ROLE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: HISTORY_NOT_AVAILABLE
                    commissionState: DECOMMISSIONED
                    healthSummary: DISABLED
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: STANDALONE
                    entityStatus: STOPPED
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPED
                    commissionState: UNKNOWN
                    healthSummary: CONCERNING
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: NONE
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: DAY
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: DAY
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: HISTORY_NOT_AVAILABLE
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTING
                  healthSummary: BAD
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: HISTORY_NOT_AVAILABLE
                    commissionState: DECOMMISSIONING
                    healthSummary: DISABLED
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: NONE
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPED
                    commissionState: OFFLINING
                    healthSummary: GOOD
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: NONE
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MONTH
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: HOUR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: UNKNOWN
                parcels:
                - product: '...'
                  version: '...'
                  stage: '...'
                  state:
                    progress: 12345
                    totalProgress: 12345
                    count: 12345
                    totalCount: 12345
                    errors:
                    - '...'
                    - '...'
                    warnings:
                    - '...'
                    - '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - product: '...'
                  version: '...'
                  stage: '...'
                  state:
                    progress: 12345
                    totalProgress: 12345
                    count: 12345
                    totalCount: 12345
                    errors:
                    - '...'
                    - '...'
                    warnings:
                    - '...'
                    - '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                clusterUrl: '...'
                hostsUrl: '...'
                entityStatus: BAD_HEALTH
                uuid: '...'
                dataContextRefs:
                - name: '...'
                - name: '...'
                clusterType: '...'
      x-codegen-request-body-name: body
    delete:
      tags:
      - ClustersResource
      summary: Deletes a cluster.
      description: Deletes a cluster.
      operationId: deleteCluster
      parameters:
      - name: clusterName
        in: path
        description: Name of cluster to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCluster'
              example:
                name: '...'
                displayName: '...'
                fullVersion: '...'
                maintenanceMode: true
                maintenanceOwners:
                - HOST
                - HOST
                services:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTING
                  healthSummary: BAD
                  configStalenessStatus: FRESH
                  clientConfigStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - HOST
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPING
                    commissionState: COMMISSIONED
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: STANDALONE
                    entityStatus: HISTORY_NOT_AVAILABLE
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTING
                    commissionState: OFFLINED
                    healthSummary: CONCERNING
                    configStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                    entityStatus: UNKNOWN
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: WEEK
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MINUTE
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: DOWN
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTING
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - HOST
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPING
                    commissionState: UNKNOWN
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                    entityStatus: STOPPING
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: UNKNOWN
                    commissionState: UNKNOWN
                    healthSummary: HISTORY_NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER
                    entityStatus: STARTING
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: WEEK
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: BAD_HEALTH
                parcels:
                - product: '...'
                  version: '...'
                  stage: '...'
                  state:
                    progress: 12345
                    totalProgress: 12345
                    count: 12345
                    totalCount: 12345
                    errors:
                    - '...'
                    - '...'
                    warnings:
                    - '...'
                    - '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - product: '...'
                  version: '...'
                  stage: '...'
                  state:
                    progress: 12345
                    totalProgress: 12345
                    count: 12345
                    totalCount: 12345
                    errors:
                    - '...'
                    - '...'
                    warnings:
                    - '...'
                    - '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                clusterUrl: '...'
                hostsUrl: '...'
                entityStatus: DOWN
                uuid: '...'
                dataContextRefs:
                - name: '...'
                - name: '...'
                clusterType: '...'
  /clusters/{clusterName}/autoAssignRoles:
    put:
      tags:
      - ClustersResource
      summary: Automatically assign roles to hosts and create the roles for all the
        services in a cluster.
      description: |-
        Automatically assign roles to hosts and create the roles for all the services in a cluster.
        <p>
        Assignments are done based on services and hosts in the cluster, and hardware specifications.
        If no hosts are added to the cluster, an exception will be thrown preventing any
        role assignments.
        Existing roles will be taken into account and their assignments will be
        not be modified.
        <p>
        Available since API v6.
      operationId: autoAssignRoles
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content: {}
  /clusters/{clusterName}/autoConfigure:
    put:
      tags:
      - ClustersResource
      summary: Automatically configures roles and services in a cluster.
      description: |-
        Automatically configures roles and services in a cluster.
        <p>
        Overwrites some existing configurations. Might create new role config groups.
        Only default role config groups must exist before calling this endpoint.
        Other role config groups must not exist. If they do, an exception will be thrown
        preventing any configuration.
        Ignores the Cloudera Management Service even if colocated with roles of this
        cluster. To avoid over-committing the heap on hosts, assign hosts to this cluster
        that are not being used by the Cloudera Management Service.
        <p>
        Available since API v6.
      operationId: autoConfigure
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content: {}
  /clusters/{clusterName}/clientConfig:
    get:
      tags:
      - ClustersResource
      summary: |-
        Download a zip-compressed archive of the client configuration, of a
        specific cluster.
      description: |-
        Download a zip-compressed archive of the client configuration, of a
        specific cluster. Currently, this only includes Kerberos Client
        Configuration (krb5.conf). For client configuration of services, use the
        clientConfig endpoint of the services resource. This resource does not
        require any authentication.
      operationId: getClientConfig
      parameters:
      - name: clusterName
        in: path
        description: The cluster name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                description: ""
                format: binary
                x-content-type: application/octet-stream
  /clusters/{clusterName}/commands:
    get:
      tags:
      - ClustersResource
      summary: List active cluster commands.
      description: List active cluster commands.
      operationId: listActiveCommands
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandList'
              example:
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /clusters/{clusterName}/dfsServices:
    get:
      tags:
      - ClustersResource
      summary: List the services that can provide distributed file system (DFS) capabilities
        in this cluster.
      description: List the services that can provide distributed file system (DFS)
        capabilities in this cluster.
      operationId: listDfsServices
      parameters:
      - name: clusterName
        in: path
        description: cluster name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: data view required for matching services
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceList'
              example:
                items:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTED
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: FRESH
                  clientConfigStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - SERVICE
                  - SERVICE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTED
                    commissionState: OFFLINING
                    healthSummary: GOOD
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_FOLLOWER
                    entityStatus: STARTING
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTING
                    commissionState: OFFLINED
                    healthSummary: CONCERNING
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER
                    entityStatus: GOOD_HEALTH
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: WEEK
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MINUTE
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: GOOD_HEALTH
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: UNKNOWN
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: STALE
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - ROLE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTED
                    commissionState: OFFLINING
                    healthSummary: GOOD
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - CLUSTER
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_OBSERVER
                    entityStatus: DOWN
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPING
                    commissionState: DECOMMISSIONED
                    healthSummary: CONCERNING
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_OBSERVER
                    entityStatus: HISTORY_NOT_AVAILABLE
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MINUTE
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: DAY
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: STARTING
  /clusters/{clusterName}/export:
    get:
      tags:
      - ClustersResource
      summary: Export the cluster template for the given cluster.
      description: |-
        Export the cluster template for the given cluster. If cluster does not have
        host templates defined it will export host templates based on roles
        assignment.
      operationId: export
      parameters:
      - name: clusterName
        in: path
        description: cluster name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: exportAutoConfig
        in: query
        description: export configs set by the auto configuration
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClusterTemplate'
              example:
                cdhVersion: '...'
                products:
                - version: '...'
                  product: '...'
                - version: '...'
                  product: '...'
                services:
                - refName: '...'
                  serviceType: '...'
                  serviceConfigs:
                  - name: '...'
                    value: '...'
                    ref: '...'
                    variable: '...'
                    autoConfig: true
                  - name: '...'
                    value: '...'
                    ref: '...'
                    variable: '...'
                    autoConfig: true
                  roleConfigGroups:
                  - refName: '...'
                    roleType: '...'
                    base: true
                    displayName: '...'
                    configs:
                    - {}
                    - {}
                  - refName: '...'
                    roleType: '...'
                    base: true
                    displayName: '...'
                    configs:
                    - {}
                    - {}
                  roles:
                  - refName: '...'
                    roleType: '...'
                  - refName: '...'
                    roleType: '...'
                  displayName: '...'
                - refName: '...'
                  serviceType: '...'
                  serviceConfigs:
                  - name: '...'
                    value: '...'
                    ref: '...'
                    variable: '...'
                    autoConfig: true
                  - name: '...'
                    value: '...'
                    ref: '...'
                    variable: '...'
                    autoConfig: true
                  roleConfigGroups:
                  - refName: '...'
                    roleType: '...'
                    base: true
                    displayName: '...'
                    configs:
                    - {}
                    - {}
                  - refName: '...'
                    roleType: '...'
                    base: true
                    displayName: '...'
                    configs:
                    - {}
                    - {}
                  roles:
                  - refName: '...'
                    roleType: '...'
                  - refName: '...'
                    roleType: '...'
                  displayName: '...'
                hostTemplates:
                - refName: '...'
                  roleConfigGroupsRefNames:
                  - '...'
                  - '...'
                  cardinality: 12345
                - refName: '...'
                  roleConfigGroupsRefNames:
                  - '...'
                  - '...'
                  cardinality: 12345
                displayName: '...'
                cmVersion: '...'
                instantiator:
                  clusterName: '...'
                  hosts:
                  - hostName: '...'
                    hostNameRange: '...'
                    rackId: '...'
                    hostTemplateRefName: '...'
                    roleRefNames:
                    - '...'
                    - '...'
                  - hostName: '...'
                    hostNameRange: '...'
                    rackId: '...'
                    hostTemplateRefName: '...'
                    roleRefNames:
                    - '...'
                    - '...'
                  variables:
                  - name: '...'
                    value: '...'
                  - name: '...'
                    value: '...'
                  roleConfigGroups:
                  - rcgRefName: '...'
                    name: '...'
                  - rcgRefName: '...'
                    name: '...'
                  clusterSpec:
                    dataContextRefs:
                    - {}
                    - {}
                repositories:
                - '...'
                - '...'
                clusterSpec:
                  dataContextRefs:
                  - name: '...'
                  - name: '...'
  /clusters/{clusterName}/hosts:
    get:
      tags:
      - ClustersResource
      operationId: listHosts
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostRefList'
              example:
                items:
                - hostId: '...'
                  hostname: '...'
                - hostId: '...'
                  hostname: '...'
    post:
      tags:
      - ClustersResource
      operationId: addHosts
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostRefList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostRefList'
              example:
                items:
                - hostId: '...'
                  hostname: '...'
                - hostId: '...'
                  hostname: '...'
      x-codegen-request-body-name: body
    delete:
      tags:
      - ClustersResource
      operationId: removeAllHosts
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostRefList'
              example:
                items:
                - hostId: '...'
                  hostname: '...'
                - hostId: '...'
                  hostname: '...'
  /clusters/{clusterName}/kerberosInfo:
    get:
      tags:
      - ClustersResource
      summary: Provides Cluster Kerberos information.
      description: Provides Cluster Kerberos information
      operationId: getKerberosInfo
      parameters:
      - name: clusterName
        in: path
        description: The cluster name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKerberosInfo'
              example:
                kerberized: true
                kdcType: '...'
                kerberosRealm: '...'
                kdcHost: '...'
                adminHost: '...'
                domain:
                - '...'
                - '...'
  /clusters/{clusterName}/serviceTypes:
    get:
      tags:
      - ClustersResource
      summary: List the supported service types for a cluster.
      description: List the supported service types for a cluster.
      operationId: listServiceTypes
      parameters:
      - name: clusterName
        in: path
        description: The cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceTypeList'
              example:
                items:
                - '...'
                - '...'
  /clusters/{clusterName}/utilization:
    get:
      tags:
      - ClustersResource
      summary: |-
        Provides the resource utilization of the entire cluster as well as the
        resource utilization per tenant.
      description: |-
        Provides the resource utilization of the entire cluster as well as the
        resource utilization per tenant. Only available with Cloudera Manager Enterprise Edition.
      operationId: getUtilizationReport
      parameters:
      - name: clusterName
        in: path
        description: cluster name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: daysOfWeek
        in: query
        description: |-
          The days of the week for which the user wants to report utilization.
          Days is a list of number between 1 to 7, where 1 corresponds to Monday,
          and 7 corrensponds to Sunday. All 7 days are included if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: endHourOfDay
        in: query
        description: |-
          The end hour of a day for which the user wants to report utilization.
          The hour is a number between [0-23]. Default value is 23 if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 23
      - name: from
        in: query
        description: Start of the time range to report utilization in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startHourOfDay
        in: query
        description: |-
          The start hour of a day for which the user wants to report utilization.
          The hour is a number between [0-23]. Default value is 0 if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: tenantType
        in: query
        description: The type of the tenant (POOL or USER).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: POOL
      - name: to
        in: query
        description: End of the the time range to report utilization in ISO 8601 format
          (defaults to now).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClusterUtilization'
              example:
                totalCpuCores: 12345.0
                avgCpuUtilization: 12345.0
                maxCpuUtilization: 12345.0
                avgCpuDailyPeak: 12345.0
                avgWorkloadCpu: 12345.0
                maxWorkloadCpu: 12345.0
                avgWorkloadCpuDailyPeak: 12345.0
                totalMemory: 12345.0
                avgMemoryUtilization: 12345.0
                maxMemoryUtilization: 12345.0
                avgMemoryDailyPeak: 12345.0
                avgWorkloadMemory: 12345.0
                maxWorkloadMemory: 12345.0
                avgWorkloadMemoryDailyPeak: 12345.0
                tenantUtilizations:
                  items:
                  - tenantName: '...'
                    cpuUtilizationPercentage: 12345.0
                    memoryUtilizationPercentage: 12345.0
                  - tenantName: '...'
                    cpuUtilizationPercentage: 12345.0
                    memoryUtilizationPercentage: 12345.0
                maxCpuUtilizationTimestampMs: 12345
                maxMemoryUtilizationTimestampMs: 12345
                maxWorkloadCpuTimestampMs: 12345
                maxWorkloadMemoryTimestampMs: 12345
                errorMessage: '...'
  /clusters/{clusterName}/commands/configureAutoTlsServices:
    post:
      tags:
      - ClustersResource
      summary: Configures all services in a cluster to use Auto-TLS.
      description: Configures all services in a cluster to use Auto-TLS
      operationId: configureAutoTlsServicesCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/configureForKerberos:
    post:
      tags:
      - ClustersResource
      summary: Command to configure the cluster to use Kerberos for authentication.
      description: |-
        Command to configure the cluster to use Kerberos for authentication.

        This command will configure all relevant services on a cluster for
        Kerberos usage.  This command will trigger a GenerateCredentials command
        to create Kerberos keytabs for all roles in the cluster.
      operationId: configureForKerberos
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the configure for kerberos command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigureForKerberosArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/commands/deleteCredentials:
    post:
      tags:
      - ClustersResource
      summary: Delete existing Kerberos credentials for the cluster.
      description: |-
        Delete existing Kerberos credentials for the cluster.
        <p>
        This command will affect all services that have been configured to use
        Kerberos, and have existing credentials.
      operationId: deleteClusterCredentialsCommand
      parameters:
      - name: clusterName
        in: path
        description: cluster name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/deployClientConfig:
    post:
      tags:
      - ClustersResource
      summary: Deploy the cluster-wide client configuration.
      description: |-
        Deploy the cluster-wide client configuration.

        <p>For each service in the cluster, deploy the service's client configuration
        to all the hosts that the service runs on.</p>

        <p>Available since API v2.</p>
      operationId: deployClientConfig
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/deployClusterClientConfig:
    post:
      tags:
      - ClustersResource
      summary: Deploy the Cluster's Kerberos client configuration.
      description: |-
        Deploy the Cluster's Kerberos client configuration.

        <p>
        Deploy krb5.conf to hosts in a cluster. Does not deploy to decommissioned
        hosts or hosts with active processes.
        </p>

        <p>
        Available since API v7.
        </p>
      operationId: deployClusterClientConfig
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          Hosts in cluster to deploy to. If empty, will target all eligible
          hosts in the cluster.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostRefList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/commands/enterMaintenanceMode:
    post:
      tags:
      - ClustersResource
      summary: Put the cluster into maintenance mode.
      description: |-
        Put the cluster into maintenance mode. This is a synchronous command.
        The result is known immediately upon return.

        <p>Available since API v2.</p>
      operationId: enterMaintenanceMode
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/exitMaintenanceMode:
    post:
      tags:
      - ClustersResource
      summary: Take the cluster out of maintenance mode.
      description: |-
        Take the cluster out of maintenance mode. This is a synchronous command.
        The result is known immediately upon return.

        <p>Available since API v2.</p>
      operationId: exitMaintenanceMode
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/expireLogs:
    post:
      tags:
      - ClustersResource
      summary: Remove backup and disaster related log files in hdfs.
      description: |-
        Remove backup and disaster related log files in hdfs.
        <p>
        Available since API v31.
      operationId: expireLogs
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: days
        in: query
        description: logs more than these many days old are purged. -2 to use the
          existing setting
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/firstRun:
    post:
      tags:
      - ClustersResource
      summary: Prepare and start services in a cluster.
      description: |-
        Prepare and start services in a cluster.

        <p>
        Perform all the steps needed to prepare each service in a cluster and start the services
        in order.
        </p>

        <p>
        Available since API v7.
        </p>
      operationId: firstRun
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/inspectHosts:
    post:
      tags:
      - ClustersResource
      summary: Runs the host inspector on the configured hosts in the specified cluster.
      description: |-
        Runs the host inspector on the configured hosts in the specified cluster.

        Available since V8.
      operationId: inspectHostsCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/perfInspector:
    post:
      tags:
      - ClustersResource
      summary: Run cluster performance diagnostics test.
      description: Run cluster performance diagnostics test.
      operationId: perfInspectorCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Optional arguments for the command. See ApiClusterPerfInspectorArgs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClusterPerfInspectorArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/commands/poolsRefresh:
    post:
      tags:
      - ClustersResource
      summary: |-
        Updates all refreshable configuration files for services with
        Dynamic Resource Pools.
      description: |-
        Updates all refreshable configuration files for services with
        Dynamic Resource Pools.
        <p>
        Available since API v6.
      operationId: poolsRefresh
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/preUpgradeCheck:
    post:
      tags:
      - ClustersResource
      summary: |-
        Run cluster pre-upgrade check(s) when upgrading from
        specified version of CDH to the other.
      description: |-
        Run cluster pre-upgrade check(s) when upgrading from
        specified version of CDH to the other.
        <p>
        Allows the following upgrade checks:
        <ul>
        <li>Minor upgrades from any CDH 5 to any CDH 5</li>
        <li>Major upgrades from any CDH 5 to any CDH 6</li>
        <li>Minor upgrades from any CDH 6 to any CDH 6</li>
        <li>Maintenance upgrades or downgrades (a.b.x to a.b.y)</li>
        </ul>
      operationId: preUpgradeCheckCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command. See ApiCdhUpgradeArgs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCdhUpgradeArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/commands/refresh:
    post:
      tags:
      - ClustersResource
      summary: Updates all refreshable configuration files in the cluster.
      description: |-
        Updates all refreshable configuration files in the cluster. Will not
        restart any roles.
        <p>
        Available since API v6.
      operationId: refresh
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/restart:
    post:
      tags:
      - ClustersResource
      summary: Restart all services in the cluster.
      description: |-
        Restart all services in the cluster.
        <p>
        Services are stopped then started in the appropriate order given their
        dependencies. The command can optionally restart only stale services and
        their dependencies as well as redeploy client configuration on all services
        in the cluster.
      operationId: restartCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: arguments for the restart command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRestartClusterArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/commands/rollingRestart:
    post:
      tags:
      - ClustersResource
      summary: |-
        Command to do a "best-effort" rolling restart of the given cluster,
        i.
      description: |-
        Command to do a "best-effort" rolling restart of the given cluster,
        i.e. it does plain restart of services that cannot be rolling restarted,
        followed by first rolling restarting non-slaves and then rolling restarting
        the slave roles of services that can be rolling restarted. The slave restarts
        are done host-by-host.
        <p>
        Available since API v4. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: rollingRestart
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the rolling restart command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRollingRestartClusterArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/commands/rollingUpgrade:
    post:
      tags:
      - ClustersResource
      summary: |-
        Command to do a rolling upgrade of specific services in the given cluster

        This command does not handle any services that don't support rolling
        upgrades.
      description: |-
        Command to do a rolling upgrade of specific services in the given cluster

        This command does not handle any services that don't support rolling
        upgrades. The command will throw an error and not start if upgrade of any
        such service is requested.

        This command does not upgrade the full CDH Cluster. You should normally
        use the upgradeCDH Command for upgrading the cluster. This is primarily
        helpful if you need to need to recover from an upgrade failure or for
        advanced users to script an alternative to the upgradeCdhCommand.

        This command expects the binaries to be available on hosts and activated.
        It does not change any binaries on the hosts.
      operationId: rollingUpgrade
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the rolling upgrade command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRollingUpgradeServicesArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/commands/start:
    post:
      tags:
      - ClustersResource
      summary: Start all services in the cluster.
      description: |-
        Start all services in the cluster.
        <p>
        Services are started in the appropriate order given their dependencies.
      operationId: startCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/stop:
    post:
      tags:
      - ClustersResource
      summary: Stop all services in the cluster.
      description: |-
        Stop all services in the cluster.
        <p>
        Services are stopped in the appropriate order given their dependencies.
      operationId: stopCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/commands/upgradeCdh:
    post:
      tags:
      - ClustersResource
      summary: Perform CDH upgrade to the specified version.
      description: |-
        Perform CDH upgrade to the specified version.
        <p>
        Allows the following upgrades:
        <ul>
        <li>Major upgrades from any CDH 4 to any CDH 5</li>
        <li>Minor upgrades from any CDH 5 to any CDH 5</li>
        <li>Maintenance upgrades or downgrades (a.b.x to a.b.y)</li>
        </ul>
        <p>
        If using packages, CDH packages on all hosts of the cluster must be
        manually upgraded before this command is issued.
        <p>
        The command will upgrade the services and their configuration to the
        version available in the CDH5 distribution.
        <p>
        Unless rolling upgrade options are provided, the entire cluster will
        experience downtime. If rolling upgrade options are provided, command will
        do a "best-effort" rolling upgrade of the given cluster, i.e. it does
        plain upgrade of services that cannot be rolling upgraded, followed by
        first rolling upgrading non-slaves and then rolling restarting the slave
        roles of services that can be rolling restarted. The slave restarts are
        done host-by-host.
        <p>
        Available since v9. Rolling upgrade is only available with Cloudera
        Manager Enterprise Edition. A more limited upgrade variant available since
        v6.
      operationId: upgradeCdhCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command. See ApiCdhUpgradeArgs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCdhUpgradeArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/commands/upgradeServices:
    post:
      tags:
      - ClustersResource
      summary: Upgrades the services in the cluster to the CDH5 version.
      description: |-
        Upgrades the services in the cluster to the CDH5 version.
        <p>
        This command requires that the CDH packages in the hosts used by the
        cluster be upgraded to CDH5 before this command is issued. Once issued,
        this command will stop all running services before proceeding.
        <p>
        If parcels are used instead of CDH system packages then the following
        steps need to happen in order:
        <ol>
        <li>Stop all services manually</li>
        <li>Activate parcel</li>
        <li>Run this upgrade command</li>
        </ol>
        The command will upgrade the services and their configuration to the
        version available in the CDH5 distribution.
      operationId: upgradeServicesCommand
      parameters:
      - name: clusterName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
  /clusters/{clusterName}/hosts/{hostId}:
    delete:
      tags:
      - ClustersResource
      operationId: removeHost
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: hostId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostRef'
              example:
                hostId: '...'
                hostname: '...'
  /cm/peers:
    get:
      tags:
      - CmPeersResource
      summary: Retrieves all configured Cloudera Manager peers.
      description: |-
        Retrieves all configured Cloudera Manager peers.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
        <p>
        When accessed via API version before v11, only REPLICATION type peers will
        be returned.
      operationId: listPeers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCmPeerList'
              example:
                items:
                - name: '...'
                  type: REPLICATION
                  url: '...'
                  username: '...'
                  password: '...'
                  clouderaManagerCreatedUser: true
                - name: '...'
                  type: STATUS_AGGREGATION
                  url: '...'
                  username: '...'
                  password: '...'
                  clouderaManagerCreatedUser: true
    post:
      tags:
      - CmPeersResource
      summary: Create a new Cloudera Manager peer.
      description: |-
        Create a new Cloudera Manager peer.
        <p>
        The remote server will be contacted so that a user can be created
        for use by the new peer. The <i>username</i> and <i>password</i>
        properties of the provided peer object should contain credentials
        of a valid admin user on the remote server. A timeout of 10 seconds
        is enforced when contacting the remote server.
        <p>
        It is recommended to run the remote server with TLS enabled, since
        creating and using peers involve transferring credentials over the
        network.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
        <p>
        Type field in ApiCmPeer is available since API v11. if not specified
        when making createPeer() call, 'REPLICATION' type peer will be created.
      operationId: createPeer
      requestBody:
        description: Peer to create (see above).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCmPeer'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCmPeer'
              example:
                name: '...'
                type: REPLICATION
                url: '...'
                username: '...'
                password: '...'
                clouderaManagerCreatedUser: true
      x-codegen-request-body-name: body
  /cm/peers/{peerName}:
    get:
      tags:
      - CmPeersResource
      summary: Fetch information about an existing Cloudera Manager peer.
      description: |-
        Fetch information about an existing Cloudera Manager peer.
        <p>
        Available since API v11. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: readPeer
      parameters:
      - name: peerName
        in: path
        description: Name of peer to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: |-
          Type of peer to retrieve. If null, REPLICATION peer type
          will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - REPLICATION
          - STATUS_AGGREGATION
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCmPeer'
              example:
                name: '...'
                type: REPLICATION
                url: '...'
                username: '...'
                password: '...'
                clouderaManagerCreatedUser: true
    put:
      tags:
      - CmPeersResource
      summary: Update information for a Cloudera Manager peer.
      description: |-
        Update information for a Cloudera Manager peer.
        <p>
        In administrator credentials are provided in the peer information, they
        will be used to establish new credentials with the remote server. This
        can be used in case the old credentials are not working anymore. An
        attempt will be made to delete the old credentials if new ones are
        successfully created.
        <p>
        If changing the peer's URL, an attempt will be made to contact the old
        Cloudera Manager to delete the existing credentials.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: updatePeer
      parameters:
      - name: peerName
        in: path
        description: Name of peer to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated peer information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCmPeer'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCmPeer'
              example:
                name: '...'
                type: STATUS_AGGREGATION
                url: '...'
                username: '...'
                password: '...'
                clouderaManagerCreatedUser: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - CmPeersResource
      summary: Delete Cloudera Manager peer.
      description: |-
        Delete Cloudera Manager peer.
        <p>
        An attempt will be made to contact the peer server, so that the configured
        user can be deleted.. Errors while contacting the remote server are
        non-fatal.
        <p>
        Available since API v11. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: deletePeer
      parameters:
      - name: peerName
        in: path
        description: Name of peer to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: |-
          Type of peer to delete. If null, REPLICATION peer type will
          be deleted.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - REPLICATION
          - STATUS_AGGREGATION
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCmPeer'
              example:
                name: '...'
                type: REPLICATION
                url: '...'
                username: '...'
                password: '...'
                clouderaManagerCreatedUser: true
  /cm/peers/{peerName}/commands/test:
    post:
      tags:
      - CmPeersResource
      summary: Test the connectivity of a peer.
      description: |-
        Test the connectivity of a peer.
        <p>
        Available since API v11. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: testPeer
      parameters:
      - name: peerName
        in: path
        description: Name of peer to test.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: |-
          Type of peer to test. If null, REPLICATION peer type will
          be tested.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - REPLICATION
          - STATUS_AGGREGATION
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /commands/{commandId}:
    get:
      tags:
      - CommandsResource
      summary: Retrieve detailed information on an asynchronous command.
      description: |-
        Retrieve detailed information on an asynchronous command.

        <p>Cloudera Manager keeps the results and statuses of asynchronous
        commands, which have non-negative command IDs. On the other hand,
        synchronous commands complete immediately, and their results are passed
        back in the return object of the command execution API call.
        Outside of that return object, there is no way to check the result
        of a synchronous command.</p>
      operationId: readCommand
      parameters:
      - name: commandId
        in: path
        description: The command id.
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /commands/{commandId}/abort:
    post:
      tags:
      - CommandsResource
      summary: Abort a running command.
      description: Abort a running command.
      operationId: abortCommand
      parameters:
      - name: commandId
        in: path
        description: The command id.
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /commands/{commandId}/retry:
    post:
      tags:
      - CommandsResource
      summary: Try to rerun a command.
      description: Try to rerun a command.
      operationId: retry
      parameters:
      - name: commandId
        in: path
        description: ID of the command that needs to be run.
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /timeseries/dashboards:
    get:
      tags:
      - DashboardsResource
      summary: Returns the list of all user-customized dashboards.
      description: |-
        Returns the list of all user-customized dashboards. This includes both the
        new dashboards created by users as well as any user customizations to
        built-in dashboards.
        <p>
        Available since API v6.
      operationId: getDashboards
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDashboardList'
              example:
                items:
                - name: '...'
                  json: '...'
                - name: '...'
                  json: '...'
    post:
      tags:
      - DashboardsResource
      summary: Creates the list of dashboards.
      description: |-
        Creates the list of dashboards. If any of the dashboards already exist
        this whole command will fail and no dashboards will be created.
        <p>
        Available since API v6.
      operationId: createDashboards
      requestBody:
        description: The list of dashboards to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDashboardList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDashboardList'
              example:
                items:
                - name: '...'
                  json: '...'
                - name: '...'
                  json: '...'
      x-codegen-request-body-name: body
  /timeseries/dashboards/{dashboardName}:
    get:
      tags:
      - DashboardsResource
      summary: Returns a dashboard definition for the specified name.
      description: |-
        Returns a dashboard definition for the specified name. This dashboard
        can be imported with the createDashboards API.
        <p>
        Available since API v6.
      operationId: getDashboard
      parameters:
      - name: dashboardName
        in: path
        description: The name of the dashboard.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDashboard'
              example:
                name: '...'
                json: '...'
    delete:
      tags:
      - DashboardsResource
      summary: Deletes a dashboard.
      description: |-
        Deletes a dashboard.

        <p>
        Available since API v6.
      operationId: deleteDashboard
      parameters:
      - name: dashboardName
        in: path
        description: The name of the dashboard.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDashboard'
              example:
                name: '...'
                json: '...'
  /dataContexts:
    get:
      tags:
      - DataContextsResource
      summary: Get all the datacontexts.
      description: Get all the datacontexts.
      operationId: readDataContexts
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataContextList'
              example:
                items:
                - name: '...'
                  displayName: '...'
                  nameservice: '...'
                  createdTime: '...'
                  lastModifiedTime: '...'
                  services:
                  - peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  - peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  servicesDetails:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: HISTORY_NOT_AVAILABLE
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: STALE_REFRESHABLE
                    clientConfigStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - CLUSTER
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: BAD_HEALTH
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: NA
                    healthSummary: GOOD
                    configStalenessStatus: STALE_REFRESHABLE
                    clientConfigStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - CLUSTER
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: CONCERNING_HEALTH
                  supportedServiceTypes:
                  - '...'
                  - '...'
                  allowedClusterVersions:
                  - key: '...'
                    value: '...'
                  - key: '...'
                    value: '...'
                  configStalenessStatus: FRESH
                  clientConfigStalenessStatus: STALE
                  healthSummary: BAD
                - name: '...'
                  displayName: '...'
                  nameservice: '...'
                  createdTime: '...'
                  lastModifiedTime: '...'
                  services:
                  - peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  - peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  servicesDetails:
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: STARTING
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: STALE_REFRESHABLE
                    clientConfigStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - HOST
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: CONCERNING_HEALTH
                  - name: '...'
                    type: '...'
                    clusterRef: {}
                    serviceState: UNKNOWN
                    healthSummary: GOOD
                    configStalenessStatus: FRESH
                    clientConfigStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    serviceUrl: '...'
                    roleInstancesUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - SERVICE
                    config: {}
                    roles:
                    - {}
                    - {}
                    displayName: '...'
                    roleConfigGroups:
                    - {}
                    - {}
                    replicationSchedules:
                    - {}
                    - {}
                    snapshotPolicies:
                    - {}
                    - {}
                    entityStatus: STARTING
                  supportedServiceTypes:
                  - '...'
                  - '...'
                  allowedClusterVersions:
                  - key: '...'
                    value: '...'
                  - key: '...'
                    value: '...'
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: FRESH
                  healthSummary: GOOD
    post:
      tags:
      - DataContextsResource
      summary: Create a datacontext.
      description: |-
        Create a datacontext. Following are are required fields of ApiDataContext
        ApiDataContext#setName(String) <br>
        ApiDataContext#setDisplayName(String) <br>
        ApiDataContext#setServices(java.util.List) <br>
      operationId: createDataContext
      requestBody:
        description: DataContext to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDataContext'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataContext'
              example:
                name: '...'
                displayName: '...'
                nameservice: '...'
                createdTime: '...'
                lastModifiedTime: '...'
                services:
                - peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                - peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                servicesDetails:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STOPPING
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - SERVICE
                  - ROLE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: UNKNOWN
                    commissionState: OFFLINING
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: HISTORY_NOT_AVAILABLE
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: BUSY
                    commissionState: OFFLINED
                    healthSummary: HISTORY_NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - CLUSTER
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_OBSERVER
                    entityStatus: BAD_HEALTH
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MINUTE
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: GOOD_HEALTH
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STOPPING
                  healthSummary: DISABLED
                  configStalenessStatus: FRESH
                  clientConfigStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - SERVICE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: UNKNOWN
                    commissionState: DECOMMISSIONED
                    healthSummary: GOOD
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: DOWN
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: BUSY
                    commissionState: OFFLINING
                    healthSummary: HISTORY_NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - CLUSTER
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_OBSERVER
                    entityStatus: UNKNOWN
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: HOUR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: DAY
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: STOPPING
                supportedServiceTypes:
                - '...'
                - '...'
                allowedClusterVersions:
                - key: '...'
                  value: '...'
                - key: '...'
                  value: '...'
                configStalenessStatus: STALE
                clientConfigStalenessStatus: STALE
                healthSummary: CONCERNING
      x-codegen-request-body-name: body
  /dataContexts/{dataContextName}:
    get:
      tags:
      - DataContextsResource
      summary: Reads information about a datacontext.
      description: Reads information about a datacontext.
      operationId: readDataContext
      parameters:
      - name: dataContextName
        in: path
        description: Name of the datacontext.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataContext'
              example:
                name: '...'
                displayName: '...'
                nameservice: '...'
                createdTime: '...'
                lastModifiedTime: '...'
                services:
                - peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                - peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                servicesDetails:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STOPPING
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - SERVICE
                  - HOST
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: HISTORY_NOT_AVAILABLE
                    commissionState: OFFLINED
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                    entityStatus: STOPPED
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTED
                    commissionState: UNKNOWN
                    healthSummary: CONCERNING
                    configStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: STANDALONE
                    entityStatus: DOWN
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MONTH
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MINUTE
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: BAD_HEALTH
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTED
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: FRESH
                  clientConfigStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - HOST
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: NA
                    commissionState: OFFLINING
                    healthSummary: BAD
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: UNKNOWN
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTED
                    commissionState: DECOMMISSIONED
                    healthSummary: GOOD
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: STANDALONE
                    entityStatus: STOPPING
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: HOUR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MINUTE
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: BAD_HEALTH
                supportedServiceTypes:
                - '...'
                - '...'
                allowedClusterVersions:
                - key: '...'
                  value: '...'
                - key: '...'
                  value: '...'
                configStalenessStatus: STALE_REFRESHABLE
                clientConfigStalenessStatus: STALE
                healthSummary: GOOD
    delete:
      tags:
      - DataContextsResource
      summary: Delete a datacontext.
      description: Delete a datacontext.
      operationId: deleteDataContext
      parameters:
      - name: dataContextName
        in: path
        description: Name of the datacontext.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataContext'
              example:
                name: '...'
                displayName: '...'
                nameservice: '...'
                createdTime: '...'
                lastModifiedTime: '...'
                services:
                - peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                - peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                servicesDetails:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STOPPED
                  healthSummary: BAD
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - SERVICE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPED
                    commissionState: COMMISSIONED
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_FOLLOWER
                    entityStatus: UNKNOWN
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: HISTORY_NOT_AVAILABLE
                    commissionState: OFFLINING
                    healthSummary: GOOD
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                    entityStatus: UNKNOWN
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MONTH
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MINUTE
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: STOPPED
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STOPPED
                  healthSummary: CONCERNING
                  configStalenessStatus: FRESH
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - CLUSTER
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: NA
                    commissionState: UNKNOWN
                    healthSummary: DISABLED
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: STOPPED
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPING
                    commissionState: UNKNOWN
                    healthSummary: BAD
                    configStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER
                    entityStatus: GOOD_HEALTH
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: HOUR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: STARTING
                supportedServiceTypes:
                - '...'
                - '...'
                allowedClusterVersions:
                - key: '...'
                  value: '...'
                - key: '...'
                  value: '...'
                configStalenessStatus: STALE_REFRESHABLE
                clientConfigStalenessStatus: FRESH
                healthSummary: CONCERNING
  /events:
    get:
      tags:
      - EventsResource
      summary: Allows you to query events in the system.
      description: Allows you to query events in the system.
      operationId: readEvents
      parameters:
      - name: maxResults
        in: query
        description: The maximum number of events to return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: query
        in: query
        description: |-
          The query to perform to find events in the system. It accepts
          querying the intersection of a list of constraints,
          joined together with semicolons (without spaces). For example:
          </p>
          <dl>
          <dt>alert==true</dt>
          <dd>looks for alerts.</dd>
          <dt>alert==true;attributes.host!=flaky.mysite.com</dt>
          <dd>looks for alerts, but exclude those with the host attribute of
          "flaky.mysite.com".</dd>
          <dt>category==log_event;attributes.log_level==ERROR</dt>
          <dd>looks for error log events. Event attribute matching is
          case sensitive.</dd>
          <dt>attributes.service==hbase1;content==hlog</dt>
          <dd>looks for any events from the "hbase1" service that
          mention "hlog".</dd>
          <dt>attributes.service==hbase1;content!=hlog</dt>
          <dd>looks for any events from the "hbase1" service that
          do not mention "hlog".<br/>
          A query must not contain only negative
          constraints (<em>!=</em>). It returns empty results because
          there is nothing to perform exclusion on.</dd>
          <dt>attributes.role_type==NAMENODE;severity==critical important</dt>
          <dd>looks for any important or critical events related to
          all NameNodes.</dd>
          <dt>severity==critical;timeReceived=ge=2012-05-04T00:00;timeReceived=lt=2012-05-04T00:10</dt>
          <dd>looks for critical events received between the given 10 minute
          range. <br/>
          When polling for events, use <em>timeReceived</em>
          instead of <em>timeOccurred</em> because events arrive
          out of order.</dd>
          </dl>

          You may query any fields present in the ApiEvent object. You can
          also query by event attribute values using the <em>attributes.*</em>
          syntax. Values for date time fields (e.g. <em>timeOccurred</em>,
          <em>timeReceived</em>) should be ISO8601 timestamps.
          <p>
          The other valid comparators are <em>=lt=</em>, <em>=le=</em>,
          <em>=ge=</em>, and <em>=gt=</em>. They stand for "&lt;", "&lt;=",
          "&gt;=", "&gt;" respectively. These comparators are only applicable
          for date time fields.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resultOffset
        in: query
        description: Specified the offset of events to return.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEventQueryResult'
              example:
                totalResults: 12345
                items:
                - id: '...'
                  content: '...'
                  timeOccurred: '...'
                  timeReceived: '...'
                  category: LOG_EVENT
                  severity: INFORMATIONAL
                  alert: true
                  attributes:
                  - name: '...'
                    values:
                    - '...'
                    - '...'
                  - name: '...'
                    values:
                    - '...'
                    - '...'
                - id: '...'
                  content: '...'
                  timeOccurred: '...'
                  timeReceived: '...'
                  category: SYSTEM
                  severity: UNKNOWN
                  alert: true
                  attributes:
                  - name: '...'
                    values:
                    - '...'
                    - '...'
                  - name: '...'
                    values:
                    - '...'
                    - '...'
  /events/{eventId}:
    get:
      tags:
      - EventsResource
      summary: Returns a specific event in the system.
      description: Returns a specific event in the system
      operationId: readEvent
      parameters:
      - name: eventId
        in: path
        description: The UUID of the event to read
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEvent'
              example:
                id: '...'
                content: '...'
                timeOccurred: '...'
                timeReceived: '...'
                category: HBASE
                severity: CRITICAL
                alert: true
                attributes:
                - name: '...'
                  values:
                  - '...'
                  - '...'
                - name: '...'
                  values:
                  - '...'
                  - '...'
  /externalAccounts/create:
    post:
      tags:
      - ExternalAccountsResource
      summary: Create a new external account.
      description: |-
        Create a new external account.
        Account names and display names must be unique, i.e. they must not share names or display
        names with an existing account.
        Server generates an account ID for the requested account.
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiExternalAccount'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalAccount'
              example:
                name: '...'
                displayName: '...'
                createdTime: '...'
                lastModifiedTime: '...'
                typeName: '...'
                accountConfigs:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /externalAccounts/supportedCategories:
    get:
      tags:
      - ExternalAccountsResource
      summary: List of external account categories supported by this Cloudera Manager.
      description: List of external account categories supported by this Cloudera
        Manager.
      operationId: getSupportedCategories
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalAccountCategoryList'
              example:
                items:
                - name: '...'
                  displayName: '...'
                  description: '...'
                - name: '...'
                  displayName: '...'
                  description: '...'
  /externalAccounts/update:
    put:
      tags:
      - ExternalAccountsResource
      summary: Update an external account.
      description: Update an external account.
      operationId: updateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiExternalAccount'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalAccount'
              example:
                name: '...'
                displayName: '...'
                createdTime: '...'
                lastModifiedTime: '...'
                typeName: '...'
                accountConfigs:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /externalAccounts/account/{name}:
    get:
      tags:
      - ExternalAccountsResource
      summary: Get a single external account by account name.
      description: Get a single external account by account name.
      operationId: readAccount
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalAccount'
              example:
                name: '...'
                displayName: '...'
                createdTime: '...'
                lastModifiedTime: '...'
                typeName: '...'
                accountConfigs:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
  /externalAccounts/accountByDisplayName/{displayName}:
    get:
      tags:
      - ExternalAccountsResource
      summary: Get a single external account by display name.
      description: Get a single external account by display name.
      operationId: readAccountByDisplayName
      parameters:
      - name: displayName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalAccount'
              example:
                name: '...'
                displayName: '...'
                createdTime: '...'
                lastModifiedTime: '...'
                typeName: '...'
                accountConfigs:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
  /externalAccounts/delete/{name}:
    delete:
      tags:
      - ExternalAccountsResource
      summary: "Delete an external account, specifying its name."
      description: "Delete an external account, specifying its name."
      operationId: deleteAccount
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalAccount'
              example:
                name: '...'
                displayName: '...'
                createdTime: '...'
                lastModifiedTime: '...'
                typeName: '...'
                accountConfigs:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
  /externalAccounts/supportedTypes/{categoryName}:
    get:
      tags:
      - ExternalAccountsResource
      summary: List of external account types supported by this Cloudera Manager by
        category.
      description: List of external account types supported by this Cloudera Manager
        by category.
      operationId: getSupportedTypes
      parameters:
      - name: categoryName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalAccountTypeList'
              example:
                items:
                - name: '...'
                  categoryName: '...'
                  type: '...'
                  displayName: '...'
                  description: '...'
                  allowedAccountConfigs:
                    items:
                    - {}
                    - {}
                - name: '...'
                  categoryName: '...'
                  type: '...'
                  displayName: '...'
                  description: '...'
                  allowedAccountConfigs:
                    items:
                    - {}
                    - {}
  /externalAccounts/type/{typeName}:
    get:
      tags:
      - ExternalAccountsResource
      summary: Get a list of external accounts for a specific account type.
      description: Get a list of external accounts for a specific account type.
      operationId: readAccounts
      parameters:
      - name: typeName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalAccountList'
              example:
                items:
                - name: '...'
                  displayName: '...'
                  createdTime: '...'
                  lastModifiedTime: '...'
                  typeName: '...'
                  accountConfigs:
                    items:
                    - {}
                    - {}
                - name: '...'
                  displayName: '...'
                  createdTime: '...'
                  lastModifiedTime: '...'
                  typeName: '...'
                  accountConfigs:
                    items:
                    - {}
                    - {}
  /externalAccounts/account/{name}/config:
    get:
      tags:
      - ExternalAccountsResource
      summary: Get configs of external account for the given account name.
      description: Get configs of external account for the given account name.
      operationId: readConfig
      parameters:
      - name: name
        in: path
        description: The external account name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: "The view to materialize, either \"summary\" or \"full\"."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - ExternalAccountsResource
      summary: Upadate configs of external account for the given account name.
      description: Upadate configs of external account for the given account name.
      operationId: updateConfig
      parameters:
      - name: name
        in: path
        description: The external account name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Settings to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /externalAccounts/typeInfo/{typeName}/commandsByName:
    get:
      tags:
      - ExternalAccountsResource
      summary: |-
        Lists all the commands that can be executed by name on the
        provided external account type.
      description: |-
        Lists all the commands that can be executed by name on the
        provided external account type.
        <p>
        Available since API v16.
      operationId: listExternalAccountCommands
      parameters:
      - name: typeName
        in: path
        description: The external account type name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandMetadataList'
              example:
                items:
                - name: '...'
                  argSchema: '...'
                - name: '...'
                  argSchema: '...'
  /externalAccounts/account/{name}/commands/{commandName}:
    post:
      tags:
      - ExternalAccountsResource
      summary: |-
        Executes a command on the external account specified
        by name.
      description: |-
        Executes a command on the external account specified
        by name.
        <p>
        Available since API v16.
      operationId: externalAccountCommandByName
      parameters:
      - name: commandName
        in: path
        description: The command name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: The external account name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /externalUserMappings:
    get:
      tags:
      - ExternalUserMappingsResource
      summary: Returns a list of the external user mappings configured in the system.
      description: Returns a list of the external user mappings configured in the
        system.
      operationId: readExternalUserMappings
      parameters:
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalUserMappingList'
              example:
                items:
                - name: '...'
                  type: SAML_ATTRIBUTE
                  uuid: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                - name: '...'
                  type: EXTERNAL_PROGRAM
                  uuid: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
    post:
      tags:
      - ExternalUserMappingsResource
      summary: Creates a list of external user mappings.
      description: Creates a list of external user mappings
      operationId: createExternalUserMappings
      requestBody:
        description: List of external user mappings to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiExternalUserMappingList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalUserMappingList'
              example:
                items:
                - name: '...'
                  type: EXTERNAL_PROGRAM
                  uuid: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                - name: '...'
                  type: EXTERNAL_PROGRAM
                  uuid: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
      x-codegen-request-body-name: body
  /externalUserMappings/{uuid}:
    get:
      tags:
      - ExternalUserMappingsResource
      summary: Returns detailed information about an external user mapping.
      description: Returns detailed information about an external user mapping.
      operationId: readExternalUserMapping
      parameters:
      - name: uuid
        in: path
        description: The external user mapping to read.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalUserMapping'
              example:
                name: '...'
                type: SAML_ATTRIBUTE
                uuid: '...'
                authRoles:
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                - displayName: '...'
                  name: '...'
                  uuid: '...'
    put:
      tags:
      - ExternalUserMappingsResource
      summary: Updates the given external user mapping's information.
      description: Updates the given external user mapping's information.
      operationId: updateExternalUserMapping
      parameters:
      - name: uuid
        in: path
        description: Uuid of the external user mapping being updated.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The external user mapping information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiExternalUserMapping'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalUserMapping'
              example:
                name: '...'
                type: SAML_ATTRIBUTE
                uuid: '...'
                authRoles:
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                - displayName: '...'
                  name: '...'
                  uuid: '...'
      x-codegen-request-body-name: body
    delete:
      tags:
      - ExternalUserMappingsResource
      summary: Deletes an external user mapping from the system.
      description: |-
        Deletes an external user mapping from the system.
        <p/>
      operationId: deleteExternalUserMapping
      parameters:
      - name: uuid
        in: path
        description: The uuid of the external user mapping to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExternalUserMapping'
              example:
                name: '...'
                type: SAML_SCRIPT
                uuid: '...'
                authRoles:
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                - displayName: '...'
                  name: '...'
                  uuid: '...'
  /clusters/{clusterName}/hostTemplates:
    get:
      tags:
      - HostTemplatesResource
      summary: Lists all host templates in a cluster.
      description: |-
        Lists all host templates in a cluster.
        <p>
        Available since API v3.
      operationId: readHostTemplates
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostTemplateList'
              example:
                items:
                - name: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  roleConfigGroupRefs:
                  - roleConfigGroupName: '...'
                  - roleConfigGroupName: '...'
                - name: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  roleConfigGroupRefs:
                  - roleConfigGroupName: '...'
                  - roleConfigGroupName: '...'
    post:
      tags:
      - HostTemplatesResource
      summary: Creates new host templates.
      description: |-
        Creates new host templates.
        <p>
        Host template names must be unique across clusters.
        <p>
        Available since API v3.
      operationId: createHostTemplates
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The list of host templates to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostTemplateList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostTemplateList'
              example:
                items:
                - name: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  roleConfigGroupRefs:
                  - roleConfigGroupName: '...'
                  - roleConfigGroupName: '...'
                - name: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  roleConfigGroupRefs:
                  - roleConfigGroupName: '...'
                  - roleConfigGroupName: '...'
      x-codegen-request-body-name: body
  /clusters/{clusterName}/hostTemplates/{hostTemplateName}:
    get:
      tags:
      - HostTemplatesResource
      summary: Retrieves information about a host template.
      description: |-
        Retrieves information about a host template.
        <p>
        Available since API v3.
      operationId: readHostTemplate
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: hostTemplateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostTemplate'
              example:
                name: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                roleConfigGroupRefs:
                - roleConfigGroupName: '...'
                - roleConfigGroupName: '...'
    put:
      tags:
      - HostTemplatesResource
      summary: Updates an existing host template.
      description: |-
        Updates an existing host template.
        <p>
        Can be used to update the role config groups in a host template
        or rename it.
        <p>
        Available since API v3.
      operationId: updateHostTemplate
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: hostTemplateName
        in: path
        description: Host template with updated fields.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostTemplate'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostTemplate'
              example:
                name: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                roleConfigGroupRefs:
                - roleConfigGroupName: '...'
                - roleConfigGroupName: '...'
      x-codegen-request-body-name: body
    delete:
      tags:
      - HostTemplatesResource
      summary: Deletes a host template.
      description: |-
        Deletes a host template.
        <p>
        Available since API v3.
      operationId: deleteHostTemplate
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: hostTemplateName
        in: path
        description: Host template to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostTemplate'
              example:
                name: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                roleConfigGroupRefs:
                - roleConfigGroupName: '...'
                - roleConfigGroupName: '...'
  /clusters/{clusterName}/hostTemplates/{hostTemplateName}/commands/applyHostTemplate:
    post:
      tags:
      - HostTemplatesResource
      summary: Applies a host template to a collection of hosts.
      description: |-
        Applies a host template to a collection of hosts. This will create a role
        for each role config group on each of the hosts.
        <p>
        The provided hosts must not have any existing roles on them and if the
        cluster is not using parcels, the hosts must have a CDH version matching
        that of the cluster version.
        <p>
        Available since API v3.
      operationId: applyHostTemplate
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: hostTemplateName
        in: path
        description: Host template to apply.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startRoles
        in: query
        description: Whether to start the newly created roles or not.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: List of hosts to apply the host template to.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostRefList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /hosts:
    get:
      tags:
      - HostsResource
      summary: Returns the hostIds for all hosts in the system.
      description: Returns the hostIds for all hosts in the system.
      operationId: readHosts
      parameters:
      - name: view
        in: query
        description: The view to materialize
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostList'
              example:
                items:
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: GOOD
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: UNKNOWN
                  maintenanceOwners:
                  - SERVICE
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: NONE
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: CONCERNING
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: OFFLINING
                  maintenanceOwners:
                  - HOST
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: HISTORY_NOT_AVAILABLE
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
    post:
      tags:
      - HostsResource
      summary: "."
      description: |-
        <p>Create one or more hosts.</p>
        <p>You must specify at least the
        hostname and ipAddress in the request objects.
        If no hostId is specified, it will be set to the
        hostname.  It is an error to try and create
        host with the same hostId as another host.</p>
      operationId: createHosts
      requestBody:
        description: The list of hosts to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHostList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostList'
              example:
                items:
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: DISABLED
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: DECOMMISSIONING
                  maintenanceOwners:
                  - ROLE
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: UNKNOWN_HEALTH
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: DISABLED
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: DECOMMISSIONED
                  maintenanceOwners:
                  - CLUSTER
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: DOWN
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
      x-codegen-request-body-name: body
    delete:
      tags:
      - HostsResource
      summary: Delete all hosts in the system.
      description: Delete all hosts in the system
      operationId: deleteAllHosts
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHostList'
              example:
                items:
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: DISABLED
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: COMMISSIONED
                  maintenanceOwners:
                  - CLUSTER
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: CONCERNING_HEALTH
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - hostId: '...'
                  ipAddress: '...'
                  hostname: '...'
                  rackId: '...'
                  lastHeartbeat: '...'
                  roleRefs:
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  - clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  healthSummary: GOOD
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  hostUrl: '...'
                  maintenanceMode: true
                  commissionState: UNKNOWN
                  maintenanceOwners:
                  - CLUSTER
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  numCores: 12345
                  numPhysicalCores: 12345
                  totalPhysMemBytes: 12345
                  entityStatus: DOWN
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
  /hosts/{hostId}:
    get:
      tags:
      - HostsResource
      summary: Returns a specific Host in the system.
      description: Returns a specific Host in the system.
      operationId: readHost
      parameters:
      - name: hostId
        in: path
        description: The ID of the host to read.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: The view to materialize. Defaults to 'full'.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: full
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHost'
              example:
                hostId: '...'
                ipAddress: '...'
                hostname: '...'
                rackId: '...'
                lastHeartbeat: '...'
                roleRefs:
                - clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                - clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                healthSummary: HISTORY_NOT_AVAILABLE
                healthChecks:
                - name: '...'
                  summary: HISTORY_NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: CONCERNING
                  explanation: '...'
                  suppressed: true
                hostUrl: '...'
                maintenanceMode: true
                commissionState: DECOMMISSIONED
                maintenanceOwners:
                - SERVICE
                - ROLE
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                numCores: 12345
                numPhysicalCores: 12345
                totalPhysMemBytes: 12345
                entityStatus: DISABLED_HEALTH
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
    put:
      tags:
      - HostsResource
      summary: "."
      description: |-
        <p>Update an existing host in the system.</p>
        <p>Currently, only updating the rackId is supported.  All other fields
        of the host will be ignored.</p>
      operationId: updateHost
      parameters:
      - name: hostId
        in: path
        description: The hostId to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The updated host object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHost'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHost'
              example:
                hostId: '...'
                ipAddress: '...'
                hostname: '...'
                rackId: '...'
                lastHeartbeat: '...'
                roleRefs:
                - clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                - clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                healthSummary: DISABLED
                healthChecks:
                - name: '...'
                  summary: HISTORY_NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: BAD
                  explanation: '...'
                  suppressed: true
                hostUrl: '...'
                maintenanceMode: true
                commissionState: DECOMMISSIONED
                maintenanceOwners:
                - ROLE
                - ROLE
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                numCores: 12345
                numPhysicalCores: 12345
                totalPhysMemBytes: 12345
                entityStatus: STOPPED
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
      x-codegen-request-body-name: body
    delete:
      tags:
      - HostsResource
      summary: Delete a host from the system.
      description: Delete a host from the system
      operationId: deleteHost
      parameters:
      - name: hostId
        in: path
        description: The ID of the host to remove
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHost'
              example:
                hostId: '...'
                ipAddress: '...'
                hostname: '...'
                rackId: '...'
                lastHeartbeat: '...'
                roleRefs:
                - clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                - clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                healthSummary: HISTORY_NOT_AVAILABLE
                healthChecks:
                - name: '...'
                  summary: BAD
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: HISTORY_NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                hostUrl: '...'
                maintenanceMode: true
                commissionState: OFFLINING
                maintenanceOwners:
                - HOST
                - ROLE
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                numCores: 12345
                numPhysicalCores: 12345
                totalPhysMemBytes: 12345
                entityStatus: UNKNOWN
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
  /hosts/{hostId}/config:
    get:
      tags:
      - HostsResource
      summary: Retrieves the configuration of a specific host.
      description: Retrieves the configuration of a specific host.
      operationId: readHostConfig
      parameters:
      - name: hostId
        in: path
        description: The ID of the host.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - HostsResource
      summary: Updates the host configuration with the given values.
      description: |-
        Updates the host configuration with the given values.
        <p>
        If a value is set in the given configuration, it will be added
        to the host's configuration, replacing any existing entries.
        If a value is unset (its value is null), the existing
        configuration for the attribute will be erased, if any.
        <p>
        Attributes that are not listed in the input will maintain their
        current values in the configuration.
      operationId: updateHostConfig
      parameters:
      - name: hostId
        in: path
        description: The ID of the host.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Configuration changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /hosts/{hostId}/metrics:
    get:
      tags:
      - HostsResource
      summary: Fetch metric readings for a host.
      description: |-
        Fetch metric readings for a host.
        <p>
        By default, this call will look up all metrics available for the host. If
        only specific metrics are desired, use the <i>metrics</i> parameter.
        <p>
        By default, the returned results correspond to a 5 minute window based on
        the provided end time (which defaults to the current server time). The
        <i>from</i> and <i>to</i> parameters can be used to control the window
        being queried. A maximum window of 3 hours is enforced.
        <p>
        When requesting a "full" view, aside from the extended properties of the
        returned metric data, the collection will also contain information about
        all metrics available for the role, even if no readings are available
        in the requested window.
        <p>
        Host metrics also include per-network interface and per-storage device
        metrics. Since collecting this data incurs in more overhead, query
        parameters can be used to choose which network interfaces and storage
        devices to query, or to these metrics altogether.
        <p>
        Storage metrics are collected at different levels; for example, per-disk
        and per-partition metrics are available. The "storageIds" parameter can be
        used to filter specific storage IDs.
        <p>
        In the returned data, the network interfaces and storage IDs can be
        identified by looking at the "context" property of the metric objects.
      operationId: getMetrics
      parameters:
      - name: hostId
        in: path
        description: The host's ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: Start of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ifs
        in: query
        description: Network interfaces to query for metrics (default = all).
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: metrics
        in: query
        description: Filter for which metrics to query.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: queryNw
        in: query
        description: Whether to query for network interface metrics.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: queryStorage
        in: query
        description: Whether to query for storage metrics.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: storageIds
        in: query
        description: Storage context IDs to query for metrics (default = all).
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: to
        in: query
        description: End of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetricList'
              example:
                items:
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
      deprecated: true
  /hosts/{hostId}/commands/enterMaintenanceMode:
    post:
      tags:
      - HostsResource
      summary: Put the host into maintenance mode.
      description: |-
        Put the host into maintenance mode. This is a synchronous command.
        The result is known immediately upon return.

        <p>Available since API v2.</p>
      operationId: enterMaintenanceMode
      parameters:
      - name: hostId
        in: path
        description: The ID of the host
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /hosts/{hostId}/commands/exitMaintenanceMode:
    post:
      tags:
      - HostsResource
      summary: Take the host out of maintenance mode.
      description: |-
        Take the host out of maintenance mode. This is a synchronous command. The
        result is known immediately upon return.

        <p>
        Available since API v2.
        </p>
      operationId: exitMaintenanceMode
      parameters:
      - name: hostId
        in: path
        description: The ID of the host
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /hosts/{hostId}/commands/generateHostCerts:
    post:
      tags:
      - HostsResource
      summary: Generates (or regenerates) a key and certificate for this host if Auto-TLS
        is enabled.
      description: Generates (or regenerates) a key and certificate for this host
        if Auto-TLS is enabled.
      operationId: generateHostCerts
      parameters:
      - name: hostId
        in: path
        description: The ID of the host to generate a certificate for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiGenerateHostCertsArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /hosts/{hostId}/commands/migrateRoles:
    post:
      tags:
      - HostsResource
      summary: Migrate roles to a different host.
      description: |-
        Migrate roles to a different host.
        <p>
        This command applies only to HDFS NameNode, JournalNode, and Failover
        Controller roles. In order to migrate these roles:
        <ul>
        <li>HDFS High Availability must be enabled, using quorum-based storage.</li>
        <li>HDFS must not be configured to use a federated nameservice.</li>
        </ul>
        <b>Migrating a NameNode or JournalNode role requires cluster downtime</b>.
        HDFS, along with all of its dependent services, will be stopped at the
        beginning of the migration process, and restarted at its conclusion.
        <p>If the active NameNode is selected for migration, a manual failover
        will be performed before the role is migrated. The role will remain in
        standby mode after the migration is complete.
        <p>When migrating a NameNode role, the co-located Failover Controller
        role must be migrated as well if automatic failover is enabled. The
        Failover Controller role name must be included in the list of role
        names to migrate specified in the arguments to this command (it will
        not be included implicitly). This command does not allow a Failover
        Controller role to be moved by itself, although it is possible to move
        a JournalNode independently.
        <p>
        Available since API v10.
      operationId: migrateRoles
      parameters:
      - name: hostId
        in: path
        description: |-
          The ID of the host on which the roles to migrate currently
          reside
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMigrateRolesArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/impalaQueries:
    get:
      tags:
      - ImpalaQueriesResource
      summary: Returns a list of queries that satisfy the filter.
      description: |-
        Returns a list of queries that satisfy the filter
        <p>
        Available since API v4.
      operationId: getImpalaQueries
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter to apply to the queries. A basic filter tests the
          value of an attribute and looks something like 'rowsFetched = 1' or
          'user = root'. Multiple basic filters can be combined into a complex
          expression using standard and / or boolean logic and parenthesis.
          An example of a complex filter is: 'query_duration > 5s and (user = root or
          user = myUserName)'. An example of expected full query string in requested
          URL is: '?filter=(query_duration > 5s and (user = root or user = myUserName))'.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from
        in: query
        description: |-
          Start of the period to query in ISO 8601 format (defaults to 5
          minutes before the 'to' time).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          The maximum number of queries to return. Queries will be
          returned in the following order:
          <ul>
          <li> All executing queries, ordered from longest to shortest running </li>
          <li> All completed queries order by end time descending. </li>
          </ul>
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: offset
        in: query
        description: |-
          The offset to start returning queries from. This is useful
          for paging through lists of queries. Note that this has non-deterministic
          behavior if executing queries are included in the response because they
          can disappear from the list while paging. To exclude executing queries
          from the response and a 'executing = false' clause to your filter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: to
        in: query
        description: |-
          End of the period to query in ISO 8601 format (defaults to
          current time).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiImpalaQueryResponse'
              example:
                queries:
                - queryId: '...'
                  statement: '...'
                  queryType: '...'
                  queryState: '...'
                  startTime: '...'
                  endTime: '...'
                  rowsProduced: 12345
                  attributes:
                    property1: '...'
                    property2: '...'
                  user: '...'
                  coordinator:
                    hostId: '...'
                    hostname: '...'
                  detailsAvailable: true
                  database: '...'
                  durationMillis: 12345
                - queryId: '...'
                  statement: '...'
                  queryType: '...'
                  queryState: '...'
                  startTime: '...'
                  endTime: '...'
                  rowsProduced: 12345
                  attributes:
                    property1: '...'
                    property2: '...'
                  user: '...'
                  coordinator:
                    hostId: '...'
                    hostname: '...'
                  detailsAvailable: true
                  database: '...'
                  durationMillis: 12345
                warnings:
                - '...'
                - '...'
  /clusters/{clusterName}/services/{serviceName}/impalaQueries/attributes:
    get:
      tags:
      - ImpalaQueriesResource
      summary: |-
        Returns the list of all attributes that the Service Monitor can associate
        with Impala queries.
      description: |-
        Returns the list of all attributes that the Service Monitor can associate
        with Impala queries.
        <p>
        Examples of attributes include the user who issued the query and the
        number of HDFS bytes read by the query.
        <p>
        These attributes can be used to search for specific Impala queries through
        the getImpalaQueries API. For example the 'user' attribute could be used
        in the search 'user = root'. If the attribute is numeric it can also be used
        as a metric in a tsquery (ie, 'select hdfs_bytes_read from IMPALA_QUERIES').
        <p>
        Note that this response is identical for all Impala services.
        <p>
        Available since API v6.
      operationId: getImpalaQueryAttributes
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiImpalaQueryAttributeList'
              example:
                items:
                - name: '...'
                  type: '...'
                  displayName: '...'
                  supportsHistograms: true
                  description: '...'
                - name: '...'
                  type: '...'
                  displayName: '...'
                  supportsHistograms: true
                  description: '...'
  /clusters/{clusterName}/services/{serviceName}/impalaQueries/{queryId}:
    get:
      tags:
      - ImpalaQueriesResource
      summary: Returns details about the query.
      description: |-
        Returns details about the query. Not all queries have details, check
        the detailsAvailable field from the getQueries response.
        <p>
        Available since API v4.
      operationId: getQueryDetails
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queryId
        in: path
        description: The queryId to get information about
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: |-
          There are two valid format parameters:
          <ul>
          <li>
          'text': this is a text based, human readable representation of the
          Impala runtime profile.
          </li>
          <li>
          'thrift_encoded': this a compact-thrift, base64 encoded representation
          of the Impala RuntimeProfile.thrift object. See the Impala documentation
          for more details.
          </li>
          </ul>
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: text
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiImpalaQueryDetailsResponse'
              example:
                details: '...'
  /clusters/{clusterName}/services/{serviceName}/impalaQueries/{queryId}/cancel:
    post:
      tags:
      - ImpalaQueriesResource
      summary: Cancels an Impala Query.
      description: |-
        Cancels an Impala Query.
        <p>
        Available since API v4.
      operationId: cancelImpalaQuery
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queryId
        in: path
        description: The queryId to cancel
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiImpalaCancelResponse'
              example:
                warning: '...'
  /cm/service/roleCommands/jmapDump:
    post:
      tags:
      - MgmtRoleCommandsResource
      summary: Run the jmapDump diagnostic command.
      description: |-
        Run the jmapDump diagnostic command. The command runs the jmap utility to
        capture a dump of the role's java heap.
        <p/>
        Available since API v8.
      operationId: jmapDump
      requestBody:
        description: the names of the roles to jmap.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/service/roleCommands/jmapHisto:
    post:
      tags:
      - MgmtRoleCommandsResource
      summary: Run the jmapHisto diagnostic command.
      description: |-
        Run the jmapHisto diagnostic command. The command runs the jmap utility to
        capture a histogram of the objects on the role's java heap.
        <p/>
        Available since API v8.
      operationId: jmapHisto
      requestBody:
        description: the names of the roles to jmap.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/service/roleCommands/jstack:
    post:
      tags:
      - MgmtRoleCommandsResource
      summary: Run the jstack diagnostic command.
      description: |-
        Run the jstack diagnostic command. The command runs the jstack utility to
        capture a role's java thread stacks.
        <p/>
        Available since API v8.
      operationId: jstack
      requestBody:
        description: the names of the roles to jstack.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/service/roleCommands/lsof:
    post:
      tags:
      - MgmtRoleCommandsResource
      summary: Run the lsof diagnostic command.
      description: |-
        Run the lsof diagnostic command. This command runs the lsof utility to
        list a role's open files.
        <p/>
        Available since API v8.
      operationId: lsof
      requestBody:
        description: the names of the roles to lsof.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/service/roleCommands/restart:
    post:
      tags:
      - MgmtRoleCommandsResource
      summary: Restart a set of Cloudera Management Services roles.
      description: Restart a set of Cloudera Management Services roles.
      operationId: restartCommand
      requestBody:
        description: The roles to restart.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/service/roleCommands/start:
    post:
      tags:
      - MgmtRoleCommandsResource
      summary: Start a set of Cloudera Management Services roles.
      description: Start a set of Cloudera Management Services roles.
      operationId: startCommand
      requestBody:
        description: The roles to start.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/service/roleCommands/stop:
    post:
      tags:
      - MgmtRoleCommandsResource
      summary: Stop a set of Cloudera Management Services roles.
      description: Stop a set of Cloudera Management Services roles.
      operationId: stopCommand
      requestBody:
        description: The roles to stop.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /cm/service/roleConfigGroups:
    get:
      tags:
      - MgmtRoleConfigGroupsResource
      summary: |-
        Returns the information for all role config groups in
        the Cloudera Management Services.
      description: |-
        Returns the information for all role config groups in
        the Cloudera Management Services.
        <p>
        Available since API v3.
      operationId: readRoleConfigGroups
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroupList'
              example:
                items:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
  /cm/service/roleConfigGroups/{roleConfigGroupName}:
    get:
      tags:
      - MgmtRoleConfigGroupsResource
      summary: |-
        Returns the information for a given role config group
        in the Cloudera Management Services.
      description: |-
        Returns the information for a given role config group
        in the Cloudera Management Services.
        <p>
        Available since API v3.
      operationId: readRoleConfigGroup
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the requested group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroup'
              example:
                name: '...'
                roleType: '...'
                base: true
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
    put:
      tags:
      - MgmtRoleConfigGroupsResource
      summary: Updates an existing role config group in the Cloudera Management Services.
      description: |-
        Updates an existing role config group in the Cloudera Management Services.
        <p>
        Available since API v3.
      operationId: updateRoleConfigGroup
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the group to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: The optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The updated role config group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleConfigGroup'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroup'
              example:
                name: '...'
                roleType: '...'
                base: true
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
      x-codegen-request-body-name: body
  /cm/service/roleConfigGroups/{roleConfigGroupName}/config:
    get:
      tags:
      - MgmtRoleConfigGroupsResource
      summary: |-
        Returns the current revision of the config
        for the specified role config group in the Cloudera Management Services.
      description: |-
        Returns the current revision of the config
        for the specified role config group in the Cloudera Management Services.
        <p>
        Available since API v3.
      operationId: readConfig
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - MgmtRoleConfigGroupsResource
      summary: |-
        Updates the config for the given role config group
        in the Cloudera Management Services.
      description: |-
        Updates the config for the given role config group
        in the Cloudera Management Services.
        <p>
        Available since API v3.
      operationId: updateConfig
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The new config information for the group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /cm/service/roleConfigGroups/{roleConfigGroupName}/roles:
    get:
      tags:
      - MgmtRoleConfigGroupsResource
      summary: |-
        Returns all roles in the given role config group
        in the Cloudera Management Services.
      description: |-
        Returns all roles in the given role config group
        in the Cloudera Management Services.
        <p>
        Available since API v3.
      operationId: readRoles
      parameters:
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STARTED
                  commissionState: OFFLINING
                  healthSummary: BAD
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: STANDALONE
                  entityStatus: NONE
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: DECOMMISSIONING
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                  entityStatus: STOPPING
  /cm/service/roles:
    get:
      tags:
      - MgmtRolesResource
      summary: List all roles of the Cloudera Management Services.
      description: List all roles of the Cloudera Management Services.
      operationId: readRoles
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: UNKNOWN
                  commissionState: COMMISSIONED
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER
                  entityStatus: CONCERNING_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: BUSY
                  commissionState: OFFLINING
                  healthSummary: CONCERNING
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: STANDALONE
                  entityStatus: DOWN
    post:
      tags:
      - MgmtRolesResource
      summary: Create new roles in the Cloudera Management Services.
      description: Create new roles in the Cloudera Management Services.
      operationId: createRoles
      requestBody:
        description: Roles to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: NA
                  commissionState: OFFLINED
                  healthSummary: CONCERNING
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: STANDALONE
                  entityStatus: CONCERNING_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPING
                  commissionState: OFFLINING
                  healthSummary: DISABLED
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: UNKNOWN
                  entityStatus: DISABLED_HEALTH
      x-codegen-request-body-name: body
  /cm/service/roles/{roleName}:
    get:
      tags:
      - MgmtRolesResource
      summary: Retrieve detailed information about a Cloudera Management Services
        role.
      description: Retrieve detailed information about a Cloudera Management Services
        role.
      operationId: readRole
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRole'
              example:
                name: '...'
                type: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleState: UNKNOWN
                commissionState: COMMISSIONED
                healthSummary: NOT_AVAILABLE
                configStalenessStatus: FRESH
                healthChecks:
                - name: '...'
                  summary: CONCERNING
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                haStatus: ACTIVE
                roleUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - CLUSTER
                - HOST
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roleConfigGroupRef:
                  roleConfigGroupName: '...'
                zooKeeperServerMode: REPLICATED_FOLLOWER
                entityStatus: STOPPED
    delete:
      tags:
      - MgmtRolesResource
      summary: Delete a role from the Cloudera Management Services.
      description: Delete a role from the Cloudera Management Services.
      operationId: deleteRole
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRole'
              example:
                name: '...'
                type: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleState: HISTORY_NOT_AVAILABLE
                commissionState: OFFLINING
                healthSummary: BAD
                configStalenessStatus: STALE
                healthChecks:
                - name: '...'
                  summary: HISTORY_NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                haStatus: ACTIVE
                roleUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - SERVICE
                - HOST
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roleConfigGroupRef:
                  roleConfigGroupName: '...'
                zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                entityStatus: STOPPING
  /cm/service/roles/{roleName}/commands:
    get:
      tags:
      - MgmtRolesResource
      summary: List active role commands.
      description: List active role commands.
      operationId: listActiveCommands
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandList'
              example:
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /cm/service/roles/{roleName}/config:
    get:
      tags:
      - MgmtRolesResource
      summary: Retrieve the configuration of a specific Cloudera Management Services
        role.
      description: Retrieve the configuration of a specific Cloudera Management Services
        role.
      operationId: readRoleConfig
      parameters:
      - name: roleName
        in: path
        description: The role to look up.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - MgmtRolesResource
      summary: Update the configuration of a Cloudera Management Services role.
      description: |-
        Update the configuration of a Cloudera Management Services role.
        <p>
        If a value is set in the given configuration, it will be added
        to the role's configuration, replacing any existing entries.
        If a value is unset (its value is null), the existing
        configuration for the attribute will be erased, if any.
        <p>
        Attributes that are not listed in the input will maintain their
        current values in the configuration.
      operationId: updateRoleConfig
      parameters:
      - name: roleName
        in: path
        description: The role to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Configuration changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /cm/service/roles/{roleName}/commands/enterMaintenanceMode:
    post:
      tags:
      - MgmtRolesResource
      summary: Put the Cloudera Management Service role into maintenance mode.
      description: |-
        Put the Cloudera Management Service role into maintenance mode.This is a
        synchronous command. The result is known immediately upon return.

        <p>
        Available since API v18.
        </p>
      operationId: enterMaintenanceMode
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/service/roles/{roleName}/commands/exitMaintenanceMode:
    post:
      tags:
      - MgmtRolesResource
      summary: Take the Cloudera Management Service role out of maintenance mode.
      description: |-
        Take the Cloudera Management Service role out of maintenance mode. This is
        a synchronous command. The result is known immediately upon return.

        <p>
        Available since API v18.
        </p>
      operationId: exitMaintenanceMode
      parameters:
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/service/roles/{roleName}/logs/full:
    get:
      tags:
      - MgmtRolesResource
      summary: Retrieves the log file for the role's main process.
      description: |-
        Retrieves the log file for the role's main process.
        <p>
        If the role is not started, this will be the log file associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getFullLog
      parameters:
      - name: roleName
        in: path
        description: The role to fetch logs from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /cm/service/roles/{roleName}/logs/stacks:
    get:
      tags:
      - MgmtRolesResource
      summary: "Retrieves the stacks log file, if any, for the role's main process."
      description: |-
        Retrieves the stacks log file, if any, for the role's main process. Note
        that not all roles support periodic stacks collection.

        The log files are returned as plain text (type "text/plain").
      operationId: getStacksLog
      parameters:
      - name: roleName
        in: path
        description: The role to fetch stacks logs from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /cm/service/roles/{roleName}/logs/stacksBundle:
    get:
      tags:
      - MgmtRolesResource
      summary: Download a zip-compressed archive of role stacks logs.
      description: |-
        Download a zip-compressed archive of role stacks logs. Note that not all
        roles support periodic stacks collection.
      operationId: getStacksLogsBundle
      parameters:
      - name: roleName
        in: path
        description: The role to fetch the stacks logs bundle from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
  /cm/service/roles/{roleName}/logs/stderr:
    get:
      tags:
      - MgmtRolesResource
      summary: Retrieves the role's standard error output.
      description: |-
        Retrieves the role's standard error output.
        <p>
        If the role is not started, this will be the output associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getStandardError
      parameters:
      - name: roleName
        in: path
        description: The role to fetch stderr from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /cm/service/roles/{roleName}/logs/stdout:
    get:
      tags:
      - MgmtRolesResource
      summary: Retrieves the role's standard output.
      description: |-
        Retrieves the role's standard output.
        <p>
        If the role is not started, this will be the output associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getStandardOutput
      parameters:
      - name: roleName
        in: path
        description: The role to fetch stdout from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /cm/service:
    get:
      tags:
      - MgmtServiceResource
      summary: Retrieve information about the Cloudera Management Services.
      description: Retrieve information about the Cloudera Management Services.
      operationId: readService
      parameters:
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: HISTORY_NOT_AVAILABLE
                healthSummary: BAD
                configStalenessStatus: STALE
                clientConfigStalenessStatus: STALE
                healthChecks:
                - name: '...'
                  summary: BAD
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: BAD
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - ROLE
                - ROLE
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: BUSY
                  commissionState: OFFLINING
                  healthSummary: DISABLED
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: STANDALONE
                  entityStatus: DOWN
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: HISTORY_NOT_AVAILABLE
                  commissionState: DECOMMISSIONED
                  healthSummary: GOOD
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - SERVICE
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_FOLLOWER
                  entityStatus: CONCERNING_HEALTH
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_ONLY
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: HOUR
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_ONLY
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MINUTE
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: REMOTE_S3
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: REMOTE_S3
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: DOWN
    put:
      tags:
      - MgmtServiceResource
      summary: Setup the Cloudera Management Services.
      description: |-
        Setup the Cloudera Management Services.
        <p>
        Configure the CMS instance and create all the management roles. The
        provided configuration data can be used to set up host mappings for
        each role, and required configuration such as database connection
        information for specific roles.
        <p>
        Regardless of the list of roles provided in the input data, all
        management roles are created by this call. The input is used to
        override any default settings for the specific roles.
        <p>
        This method needs a valid CM license to be installed beforehand.
        <p>
        This method does not start any services or roles.
        <p>
        This method will fail if a CMS instance already exists.
        <p>
        Available role types:
        <ul>
        <li>SERVICEMONITOR</li>
        <li>ACTIVITYMONITOR</li>
        <li>HOSTMONITOR</li>
        <li>REPORTSMANAGER</li>
        <li>EVENTSERVER</li>
        <li>ALERTPUBLISHER</li>
        <li>NAVIGATOR</li>
        <li>NAVIGATORMETASERVER</li>
        </ul>

        <p/>
        REPORTSMANAGER, NAVIGATOR and NAVIGATORMETASERVER are only available with
        Cloudera Manager Enterprise Edition.
      operationId: setupCMS
      requestBody:
        description: Role configuration overrides.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiService'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: STARTING
                healthSummary: BAD
                configStalenessStatus: STALE_REFRESHABLE
                clientConfigStalenessStatus: STALE_REFRESHABLE
                healthChecks:
                - name: '...'
                  summary: CONCERNING
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: BAD
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - ROLE
                - HOST
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: NA
                  commissionState: OFFLINED
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - SERVICE
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER
                  entityStatus: GOOD_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STARTING
                  commissionState: OFFLINING
                  healthSummary: GOOD
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                  entityStatus: DOWN
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: KEEP_DATA_IN_CLOUD
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: DAY
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_ONLY
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: YEAR
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: DISABLED_HEALTH
      x-codegen-request-body-name: body
    delete:
      tags:
      - MgmtServiceResource
      summary: Delete the Cloudera Management Services.
      description: |-
        Delete the Cloudera Management Services.
        <p>
        This method will fail if a CMS instance doesn't already exist.
      operationId: deleteCMS
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: STOPPING
                healthSummary: HISTORY_NOT_AVAILABLE
                configStalenessStatus: STALE_REFRESHABLE
                clientConfigStalenessStatus: STALE
                healthChecks:
                - name: '...'
                  summary: DISABLED
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: CONCERNING
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - HOST
                - HOST
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: COMMISSIONED
                  healthSummary: DISABLED
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                  entityStatus: STOPPED
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: DECOMMISSIONED
                  healthSummary: CONCERNING
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: STANDALONE
                  entityStatus: HISTORY_NOT_AVAILABLE
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_ONLY
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MINUTE
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_ONLY
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: DAY
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: STOPPED
  /cm/service/autoAssignRoles:
    put:
      tags:
      - MgmtServiceResource
      summary: Automatically assign roles to hosts and create the roles for the Cloudera
        Management Service.
      description: |-
        Automatically assign roles to hosts and create the roles for the Cloudera Management Service.
        <p>
        Assignments are done based on number of hosts in the deployment and hardware specifications.
        If no hosts are part of the deployment, an exception will be thrown preventing any role assignments.
        Existing roles will be taken into account and their assignments will be not be modified.
        The deployment should not have any clusters when calling this endpoint. If it does,
        an exception will be thrown preventing any role assignments.
        <p>
        Available since API v6.
      operationId: autoAssignRoles
      responses:
        "204":
          description: Success
          content: {}
  /cm/service/autoConfigure:
    put:
      tags:
      - MgmtServiceResource
      summary: Automatically configures roles of the Cloudera Management Service.
      description: |-
        Automatically configures roles of the Cloudera Management Service.
        <p>
        Overwrites some existing configurations.
        Only default role config groups must exist before calling this endpoint.
        Other role config groups must not exist. If they do, an exception will be thrown
        preventing any configuration.
        Ignores any clusters (and their services and roles) colocated with the Cloudera
        Management Service. To avoid over-committing the heap on hosts, place the
        Cloudera Management Service roles on machines not used by any of the clusters.
        <p>
        Available since API v6.
      operationId: autoConfigure
      responses:
        "204":
          description: Success
          content: {}
  /cm/service/commands:
    get:
      tags:
      - MgmtServiceResource
      summary: List active Cloudera Management Services commands.
      description: List active Cloudera Management Services commands.
      operationId: listActiveCommands
      parameters:
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandList'
              example:
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /cm/service/config:
    get:
      tags:
      - MgmtServiceResource
      summary: Retrieve the configuration of the Cloudera Management Services.
      description: Retrieve the configuration of the Cloudera Management Services.
      operationId: readServiceConfig
      parameters:
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceConfig'
              example:
                roleTypeConfigs:
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - MgmtServiceResource
      summary: Update the Cloudera Management Services configuration.
      description: |-
        Update the Cloudera Management Services configuration.
        <p>
        If a value is set in the given configuration, it will be added
        to the service's configuration, replacing any existing entries.
        If a value is unset (its value is null), the existing
        configuration for the attribute will be erased, if any.
        <p>
        Attributes that are not listed in the input will maintain their
        current values in the configuration.
      operationId: updateServiceConfig
      parameters:
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Configuration changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceConfig'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceConfig'
              example:
                roleTypeConfigs:
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /cm/service/roleTypes:
    get:
      tags:
      - MgmtServiceResource
      summary: List the supported role types for the Cloudera Management Services.
      description: List the supported role types for the Cloudera Management Services.
      operationId: listRoleTypes
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleTypeList'
              example:
                items:
                - '...'
                - '...'
  /cm/service/commands/enterMaintenanceMode:
    post:
      tags:
      - MgmtServiceResource
      summary: Put Cloudera Management Service into maintenance mode.
      description: |-
        Put Cloudera Management Service into maintenance mode. This is a
        synchronous command. The result is known immediately upon return.

        <p>Available since API v18.</p>
      operationId: enterMaintenanceMode
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/service/commands/exitMaintenanceMode:
    post:
      tags:
      - MgmtServiceResource
      summary: Take Cloudera Management Service out of maintenance mode.
      description: |-
        Take Cloudera Management Service out of maintenance mode. This is a
        synchronous command. The result is known immediately upon return.

        <p>Available since API v18.</p>
      operationId: exitMaintenanceMode
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/service/commands/restart:
    post:
      tags:
      - MgmtServiceResource
      summary: Restart the Cloudera Management Services.
      description: Restart the Cloudera Management Services.
      operationId: restartCommand
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/service/commands/start:
    post:
      tags:
      - MgmtServiceResource
      summary: Start the Cloudera Management Services.
      description: Start the Cloudera Management Services.
      operationId: startCommand
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /cm/service/commands/stop:
    post:
      tags:
      - MgmtServiceResource
      summary: Stop the Cloudera Management Services.
      description: Stop the Cloudera Management Services.
      operationId: stopCommand
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/nameservices:
    get:
      tags:
      - NameservicesResource
      summary: List the nameservices of an HDFS service.
      description: List the nameservices of an HDFS service.
      operationId: listNameservices
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNameserviceList'
              example:
                items:
                - name: '...'
                  active:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  activeFailoverController:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  standBy:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  standByFailoverController:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  secondary:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  mountPoints:
                  - '...'
                  - '...'
                  healthSummary: DISABLED
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                - name: '...'
                  active:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  activeFailoverController:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  standBy:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  standByFailoverController:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  secondary:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  mountPoints:
                  - '...'
                  - '...'
                  healthSummary: CONCERNING
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
  /clusters/{clusterName}/services/{serviceName}/nameservices/{nameservice}:
    get:
      tags:
      - NameservicesResource
      summary: Retrieve information about a nameservice.
      description: Retrieve information about a nameservice.
      operationId: readNameservice
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nameservice
        in: path
        description: The nameservice to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: The view to materialize. Defaults to 'full'.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNameservice'
              example:
                name: '...'
                active:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                activeFailoverController:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                standBy:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                standByFailoverController:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                secondary:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                mountPoints:
                - '...'
                - '...'
                healthSummary: GOOD
                healthChecks:
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
  /clusters/{clusterName}/services/{serviceName}/nameservices/{nameservice}/metrics:
    get:
      tags:
      - NameservicesResource
      summary: Fetch metric readings for a particular nameservice.
      description: |-
        Fetch metric readings for a particular nameservice.
        <p>
        By default, this call will look up all metrics available. If only specific
        metrics are desired, use the <i>metrics</i> parameter.
        <p>
        By default, the returned results correspond to a 5 minute window based on
        the provided end time (which defaults to the current server time). The
        <i>from</i> and <i>to</i> parameters can be used to control the window
        being queried. A maximum window of 3 hours is enforced.
        <p>
        When requesting a "full" view, aside from the extended properties of the
        returned metric data, the collection will also contain information about
        all metrics available, even if no readings are available in the requested
        window.
      operationId: getMetrics
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nameservice
        in: path
        description: The nameservice.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: Start of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: metrics
        in: query
        description: Filter for which metrics to query.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: to
        in: query
        description: End of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetricList'
              example:
                items:
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
      deprecated: true
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}:
    get:
      tags:
      - ParcelResource
      summary: Retrieves detailed information about a parcel.
      description: Retrieves detailed information about a parcel.
      operationId: readParcel
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiParcel'
              example:
                product: '...'
                version: '...'
                stage: '...'
                state:
                  progress: 12345
                  totalProgress: 12345
                  count: 12345
                  totalCount: 12345
                  errors:
                  - '...'
                  - '...'
                  warnings:
                  - '...'
                  - '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}/commands/activate:
    post:
      tags:
      - ParcelResource
      summary: A synchronous command that activates the parcel on the cluster.
      description: |-
        A synchronous command that activates the parcel on the cluster.
        <p>
        Since it is synchronous, the result is known immediately upon return.
      operationId: activateCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}/commands/cancelDistribution:
    post:
      tags:
      - ParcelResource
      summary: A synchronous command that cancels the parcel distribution.
      description: |-
        A synchronous command that cancels the parcel distribution.
        <p>
        Since it is synchronous, the result is known immediately upon return.
      operationId: cancelDistributionCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}/commands/cancelDownload:
    post:
      tags:
      - ParcelResource
      summary: A synchronous command that cancels the parcel download.
      description: |-
        A synchronous command that cancels the parcel download.
        <p>
        Since it is synchronous, the result is known immediately upon return.
      operationId: cancelDownloadCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}/commands/deactivate:
    post:
      tags:
      - ParcelResource
      summary: A synchronous command that deactivates the parcel on the cluster.
      description: |-
        A synchronous command that deactivates the parcel on the cluster.
        <p>
        Since it is synchronous, the result is known immediately upon return.
      operationId: deactivateCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}/commands/removeDownload:
    post:
      tags:
      - ParcelResource
      summary: A synchronous command that removes the downloaded parcel.
      description: |-
        A synchronous command that removes the downloaded parcel.
        <p>
        Since it is synchronous, the result is known immediately upon return.
      operationId: removeDownloadCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}/commands/startDistribution:
    post:
      tags:
      - ParcelResource
      summary: |-
        A synchronous command that starts the distribution of the parcel
        to the cluster.
      description: |-
        A synchronous command that starts the distribution of the parcel
        to the cluster.
        <p>
        Since it is synchronous, the result is known immediately upon return.
        In order to see the progress of the distribution, a call
        to ParcelResource#readParcel() needs to be made.
      operationId: startDistributionCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}/commands/startDownload:
    post:
      tags:
      - ParcelResource
      summary: A synchronous command that starts the parcel download.
      description: |-
        A synchronous command that starts the parcel download.
        <p>
        Since it is synchronous, the result is known immediately upon return.
        In order to see the progress of the download, a call
        to ParcelResource#readParcel() needs to be made.
      operationId: startDownloadCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/parcels/products/{product}/versions/{version}/commands/startRemovalOfDistribution:
    post:
      tags:
      - ParcelResource
      summary: |-
        A synchronous command that removes the distribution from the hosts in
        the cluster.
      description: |-
        A synchronous command that removes the distribution from the hosts in
        the cluster.
        <p>
        Since it is synchronous, the result is known immediately upon return.
        In order to see the progress of the removal, a call
        to ParcelResource#readParcel() needs to be made.
      operationId: startRemovalOfDistributionCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: product
        in: path
        description: the product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/parcels:
    get:
      tags:
      - ParcelsResource
      summary: Lists all parcels that the cluster has access to.
      description: Lists all parcels that the cluster has access to.
      operationId: readParcels
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiParcelList'
              example:
                items:
                - product: '...'
                  version: '...'
                  stage: '...'
                  state:
                    progress: 12345
                    totalProgress: 12345
                    count: 12345
                    totalCount: 12345
                    errors:
                    - '...'
                    - '...'
                    warnings:
                    - '...'
                    - '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                - product: '...'
                  version: '...'
                  stage: '...'
                  state:
                    progress: 12345
                    totalProgress: 12345
                    count: 12345
                    totalCount: 12345
                    errors:
                    - '...'
                    - '...'
                    warnings:
                    - '...'
                    - '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
  /clusters/{clusterName}/parcels/usage:
    get:
      tags:
      - ParcelsResource
      summary: Retrieve details parcel usage information for the cluster.
      description: |-
        Retrieve details parcel usage information for the cluster. This describes
        which processes, roles and hosts are using which parcels.
      operationId: getParcelUsage
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiParcelUsage'
              example:
                racks:
                - hosts:
                  - hostRef: {}
                    roles:
                    - {}
                    - {}
                  - hostRef: {}
                    roles:
                    - {}
                    - {}
                  rackId: '...'
                - hosts:
                  - hostRef: {}
                    roles:
                    - {}
                    - {}
                  - hostRef: {}
                    roles:
                    - {}
                    - {}
                  rackId: '...'
                parcels:
                - parcelRef:
                    clusterName: '...'
                    parcelName: '...'
                    parcelVersion: '...'
                  processCount: 12345
                  activated: true
                - parcelRef:
                    clusterName: '...'
                    parcelName: '...'
                    parcelVersion: '...'
                  processCount: 12345
                  activated: true
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/process:
    get:
      tags:
      - ProcessResource
      operationId: getProcess
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiProcess'
              example:
                configFiles:
                - '...'
                - '...'
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/process/configFiles/{configFileName}:
    get:
      tags:
      - ProcessResource
      summary: Returns the contents of the specified config file.
      description: |-
        Returns the contents of the specified config file.
        A multi-level file name (e.g. hadoop-conf/hdfs-site.xml) is
        acceptable here.
      operationId: getConfigFile
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: configFileName
        in: path
        description: Name of the config file to get.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                description: ""
                format: binary
                x-content-type: application/octet-stream
  /clusters/{clusterName}/services/{serviceName}/replications:
    get:
      tags:
      - ReplicationsResource
      summary: Returns information for all replication schedules.
      description: |-
        Returns information for all replication schedules.
        <p>
        Available since API v32.
      operationId: readSchedules
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: "provides summary or detailed view, default is summary"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReplicationScheduleList'
              example:
                items:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MONTH
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: DAY
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
    post:
      tags:
      - ReplicationsResource
      summary: Creates one or more replication schedules.
      description: |-
        Creates one or more replication schedules.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: createSchedules
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: List of the replication schedules to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReplicationScheduleList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReplicationScheduleList'
              example:
                items:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: KEEP_DATA_IN_CLOUD
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: WEEK
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: WEEK
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - ReplicationsResource
      summary: Deletes all existing replication schedules.
      description: |-
        Deletes all existing replication schedules.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: deleteAllSchedules
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReplicationScheduleList'
              example:
                items:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_ONLY
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MINUTE
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MONTH
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
  /clusters/{clusterName}/services/{serviceName}/replications/hdfsCopyListing:
    post:
      tags:
      - ReplicationsResource
      summary: Run the hdfs copy listing command.
      description: |-
        Run the hdfs copy listing command
        <p>
        The copy listing command will be triggered with the provided arguments
        <p>
        Available since API v18. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: runCopyListing
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: ""
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/replications/replicationState:
    get:
      tags:
      - ReplicationsResource
      summary: returns the replication state.
      description: |-
        returns the replication state. for example if incremental export
        is enabled, etc
      operationId: getReplicationState
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: view to materialize
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReplicationState'
              example:
                incrementalExportEnabled: true
  /clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}:
    get:
      tags:
      - ReplicationsResource
      summary: Returns information for a specific replication schedule.
      description: |-
        Returns information for a specific replication schedule.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: readSchedule
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: Id of an existing replication schedule.
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: The view to materialize.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReplicationSchedule'
              example:
                hdfsArguments:
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  sourcePath: '...'
                  destinationPath: '...'
                  mapreduceServiceName: '...'
                  schedulerPoolName: '...'
                  userName: '...'
                  sourceUser: '...'
                  numMaps: 12345
                  dryRun: true
                  bandwidthPerMap: 12345
                  abortOnError: true
                  removeMissingFiles: true
                  preserveReplicationCount: true
                  preserveBlockSize: true
                  preservePermissions: true
                  logPath: '...'
                  skipChecksumChecks: true
                  skipListingChecksumChecks: true
                  skipTrash: true
                  replicationStrategy: STATIC
                  preserveXAttrs: true
                  exclusionFilters:
                  - '...'
                  - '...'
                  raiseSnapshotDiffFailures: true
                  destinationCloudAccount: '...'
                hiveArguments:
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  tableFilters:
                  - database: '...'
                    tableName: '...'
                  - database: '...'
                    tableName: '...'
                  exportDir: '...'
                  force: true
                  replicateData: true
                  hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  replicateImpalaMetadata: true
                  runInvalidateMetadata: true
                  dryRun: true
                  numThreads: 12345
                hdfsCloudArguments:
                  sourceAccount: '...'
                  destinationAccount: '...'
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  sourcePath: '...'
                  destinationPath: '...'
                  mapreduceServiceName: '...'
                  schedulerPoolName: '...'
                  userName: '...'
                  sourceUser: '...'
                  numMaps: 12345
                  dryRun: true
                  bandwidthPerMap: 12345
                  abortOnError: true
                  removeMissingFiles: true
                  preserveReplicationCount: true
                  preserveBlockSize: true
                  preservePermissions: true
                  logPath: '...'
                  skipChecksumChecks: true
                  skipListingChecksumChecks: true
                  skipTrash: true
                  replicationStrategy: DYNAMIC
                  preserveXAttrs: true
                  exclusionFilters:
                  - '...'
                  - '...'
                  raiseSnapshotDiffFailures: true
                  destinationCloudAccount: '...'
                history:
                - hdfsResult:
                    progress: 12345
                    throughput: 12345.0
                    remainingTime: 12345
                    estimatedCompletionTime: '...'
                    counters:
                    - {}
                    - {}
                    numFilesDryRun: 12345
                    numBytesDryRun: 12345
                    numFilesExpected: 12345
                    numBytesExpected: 12345
                    numFilesCopied: 12345
                    numBytesCopied: 12345
                    numFilesSkipped: 12345
                    numBytesSkipped: 12345
                    numFilesDeleted: 12345
                    numFilesCopyFailed: 12345
                    numBytesCopyFailed: 12345
                    setupError: '...'
                    jobId: '...'
                    jobDetailsUri: '...'
                    dryRun: true
                    snapshottedDirs:
                    - '...'
                    - '...'
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    failedFiles:
                    - '...'
                    - '...'
                  hiveResult:
                    phase: '...'
                    tableCount: 12345
                    tables:
                    - {}
                    - {}
                    impalaUDFCount: 12345
                    hiveUDFCount: 12345
                    impalaUDFs:
                    - {}
                    - {}
                    hiveUDFs:
                    - {}
                    - {}
                    errorCount: 12345
                    errors:
                    - {}
                    - {}
                    dataReplicationResult: {}
                    dryRun: true
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    statsAvailable: true
                    dbProcessed: 12345
                    tableProcessed: 12345
                    partitionProcessed: 12345
                    functionProcessed: 12345
                    indexProcessed: 12345
                    statsProcessed: 12345
                    dbExpected: 12345
                    tableExpected: 12345
                    partitionExpected: 12345
                    functionExpected: 12345
                    indexExpected: 12345
                    statsExpected: 12345
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - hdfsResult:
                    progress: 12345
                    throughput: 12345.0
                    remainingTime: 12345
                    estimatedCompletionTime: '...'
                    counters:
                    - {}
                    - {}
                    numFilesDryRun: 12345
                    numBytesDryRun: 12345
                    numFilesExpected: 12345
                    numBytesExpected: 12345
                    numFilesCopied: 12345
                    numBytesCopied: 12345
                    numFilesSkipped: 12345
                    numBytesSkipped: 12345
                    numFilesDeleted: 12345
                    numFilesCopyFailed: 12345
                    numBytesCopyFailed: 12345
                    setupError: '...'
                    jobId: '...'
                    jobDetailsUri: '...'
                    dryRun: true
                    snapshottedDirs:
                    - '...'
                    - '...'
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    failedFiles:
                    - '...'
                    - '...'
                  hiveResult:
                    phase: '...'
                    tableCount: 12345
                    tables:
                    - {}
                    - {}
                    impalaUDFCount: 12345
                    hiveUDFCount: 12345
                    impalaUDFs:
                    - {}
                    - {}
                    hiveUDFs:
                    - {}
                    - {}
                    errorCount: 12345
                    errors:
                    - {}
                    - {}
                    dataReplicationResult: {}
                    dryRun: true
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    statsAvailable: true
                    dbProcessed: 12345
                    tableProcessed: 12345
                    partitionProcessed: 12345
                    functionProcessed: 12345
                    indexProcessed: 12345
                    statsProcessed: 12345
                    dbExpected: 12345
                    tableExpected: 12345
                    partitionExpected: 12345
                    functionExpected: 12345
                    indexExpected: 12345
                    statsExpected: 12345
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                active: true
                hiveCloudArguments:
                  sourceAccount: '...'
                  destinationAccount: '...'
                  cloudRootPath: '...'
                  replicationOption: METADATA_AND_DATA
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  tableFilters:
                  - database: '...'
                    tableName: '...'
                  - database: '...'
                    tableName: '...'
                  exportDir: '...'
                  force: true
                  replicateData: true
                  hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  replicateImpalaMetadata: true
                  runInvalidateMetadata: true
                  dryRun: true
                  numThreads: 12345
                id: 12345
                displayName: '...'
                description: '...'
                startTime: '...'
                endTime: '...'
                interval: 12345
                intervalUnit: DAY
                nextRun: '...'
                paused: true
                alertOnStart: true
                alertOnSuccess: true
                alertOnFail: true
                alertOnAbort: true
    put:
      tags:
      - ReplicationsResource
      summary: Updates an existing replication schedule.
      description: |-
        Updates an existing replication schedule.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: updateSchedule
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: Id of an existing replication schedule.
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReplicationSchedule'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReplicationSchedule'
              example:
                hdfsArguments:
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  sourcePath: '...'
                  destinationPath: '...'
                  mapreduceServiceName: '...'
                  schedulerPoolName: '...'
                  userName: '...'
                  sourceUser: '...'
                  numMaps: 12345
                  dryRun: true
                  bandwidthPerMap: 12345
                  abortOnError: true
                  removeMissingFiles: true
                  preserveReplicationCount: true
                  preserveBlockSize: true
                  preservePermissions: true
                  logPath: '...'
                  skipChecksumChecks: true
                  skipListingChecksumChecks: true
                  skipTrash: true
                  replicationStrategy: DYNAMIC
                  preserveXAttrs: true
                  exclusionFilters:
                  - '...'
                  - '...'
                  raiseSnapshotDiffFailures: true
                  destinationCloudAccount: '...'
                hiveArguments:
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  tableFilters:
                  - database: '...'
                    tableName: '...'
                  - database: '...'
                    tableName: '...'
                  exportDir: '...'
                  force: true
                  replicateData: true
                  hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  replicateImpalaMetadata: true
                  runInvalidateMetadata: true
                  dryRun: true
                  numThreads: 12345
                hdfsCloudArguments:
                  sourceAccount: '...'
                  destinationAccount: '...'
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  sourcePath: '...'
                  destinationPath: '...'
                  mapreduceServiceName: '...'
                  schedulerPoolName: '...'
                  userName: '...'
                  sourceUser: '...'
                  numMaps: 12345
                  dryRun: true
                  bandwidthPerMap: 12345
                  abortOnError: true
                  removeMissingFiles: true
                  preserveReplicationCount: true
                  preserveBlockSize: true
                  preservePermissions: true
                  logPath: '...'
                  skipChecksumChecks: true
                  skipListingChecksumChecks: true
                  skipTrash: true
                  replicationStrategy: DYNAMIC
                  preserveXAttrs: true
                  exclusionFilters:
                  - '...'
                  - '...'
                  raiseSnapshotDiffFailures: true
                  destinationCloudAccount: '...'
                history:
                - hdfsResult:
                    progress: 12345
                    throughput: 12345.0
                    remainingTime: 12345
                    estimatedCompletionTime: '...'
                    counters:
                    - {}
                    - {}
                    numFilesDryRun: 12345
                    numBytesDryRun: 12345
                    numFilesExpected: 12345
                    numBytesExpected: 12345
                    numFilesCopied: 12345
                    numBytesCopied: 12345
                    numFilesSkipped: 12345
                    numBytesSkipped: 12345
                    numFilesDeleted: 12345
                    numFilesCopyFailed: 12345
                    numBytesCopyFailed: 12345
                    setupError: '...'
                    jobId: '...'
                    jobDetailsUri: '...'
                    dryRun: true
                    snapshottedDirs:
                    - '...'
                    - '...'
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    failedFiles:
                    - '...'
                    - '...'
                  hiveResult:
                    phase: '...'
                    tableCount: 12345
                    tables:
                    - {}
                    - {}
                    impalaUDFCount: 12345
                    hiveUDFCount: 12345
                    impalaUDFs:
                    - {}
                    - {}
                    hiveUDFs:
                    - {}
                    - {}
                    errorCount: 12345
                    errors:
                    - {}
                    - {}
                    dataReplicationResult: {}
                    dryRun: true
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    statsAvailable: true
                    dbProcessed: 12345
                    tableProcessed: 12345
                    partitionProcessed: 12345
                    functionProcessed: 12345
                    indexProcessed: 12345
                    statsProcessed: 12345
                    dbExpected: 12345
                    tableExpected: 12345
                    partitionExpected: 12345
                    functionExpected: 12345
                    indexExpected: 12345
                    statsExpected: 12345
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - hdfsResult:
                    progress: 12345
                    throughput: 12345.0
                    remainingTime: 12345
                    estimatedCompletionTime: '...'
                    counters:
                    - {}
                    - {}
                    numFilesDryRun: 12345
                    numBytesDryRun: 12345
                    numFilesExpected: 12345
                    numBytesExpected: 12345
                    numFilesCopied: 12345
                    numBytesCopied: 12345
                    numFilesSkipped: 12345
                    numBytesSkipped: 12345
                    numFilesDeleted: 12345
                    numFilesCopyFailed: 12345
                    numBytesCopyFailed: 12345
                    setupError: '...'
                    jobId: '...'
                    jobDetailsUri: '...'
                    dryRun: true
                    snapshottedDirs:
                    - '...'
                    - '...'
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    failedFiles:
                    - '...'
                    - '...'
                  hiveResult:
                    phase: '...'
                    tableCount: 12345
                    tables:
                    - {}
                    - {}
                    impalaUDFCount: 12345
                    hiveUDFCount: 12345
                    impalaUDFs:
                    - {}
                    - {}
                    hiveUDFs:
                    - {}
                    - {}
                    errorCount: 12345
                    errors:
                    - {}
                    - {}
                    dataReplicationResult: {}
                    dryRun: true
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    statsAvailable: true
                    dbProcessed: 12345
                    tableProcessed: 12345
                    partitionProcessed: 12345
                    functionProcessed: 12345
                    indexProcessed: 12345
                    statsProcessed: 12345
                    dbExpected: 12345
                    tableExpected: 12345
                    partitionExpected: 12345
                    functionExpected: 12345
                    indexExpected: 12345
                    statsExpected: 12345
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                active: true
                hiveCloudArguments:
                  sourceAccount: '...'
                  destinationAccount: '...'
                  cloudRootPath: '...'
                  replicationOption: KEEP_DATA_IN_CLOUD
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  tableFilters:
                  - database: '...'
                    tableName: '...'
                  - database: '...'
                    tableName: '...'
                  exportDir: '...'
                  force: true
                  replicateData: true
                  hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  replicateImpalaMetadata: true
                  runInvalidateMetadata: true
                  dryRun: true
                  numThreads: 12345
                id: 12345
                displayName: '...'
                description: '...'
                startTime: '...'
                endTime: '...'
                interval: 12345
                intervalUnit: DAY
                nextRun: '...'
                paused: true
                alertOnStart: true
                alertOnSuccess: true
                alertOnFail: true
                alertOnAbort: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - ReplicationsResource
      summary: Deletes an existing replication schedule.
      description: |-
        Deletes an existing replication schedule.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: deleteSchedule
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: Id of an existing replication schedule.
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReplicationSchedule'
              example:
                hdfsArguments:
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  sourcePath: '...'
                  destinationPath: '...'
                  mapreduceServiceName: '...'
                  schedulerPoolName: '...'
                  userName: '...'
                  sourceUser: '...'
                  numMaps: 12345
                  dryRun: true
                  bandwidthPerMap: 12345
                  abortOnError: true
                  removeMissingFiles: true
                  preserveReplicationCount: true
                  preserveBlockSize: true
                  preservePermissions: true
                  logPath: '...'
                  skipChecksumChecks: true
                  skipListingChecksumChecks: true
                  skipTrash: true
                  replicationStrategy: STATIC
                  preserveXAttrs: true
                  exclusionFilters:
                  - '...'
                  - '...'
                  raiseSnapshotDiffFailures: true
                  destinationCloudAccount: '...'
                hiveArguments:
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  tableFilters:
                  - database: '...'
                    tableName: '...'
                  - database: '...'
                    tableName: '...'
                  exportDir: '...'
                  force: true
                  replicateData: true
                  hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  replicateImpalaMetadata: true
                  runInvalidateMetadata: true
                  dryRun: true
                  numThreads: 12345
                hdfsCloudArguments:
                  sourceAccount: '...'
                  destinationAccount: '...'
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  sourcePath: '...'
                  destinationPath: '...'
                  mapreduceServiceName: '...'
                  schedulerPoolName: '...'
                  userName: '...'
                  sourceUser: '...'
                  numMaps: 12345
                  dryRun: true
                  bandwidthPerMap: 12345
                  abortOnError: true
                  removeMissingFiles: true
                  preserveReplicationCount: true
                  preserveBlockSize: true
                  preservePermissions: true
                  logPath: '...'
                  skipChecksumChecks: true
                  skipListingChecksumChecks: true
                  skipTrash: true
                  replicationStrategy: STATIC
                  preserveXAttrs: true
                  exclusionFilters:
                  - '...'
                  - '...'
                  raiseSnapshotDiffFailures: true
                  destinationCloudAccount: '...'
                history:
                - hdfsResult:
                    progress: 12345
                    throughput: 12345.0
                    remainingTime: 12345
                    estimatedCompletionTime: '...'
                    counters:
                    - {}
                    - {}
                    numFilesDryRun: 12345
                    numBytesDryRun: 12345
                    numFilesExpected: 12345
                    numBytesExpected: 12345
                    numFilesCopied: 12345
                    numBytesCopied: 12345
                    numFilesSkipped: 12345
                    numBytesSkipped: 12345
                    numFilesDeleted: 12345
                    numFilesCopyFailed: 12345
                    numBytesCopyFailed: 12345
                    setupError: '...'
                    jobId: '...'
                    jobDetailsUri: '...'
                    dryRun: true
                    snapshottedDirs:
                    - '...'
                    - '...'
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    failedFiles:
                    - '...'
                    - '...'
                  hiveResult:
                    phase: '...'
                    tableCount: 12345
                    tables:
                    - {}
                    - {}
                    impalaUDFCount: 12345
                    hiveUDFCount: 12345
                    impalaUDFs:
                    - {}
                    - {}
                    hiveUDFs:
                    - {}
                    - {}
                    errorCount: 12345
                    errors:
                    - {}
                    - {}
                    dataReplicationResult: {}
                    dryRun: true
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    statsAvailable: true
                    dbProcessed: 12345
                    tableProcessed: 12345
                    partitionProcessed: 12345
                    functionProcessed: 12345
                    indexProcessed: 12345
                    statsProcessed: 12345
                    dbExpected: 12345
                    tableExpected: 12345
                    partitionExpected: 12345
                    functionExpected: 12345
                    indexExpected: 12345
                    statsExpected: 12345
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - hdfsResult:
                    progress: 12345
                    throughput: 12345.0
                    remainingTime: 12345
                    estimatedCompletionTime: '...'
                    counters:
                    - {}
                    - {}
                    numFilesDryRun: 12345
                    numBytesDryRun: 12345
                    numFilesExpected: 12345
                    numBytesExpected: 12345
                    numFilesCopied: 12345
                    numBytesCopied: 12345
                    numFilesSkipped: 12345
                    numBytesSkipped: 12345
                    numFilesDeleted: 12345
                    numFilesCopyFailed: 12345
                    numBytesCopyFailed: 12345
                    setupError: '...'
                    jobId: '...'
                    jobDetailsUri: '...'
                    dryRun: true
                    snapshottedDirs:
                    - '...'
                    - '...'
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    failedFiles:
                    - '...'
                    - '...'
                  hiveResult:
                    phase: '...'
                    tableCount: 12345
                    tables:
                    - {}
                    - {}
                    impalaUDFCount: 12345
                    hiveUDFCount: 12345
                    impalaUDFs:
                    - {}
                    - {}
                    hiveUDFs:
                    - {}
                    - {}
                    errorCount: 12345
                    errors:
                    - {}
                    - {}
                    dataReplicationResult: {}
                    dryRun: true
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    statsAvailable: true
                    dbProcessed: 12345
                    tableProcessed: 12345
                    partitionProcessed: 12345
                    functionProcessed: 12345
                    indexProcessed: 12345
                    statsProcessed: 12345
                    dbExpected: 12345
                    tableExpected: 12345
                    partitionExpected: 12345
                    functionExpected: 12345
                    indexExpected: 12345
                    statsExpected: 12345
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                active: true
                hiveCloudArguments:
                  sourceAccount: '...'
                  destinationAccount: '...'
                  cloudRootPath: '...'
                  replicationOption: METADATA_AND_DATA
                  sourceService:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  tableFilters:
                  - database: '...'
                    tableName: '...'
                  - database: '...'
                    tableName: '...'
                  exportDir: '...'
                  force: true
                  replicateData: true
                  hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  replicateImpalaMetadata: true
                  runInvalidateMetadata: true
                  dryRun: true
                  numThreads: 12345
                id: 12345
                displayName: '...'
                description: '...'
                startTime: '...'
                endTime: '...'
                interval: 12345
                intervalUnit: HOUR
                nextRun: '...'
                paused: true
                alertOnStart: true
                alertOnSuccess: true
                alertOnFail: true
                alertOnAbort: true
  /clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}/collectDiagnosticData:
    post:
      tags:
      - ReplicationsResource
      summary: |-
        Collect diagnostic data for a schedule, optionally for a subset of commands
        on that schedule, matched by schedule ID.
      description: |-
        Collect diagnostic data for a schedule, optionally for a subset of commands
        on that schedule, matched by schedule ID.

        The returned command's resultDataUrl property, upon the commands completion,
        will refer to the generated diagnostic data.
        Available since API v11.
      operationId: collectDiagnosticData
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: Schedule ID
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: view to materialize
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      requestBody:
        description: Replication collection arguments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReplicationDiagnosticsCollectionArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}/history:
    get:
      tags:
      - ReplicationsResource
      summary: Returns a list of commands triggered by a schedule.
      description: Returns a list of commands triggered by a schedule.
      operationId: readHistory
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: Id of an existing replication schedule.
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Maximum number of commands to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 20
      - name: offset
        in: query
        description: Index of first command to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: view
        in: query
        description: The view to materialize.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReplicationCommandList'
              example:
                items:
                - hdfsResult:
                    progress: 12345
                    throughput: 12345.0
                    remainingTime: 12345
                    estimatedCompletionTime: '...'
                    counters:
                    - {}
                    - {}
                    numFilesDryRun: 12345
                    numBytesDryRun: 12345
                    numFilesExpected: 12345
                    numBytesExpected: 12345
                    numFilesCopied: 12345
                    numBytesCopied: 12345
                    numFilesSkipped: 12345
                    numBytesSkipped: 12345
                    numFilesDeleted: 12345
                    numFilesCopyFailed: 12345
                    numBytesCopyFailed: 12345
                    setupError: '...'
                    jobId: '...'
                    jobDetailsUri: '...'
                    dryRun: true
                    snapshottedDirs:
                    - '...'
                    - '...'
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    failedFiles:
                    - '...'
                    - '...'
                  hiveResult:
                    phase: '...'
                    tableCount: 12345
                    tables:
                    - {}
                    - {}
                    impalaUDFCount: 12345
                    hiveUDFCount: 12345
                    impalaUDFs:
                    - {}
                    - {}
                    hiveUDFs:
                    - {}
                    - {}
                    errorCount: 12345
                    errors:
                    - {}
                    - {}
                    dataReplicationResult: {}
                    dryRun: true
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    statsAvailable: true
                    dbProcessed: 12345
                    tableProcessed: 12345
                    partitionProcessed: 12345
                    functionProcessed: 12345
                    indexProcessed: 12345
                    statsProcessed: 12345
                    dbExpected: 12345
                    tableExpected: 12345
                    partitionExpected: 12345
                    functionExpected: 12345
                    indexExpected: 12345
                    statsExpected: 12345
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - hdfsResult:
                    progress: 12345
                    throughput: 12345.0
                    remainingTime: 12345
                    estimatedCompletionTime: '...'
                    counters:
                    - {}
                    - {}
                    numFilesDryRun: 12345
                    numBytesDryRun: 12345
                    numFilesExpected: 12345
                    numBytesExpected: 12345
                    numFilesCopied: 12345
                    numBytesCopied: 12345
                    numFilesSkipped: 12345
                    numBytesSkipped: 12345
                    numFilesDeleted: 12345
                    numFilesCopyFailed: 12345
                    numBytesCopyFailed: 12345
                    setupError: '...'
                    jobId: '...'
                    jobDetailsUri: '...'
                    dryRun: true
                    snapshottedDirs:
                    - '...'
                    - '...'
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    failedFiles:
                    - '...'
                    - '...'
                  hiveResult:
                    phase: '...'
                    tableCount: 12345
                    tables:
                    - {}
                    - {}
                    impalaUDFCount: 12345
                    hiveUDFCount: 12345
                    impalaUDFs:
                    - {}
                    - {}
                    hiveUDFs:
                    - {}
                    - {}
                    errorCount: 12345
                    errors:
                    - {}
                    - {}
                    dataReplicationResult: {}
                    dryRun: true
                    runAsUser: '...'
                    runOnSourceAsUser: '...'
                    statsAvailable: true
                    dbProcessed: 12345
                    tableProcessed: 12345
                    partitionProcessed: 12345
                    functionProcessed: 12345
                    indexProcessed: 12345
                    statsProcessed: 12345
                    dbExpected: 12345
                    tableExpected: 12345
                    partitionExpected: 12345
                    functionExpected: 12345
                    indexExpected: 12345
                    statsExpected: 12345
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}/run:
    post:
      tags:
      - ReplicationsResource
      summary: Run the schedule immediately.
      description: |-
        Run the schedule immediately.
        <p>
        The replication command will be triggered with the configured arguments,
        and will be recorded in the schedule's history.
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: runSchedule
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        description: Id of an existing replication schedule.
        required: true
        style: simple
        explode: false
        schema:
          type: number
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dryRun
        in: query
        description: Whether to execute a dry run.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hdfsBootstrapStandBy:
    post:
      tags:
      - RoleCommandsResource
      summary: Bootstrap HDFS stand-by NameNodes.
      description: |-
        Bootstrap HDFS stand-by NameNodes.
        <p>
        Submit a request to synchronize HDFS NameNodes with their assigned HA
        partners. The command requires that the target NameNodes are part of
        existing HA pairs, which can be accomplished by setting the nameservice
        configuration parameter in the NameNode's configuration.
        <p>
        The HA partner must already be formatted and running for this command
        to run.
      operationId: hdfsBootstrapStandByCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the stand-by NameNodes to bootstrap.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hdfsEnterSafemode:
    post:
      tags:
      - RoleCommandsResource
      summary: Enter safemode for namenodes.
      description: |-
        Enter safemode for namenodes
        <p/>
        Available since API v4.
      operationId: hdfsEnterSafemode
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: NameNodes for which to enter safemode.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hdfsFinalizeMetadataUpgrade:
    post:
      tags:
      - RoleCommandsResource
      summary: Finalize HDFS NameNode metadata upgrade.
      description: |-
        Finalize HDFS NameNode metadata upgrade.
        <p/>
        Available since API v3.
      operationId: hdfsFinalizeMetadataUpgrade
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: NameNodes for which to finalize the upgrade.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hdfsFormat:
    post:
      tags:
      - RoleCommandsResource
      summary: Format HDFS NameNodes.
      description: |-
        Format HDFS NameNodes.
        <p>
        Submit a format request to a list of NameNodes on a service. Note that
        trying to format a previously formatted NameNode will fail.
        <p>
        Note about high availability: when two NameNodes are working in an HA
        pair, only one of them should be formatted.
        <p>
        Bulk command operations are not atomic, and may contain partial failures.
        The returned list will contain references to all successful commands, and
        a list of error messages identifying the roles on which the command
        failed.
      operationId: formatCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the NameNodes to format.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hdfsInitializeAutoFailover:
    post:
      tags:
      - RoleCommandsResource
      summary: Initialize HDFS HA failover controller metadata.
      description: |-
        Initialize HDFS HA failover controller metadata.
        <p>
        The controllers being initialized must already exist and be properly
        configured. The command will make sure the needed data is initialized
        for the controller to work.
        <p>
        Only one controller per nameservice needs to be initialized.
      operationId: hdfsInitializeAutoFailoverCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the controllers to initialize.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hdfsInitializeSharedDir:
    post:
      tags:
      - RoleCommandsResource
      summary: Initialize HDFS NameNodes' shared edit directory.
      description: |-
        Initialize HDFS NameNodes' shared edit directory.
        <p>
        Shared edit directories are used when two HDFS NameNodes are operating as
        a high-availability pair. This command initializes the shared directory to
        include the necessary metadata.
        <p>
        The provided role names should reflect one of the NameNodes in the
        respective HA pair; the role must be stopped and its data directory must
        already have been formatted. The shared edits directory must be empty for
        this command to succeed.
      operationId: hdfsInitializeSharedDirCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the NameNodes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hdfsLeaveSafemode:
    post:
      tags:
      - RoleCommandsResource
      summary: Leave safemode for namenodes.
      description: |-
        Leave safemode for namenodes
        <p/>
        Available since API v4.
      operationId: hdfsLeaveSafemode
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: NameNodes for which to leave safemode.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hdfsSaveNamespace:
    post:
      tags:
      - RoleCommandsResource
      summary: Save namespace for namenodes.
      description: |-
        Save namespace for namenodes
        <p/>
        Available since API v4.
      operationId: hdfsSaveNamespace
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: NameNodes for which to save namespace.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/hueSyncDb:
    post:
      tags:
      - RoleCommandsResource
      summary: Create / update the Hue database schema.
      description: |-
        Create / update the Hue database schema.
        <p>
        This command is to be run whenever a new database has been specified or,
        as necessary, after an upgrade.
        <p>
        This request should be sent to Hue servers only.
      operationId: syncHueDbCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the Hue server roles.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/jmapDump:
    post:
      tags:
      - RoleCommandsResource
      summary: Run the jmapDump diagnostic command.
      description: |-
        Run the jmapDump diagnostic command. The command runs the jmap utility to
        capture a dump of the role's java heap.
        <p/>
        Available since API v8.
      operationId: jmapDump
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: the names of the roles to jmap.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/jmapHisto:
    post:
      tags:
      - RoleCommandsResource
      summary: Run the jmapHisto diagnostic command.
      description: |-
        Run the jmapHisto diagnostic command. The command runs the jmap utility to
        capture a histogram of the objects on the role's java heap.
        <p/>
        Available since API v8.
      operationId: jmapHisto
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: the names of the roles to jmap.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/jstack:
    post:
      tags:
      - RoleCommandsResource
      summary: Run the jstack diagnostic command.
      description: |-
        Run the jstack diagnostic command. The command runs the jstack utility to
        capture a role's java thread stacks.
        <p/>
        Available since API v8.
      operationId: jstack
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: the names of the roles to jstack.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/lsof:
    post:
      tags:
      - RoleCommandsResource
      summary: Run the lsof diagnostic command.
      description: |-
        Run the lsof diagnostic command. This command runs the lsof utility to
        list a role's open files.
        <p/>
        Available since API v8.
      operationId: lsof
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: the names of the roles to lsof.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/refresh:
    post:
      tags:
      - RoleCommandsResource
      summary: Refresh a role's data.
      description: |-
        Refresh a role's data.
        <p>
        For MapReduce services, this command should be executed on JobTracker
        roles. It refreshes the role's queue and node information.
        <p>
        For HDFS services, this command should be executed on NameNode or
        DataNode roles. For NameNodes, it refreshes the role's node list.
        For DataNodes, it refreshes the role's data directory list and other
        configuration.
        <p>
        For YARN services, this command should be executed on ResourceManager
        roles. It refreshes the role's queue and node information.
        <p>
        Available since API v1. DataNode data directories refresh available
        since API v10.
      operationId: refreshCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the roles.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/restart:
    post:
      tags:
      - RoleCommandsResource
      summary: Restart a set of role instances.
      description: |-
        Restart a set of role instances
        <p>
        Bulk command operations are not atomic, and may contain partial failures.
        The returned list will contain references to all successful commands, and
        a list of error messages identifying the roles on which the command
        failed.
      operationId: restartCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The name of the roles to restart.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/start:
    post:
      tags:
      - RoleCommandsResource
      summary: Start a set of role instances.
      description: |-
        Start a set of role instances.
        <p>
        Bulk command operations are not atomic, and may contain partial failures.
        The returned list will contain references to all successful commands, and
        a list of error messages identifying the roles on which the command
        failed.
      operationId: startCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the roles to start.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/stop:
    post:
      tags:
      - RoleCommandsResource
      summary: Stop a set of role instances.
      description: |-
        Stop a set of role instances.
        <p>
        Bulk command operations are not atomic, and may contain partial failures.
        The returned list will contain references to all successful commands, and
        a list of error messages identifying the roles on which the command
        failed.
      operationId: stopCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The role type.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/zooKeeperCleanup:
    post:
      tags:
      - RoleCommandsResource
      summary: Cleanup a list of ZooKeeper server roles.
      description: |-
        Cleanup a list of ZooKeeper server roles.
        <p>
        This command removes snapshots and transaction log files kept by
        ZooKeeper for backup purposes. Refer to the ZooKeeper documentation
        for more details.
      operationId: zooKeeperCleanupCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the roles.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/zooKeeperInit:
    post:
      tags:
      - RoleCommandsResource
      summary: Initialize a list of ZooKeeper server roles.
      description: |-
        Initialize a list of ZooKeeper server roles.
        <p>
        This applies to ZooKeeper services from CDH4. Before ZooKeeper server
        roles can be used, they need to be initialized.
      operationId: zooKeeperInitCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the roles.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleCommands/{commandName}:
    post:
      tags:
      - RoleCommandsResource
      summary: Execute a role command by name.
      description: |-
        Execute a role command by name.
        <p/>
        Available since API v6.
      operationId: roleCommandByName
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commandName
        in: path
        description: the name of command to execute.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: the roles to run this command on.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBulkCommandList'
              example:
                errors:
                - '...'
                - '...'
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleConfigGroups:
    get:
      tags:
      - RoleConfigGroupsResource
      summary: |-
        Returns the information for all role config groups for
        a given cluster and service.
      description: |-
        Returns the information for all role config groups for
        a given cluster and service.
        <p>
        Available since API v3.
      operationId: readRoleConfigGroups
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroupList'
              example:
                items:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
    post:
      tags:
      - RoleConfigGroupsResource
      summary: Creates new role config groups.
      description: |-
        Creates new role config groups.
        It is not allowed to create base groups (base must be set to false.)
        <p>
        Available since API v3.
      operationId: createRoleConfigGroups
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The list of groups to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleConfigGroupList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroupList'
              example:
                items:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleConfigGroups/roles:
    put:
      tags:
      - RoleConfigGroupsResource
      summary: Moves roles to the base role config group.
      description: |-
        Moves roles to the base role config group.

        The roles can be moved from any role config group belonging to the same
        service. The role type of the roles may vary. Each role will be moved to
        its corresponding base group depending on its role type.
        <p>
        Available since API v3.
      operationId: moveRolesToBaseGroup
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the roles to move.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPING
                  commissionState: DECOMMISSIONED
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: CONCERNING_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: NA
                  commissionState: OFFLINED
                  healthSummary: CONCERNING
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - SERVICE
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER
                  entityStatus: STOPPING
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleConfigGroups/{roleConfigGroupName}:
    get:
      tags:
      - RoleConfigGroupsResource
      summary: Returns the information for a role config group.
      description: |-
        Returns the information for a role config group.
        <p>
        Available since API v3.
      operationId: readRoleConfigGroup
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleConfigGroupName
        in: path
        description: The name of the requested group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroup'
              example:
                name: '...'
                roleType: '...'
                base: true
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
    put:
      tags:
      - RoleConfigGroupsResource
      summary: Updates an existing role config group.
      description: |-
        Updates an existing role config group
        <p>
        Available since API v3.
      operationId: updateRoleConfigGroup
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleConfigGroupName
        in: path
        description: The name of the group to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: The optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The updated role config group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleConfigGroup'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroup'
              example:
                name: '...'
                roleType: '...'
                base: true
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
      x-codegen-request-body-name: body
    delete:
      tags:
      - RoleConfigGroupsResource
      summary: Deletes a role config group.
      description: |-
        Deletes a role config group.
        <p>
        Available since API v3.
      operationId: deleteRoleConfigGroup
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleConfigGroupName
        in: path
        description: The name of the group to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleConfigGroup'
              example:
                name: '...'
                roleType: '...'
                base: true
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
  /clusters/{clusterName}/services/{serviceName}/roleConfigGroups/{roleConfigGroupName}/config:
    get:
      tags:
      - RoleConfigGroupsResource
      summary: |-
        Returns the current revision of the config
        for the specified role config group.
      description: |-
        Returns the current revision of the config
        for the specified role config group.
        <p>
        Available since API v3.
      operationId: readConfig
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - RoleConfigGroupsResource
      summary: Updates the config for the given role config group.
      description: Updates the config for the given role config group.
      operationId: updateConfig
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The new config information for the group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roleConfigGroups/{roleConfigGroupName}/roles:
    get:
      tags:
      - RoleConfigGroupsResource
      summary: Returns all roles in the given role config group.
      description: |-
        Returns all roles in the given role config group.
        <p>
        Available since API v3.
      operationId: readRoles
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleConfigGroupName
        in: path
        description: The name of the role config group.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPING
                  commissionState: DECOMMISSIONED
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: UNKNOWN
                  entityStatus: STOPPING
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: OFFLINING
                  healthSummary: GOOD
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_FOLLOWER
                  entityStatus: STOPPED
    put:
      tags:
      - RoleConfigGroupsResource
      summary: Moves roles to the specified role config group.
      description: |-
        Moves roles to the specified role config group.

        The roles can be moved from any role config group belonging
        to the same service. The role type of the destination group
        must match the role type of the roles.
        <p>
        Available since API v3.
      operationId: moveRoles
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleConfigGroupName
        in: path
        description: The name of the group the roles will be moved to.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The names of the roles to move.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STARTING
                  commissionState: OFFLINING
                  healthSummary: GOOD
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: STOPPING
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: OFFLINED
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_FOLLOWER
                  entityStatus: GOOD_HEALTH
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roles:
    get:
      tags:
      - RolesResource
      summary: Lists all roles of a given service.
      description: Lists all roles of a given service.
      operationId: readRoles
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Optional query to filter the roles by.
          <p>
          The query specifies the intersection of a list of constraints,
          joined together with semicolons (without spaces). For example:
          hostname==host1.abc.com;type==DATANODE
          </p>

          Currently supports filtering by:
          <ul>
          <li>hostname: The hostname of the host the role is running on.</li>
          <li>hostId: The unique identifier of the host the role is running on.</li>
          <li>type: The role's type.</li>
          </ul>
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: view
        in: query
        description: DataView for getting roles. Defaults to 'summary'.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: OFFLINING
                  healthSummary: CONCERNING
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER
                  entityStatus: UNKNOWN
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STARTED
                  commissionState: OFFLINED
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_FOLLOWER
                  entityStatus: UNKNOWN_HEALTH
    post:
      tags:
      - RolesResource
      summary: Create new roles in a given service.
      description: |-
        Create new roles in a given service.

        <table>
        <thead>
        <tr>
        <th>Service Type</th>
        <th>Available Role Types</th>
        </tr>
        </thead>
        <tbody>
        <tr>
        <td>HDFS (CDH3)</td>
        <td>NAMENODE, DATANODE, SECONDARYNAMENODE, BALANCER, GATEWAY</td>
        </tr>
        <tr>
        <td>HDFS (CDH4)</td>
        <td>NAMENODE, DATANODE, SECONDARYNAMENODE, BALANCER, HTTPFS,
        FAILOVERCONTROLLER, GATEWAY, JOURNALNODE</td>
        </tr>
        <tr>
        <td>HDFS (CDH5)</td>
        <td>NAMENODE, DATANODE, SECONDARYNAMENODE, BALANCER, HTTPFS,
        FAILOVERCONTROLLER, GATEWAY, JOURNALNODE, NFSGATEWAY</td>
        </tr>
        <td>MAPREDUCE</td>
        <td>JOBTRACKER, TASKTRACKER, GATEWAY, FAILOVERCONTROLLER,</td>
        </tr>
        <td>HBASE</td>
        <td>MASTER, REGIONSERVER, GATEWAY, HBASETHRIFTSERVER, HBASERESTSERVER</td>
        </tr>
        <tr>
        <td>YARN</td>
        <td>RESOURCEMANAGER, NODEMANAGER, JOBHISTORY, GATEWAY</td>
        </tr>
        <tr>
        <td>OOZIE</td>
        <td>OOZIE_SERVER</td>
        </tr>
        <tr>
        <td>ZOOKEEPER</td>
        <td>SERVER</td>
        </tr>
        <tr>
        <td>HUE (CDH3)</td>
        <td>HUE_SERVER, BEESWAX_SERVER, KT_RENEWER, JOBSUBD</td>
        </tr>
        <tr>
        <td>HUE (CDH4)</td>
        <td>HUE_SERVER, BEESWAX_SERVER, KT_RENEWER</td>
        </tr>
        <tr>
        <td>HUE (CDH5)</td>
        <td>HUE_SERVER, KT_RENEWER</td>
        </tr>
        <tr>
        <td>HUE (CDH5 5.5+)</td>
        <td>HUE_SERVER, KT_RENEWER, HUE_LOAD_BALANCER</td>
        </tr>
        <tr>
        <td>FLUME</td>
        <td>AGENT</td>
        </tr>
        <tr>
        <td>IMPALA (CDH4)</td>
        <td>IMPALAD, STATESTORE, CATALOGSERVER</td>
        </tr>
        <tr>
        <td>IMPALA (CDH5)</td>
        <td>IMPALAD, STATESTORE, CATALOGSERVER</td>
        </tr>
        <tr>
        <td>HIVE</td>
        <td>HIVESERVER2, HIVEMETASTORE, WEBHCAT, GATEWAY</td>
        </tr>
        <tr>
        <td>SOLR</td>
        <td>SOLR_SERVER, GATEWAY</td>
        </tr>
        <tr>
        <td>SQOOP</td>
        <td>SQOOP_SERVER</td>
        </tr>
        <tr>
        <td>SQOOP_CLIENT</td>
        <td>GATEWAY</td>
        </tr>
        <tr>
        <td>SENTRY</td>
        <td>SENTRY_SERVER</td>
        </tr>
        <tr>
        <td>ACCUMULO16</td>
        <td>GARBAGE_COLLECTOR, GATEWAY, ACCUMULO16_MASTER, MONITOR,
        ACCUMULO16_TSERVER, TRACER</td>
        </tr>
        <tr>
        <td>KMS</td>
        <td>KMS</td>
        </tr>
        <tr>
        <td>KS_INDEXER</td>
        <td>HBASE_INDEXER</td>
        </tr>
        <tr>
        <td>SPARK_ON_YARN</td>
        <td>GATEWAY, SPARK_YARN_HISTORY_SERVER</td>
        </tr>
        </tbody>

        </table>

        When specifying roles to be created, the names provided for each role
        must not conflict with the names that CM auto-generates for roles.
        Specifically, names of the form
        "<service name>-<role type>-<arbitrary value>" cannot be used unless the
        <arbitrary value> is the same one CM would use. If CM detects such a
        conflict, the error message will indicate what <arbitrary value> is safe
        to use. Alternately, a differently formatted name should be used.

        Since API v6: The role name can be left blank to allow CM to generate the
        name.
      operationId: createRoles
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Roles to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: OFFLINED
                  healthSummary: GOOD
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: STANDALONE
                  entityStatus: GOOD_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: UNKNOWN
                  commissionState: DECOMMISSIONING
                  healthSummary: CONCERNING
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: UNKNOWN_HEALTH
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roles/bulkDelete:
    post:
      tags:
      - RolesResource
      summary: Bulk delete roles in a particular service by name.
      description: |-
        Bulk delete roles in a particular service by name. Fails if any role cannot
        be found.
      operationId: bulkDeleteRoles
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: list of role names to be deleted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleList'
              example:
                items:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: HISTORY_NOT_AVAILABLE
                  commissionState: UNKNOWN
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: STANDALONE
                  entityStatus: UNKNOWN_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPED
                  commissionState: UNKNOWN
                  healthSummary: NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_FOLLOWER
                  entityStatus: STARTING
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}:
    get:
      tags:
      - RolesResource
      summary: Retrieves detailed information about a role.
      description: Retrieves detailed information about a role.
      operationId: readRole
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: The view to materialize. Defaults to 'full'.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: full
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRole'
              example:
                name: '...'
                type: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleState: STARTED
                commissionState: COMMISSIONED
                healthSummary: NOT_AVAILABLE
                configStalenessStatus: STALE
                healthChecks:
                - name: '...'
                  summary: DISABLED
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                haStatus: UNKNOWN
                roleUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - ROLE
                - CLUSTER
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roleConfigGroupRef:
                  roleConfigGroupName: '...'
                zooKeeperServerMode: REPLICATED_LEADER
                entityStatus: HISTORY_NOT_AVAILABLE
    delete:
      tags:
      - RolesResource
      summary: Deletes a role from a given service.
      description: Deletes a role from a given service.
      operationId: deleteRole
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRole'
              example:
                name: '...'
                type: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleState: STOPPING
                commissionState: OFFLINING
                healthSummary: CONCERNING
                configStalenessStatus: STALE_REFRESHABLE
                healthChecks:
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                haStatus: STANDBY
                roleUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - SERVICE
                - ROLE
                config:
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roleConfigGroupRef:
                  roleConfigGroupName: '...'
                zooKeeperServerMode: REPLICATED_OBSERVER
                entityStatus: UNKNOWN
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/commands:
    get:
      tags:
      - RolesResource
      summary: List active role commands.
      description: List active role commands.
      operationId: listActiveCommands
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role to start.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandList'
              example:
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/commandsByName:
    get:
      tags:
      - RolesResource
      summary: |-
        Lists all the commands that can be executed by name
        on the provided role.
      description: |-
        Lists all the commands that can be executed by name
        on the provided role.
      operationId: listCommands
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: the role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandMetadataList'
              example:
                items:
                - name: '...'
                  argSchema: '...'
                - name: '...'
                  argSchema: '...'
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/config:
    get:
      tags:
      - RolesResource
      summary: Retrieves the configuration of a specific role.
      description: |-
        Retrieves the configuration of a specific role. Note that the "full" view
        performs validation on the configuration, which could take a few seconds
        on a large cluster (around 500 nodes or more).
      operationId: readRoleConfig
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role to look up.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - RolesResource
      summary: Updates the role configuration with the given values.
      description: |-
        Updates the role configuration with the given values.
        <p>
        If a value is set in the given configuration, it will be added
        to the role's configuration, replacing any existing entries.
        If a value is unset (its value is null), the existing
        configuration for the attribute will be erased, if any.
        <p>
        Attributes that are not listed in the input will maintain their
        current values in the configuration.
      operationId: updateRoleConfig
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Configuration changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiConfigList'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigList'
              example:
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: ERROR
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/metrics:
    get:
      tags:
      - RolesResource
      summary: Fetch metric readings for a particular role.
      description: |-
        Fetch metric readings for a particular role.
        <p>
        By default, this call will look up all metrics available for the role. If
        only specific metrics are desired, use the <i>metrics</i> parameter.
        <p>
        By default, the returned results correspond to a 5 minute window based on
        the provided end time (which defaults to the current server time). The
        <i>from</i> and <i>to</i> parameters can be used to control the window
        being queried. A maximum window of 3 hours is enforced.
        <p>
        When requesting a "full" view, aside from the extended properties of the
        returned metric data, the collection will also contain information about
        all metrics available for the role, even if no readings are available
        in the requested window.
      operationId: getMetrics
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The name of the role.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: Start of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: metrics
        in: query
        description: Filter for which metrics to query.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: to
        in: query
        description: End of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetricList'
              example:
                items:
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
      deprecated: true
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/commands/enterMaintenanceMode:
    post:
      tags:
      - RolesResource
      summary: Put the role into maintenance mode.
      description: |-
        Put the role into maintenance mode. This is a synchronous command. The
        result is known immediately upon return.

        <p>
        Available since API v2.
        </p>
      operationId: enterMaintenanceMode
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/commands/exitMaintenanceMode:
    post:
      tags:
      - RolesResource
      summary: Take the role out of maintenance mode.
      description: |-
        Take the role out of maintenance mode. This is a synchronous command. The
        result is known immediately upon return.

        <p>
        Available since API v2.
        </p>
      operationId: exitMaintenanceMode
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/commands/impalaDiagnostics:
    post:
      tags:
      - RolesResource
      summary: Collects diagnostics data for an Impala role.
      description: |-
        Collects diagnostics data for an Impala role.

        <p>
        Available since API v31.
        </p>
      operationId: impalaDiagnostics
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiImpalaRoleDiagnosticsArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/logs/full:
    get:
      tags:
      - RolesResource
      summary: Retrieves the log file for the role's main process.
      description: |-
        Retrieves the log file for the role's main process.
        <p>
        If the role is not started, this will be the log file associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getFullLog
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role to fetch logs from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/logs/stacks:
    get:
      tags:
      - RolesResource
      summary: "Retrieves the stacks log file, if any, for the role's main process."
      description: |-
        Retrieves the stacks log file, if any, for the role's main process. Note
        that not all roles support periodic stacks collection.

        The log files are returned as plain text (type "text/plain").
      operationId: getStacksLog
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role to fetch stacks logs from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/logs/stacksBundle:
    get:
      tags:
      - RolesResource
      summary: Download a zip-compressed archive of role stacks logs.
      description: |-
        Download a zip-compressed archive of role stacks logs. Note that not all
        roles support periodic stacks collection.
      operationId: getStacksLogsBundle
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role to fetch the stacks logs bundle from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/logs/stderr:
    get:
      tags:
      - RolesResource
      summary: Retrieves the role's standard error output.
      description: |-
        Retrieves the role's standard error output.
        <p>
        If the role is not started, this will be the output associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getStandardError
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role to fetch stderr from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/logs/stdout:
    get:
      tags:
      - RolesResource
      summary: Retrieves the role's standard output.
      description: |-
        Retrieves the role's standard output.
        <p>
        If the role is not started, this will be the output associated with
        the last time the role was run.
        <p>
        Log files are returned as plain text (type "text/plain").
      operationId: getStandardOutput
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleName
        in: path
        description: The role to fetch stdout from.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: ""
                x-content-type: text/plain
  /clusters/{clusterName}/services:
    get:
      tags:
      - ServicesResource
      summary: Lists all services registered in the cluster.
      description: Lists all services registered in the cluster.
      operationId: readServices
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceList'
              example:
                items:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTED
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: STALE
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - SERVICE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTED
                    commissionState: UNKNOWN
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - ROLE
                    - CLUSTER
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                    entityStatus: STOPPING
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: HISTORY_NOT_AVAILABLE
                    commissionState: OFFLINED
                    healthSummary: DISABLED
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: ACTIVE
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - CLUSTER
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_OBSERVER
                    entityStatus: DISABLED_HEALTH
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: STOPPING
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTED
                  healthSummary: BAD
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - ROLE
                  - ROLE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: HISTORY_NOT_AVAILABLE
                    commissionState: UNKNOWN
                    healthSummary: CONCERNING
                    configStalenessStatus: STALE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - CLUSTER
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER
                    entityStatus: HISTORY_NOT_AVAILABLE
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: UNKNOWN
                    commissionState: OFFLINED
                    healthSummary: DISABLED
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_FOLLOWER
                    entityStatus: BAD_HEALTH
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: HOUR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MINUTE
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: HISTORY_NOT_AVAILABLE
    post:
      tags:
      - ServicesResource
      summary: Creates a list of services.
      description: |-
        Creates a list of services.
        <p>
        There are typically two service creation strategies:
        <ol>
        <li>
        The caller may choose to set up a new service piecemeal, by first
        creating the service itself (without any roles or configuration),
        and then create the roles, and then specify configuration.
        </li>
        <li>
        Alternatively, the caller can pack
        all the information in one call, by fully specifying the fields in
        the com.cloudera.api.model.ApiService object, with
        <ul>
        <li>service config and role type config, and</li>
        <li>role to host assignment.</li>
        </ul>
        </li>
        </ol>

        <table>
        <thead>
        <tr>
        <th>Cluster Version</th>
        <th>Available Service Types</th>
        </tr>
        </thead>
        <tbody>
        <tr>
        <td>CDH4</td>
        <td>HDFS, MAPREDUCE, HBASE, OOZIE, ZOOKEEPER, HUE, YARN, IMPALA, FLUME, HIVE, SOLR, SQOOP, KS_INDEXER</td>
        </tr>
        <tr>
        <td>CDH5</td>
        <td>HDFS, MAPREDUCE, HBASE, OOZIE, ZOOKEEPER, HUE, YARN, IMPALA,
        FLUME, HIVE, SOLR, SQOOP, KS_INDEXER, SQOOP_CLIENT, SENTRY,
        ACCUMULO16, KMS, SPARK_ON_YARN, KAFKA
        </td>
        </tr>
        </tbody>
        </table>

        As of V6, GET /{clusterName}/serviceTypes should be used to get
        the service types available to the cluster.
      operationId: createServices
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Details of the services to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceList'
              example:
                items:
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STOPPED
                  healthSummary: CONCERNING
                  configStalenessStatus: FRESH
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - HOST
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: NA
                    commissionState: OFFLINING
                    healthSummary: DISABLED
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                    entityStatus: STOPPING
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STARTED
                    commissionState: OFFLINING
                    healthSummary: CONCERNING
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - SERVICE
                    - SERVICE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: UNKNOWN
                    entityStatus: DISABLED_HEALTH
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: WEEK
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: HISTORY_NOT_AVAILABLE
                - name: '...'
                  type: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceState: STARTING
                  healthSummary: GOOD
                  configStalenessStatus: STALE_REFRESHABLE
                  clientConfigStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  serviceUrl: '...'
                  roleInstancesUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - ROLE
                  config:
                    roleTypeConfigs:
                    - {}
                    - {}
                    items:
                    - {}
                    - {}
                  roles:
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: STOPPING
                    commissionState: OFFLINED
                    healthSummary: NOT_AVAILABLE
                    configStalenessStatus: FRESH
                    healthChecks:
                    - {}
                    - {}
                    haStatus: UNKNOWN
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - HOST
                    - ROLE
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_FOLLOWER
                    entityStatus: DISABLED_HEALTH
                  - name: '...'
                    type: '...'
                    hostRef: {}
                    serviceRef: {}
                    roleState: HISTORY_NOT_AVAILABLE
                    commissionState: OFFLINING
                    healthSummary: HISTORY_NOT_AVAILABLE
                    configStalenessStatus: STALE_REFRESHABLE
                    healthChecks:
                    - {}
                    - {}
                    haStatus: STANDBY
                    roleUrl: '...'
                    maintenanceMode: true
                    maintenanceOwners:
                    - CLUSTER
                    - HOST
                    config: {}
                    roleConfigGroupRef: {}
                    zooKeeperServerMode: REPLICATED_LEADER
                    entityStatus: STOPPING
                  displayName: '...'
                  roleConfigGroups:
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  - name: '...'
                    roleType: '...'
                    base: true
                    config: {}
                    displayName: '...'
                    serviceRef: {}
                  replicationSchedules:
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: MONTH
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  - hdfsArguments: {}
                    hiveArguments: {}
                    hdfsCloudArguments: {}
                    history:
                    - {}
                    - {}
                    active: true
                    hiveCloudArguments: {}
                    id: 12345
                    displayName: '...'
                    description: '...'
                    startTime: '...'
                    endTime: '...'
                    interval: 12345
                    intervalUnit: YEAR
                    nextRun: '...'
                    paused: true
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                  snapshotPolicies:
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  - name: '...'
                    description: '...'
                    hourlySnapshots: 12345
                    dailySnapshots: 12345
                    weeklySnapshots: 12345
                    monthlySnapshots: 12345
                    yearlySnapshots: 12345
                    minuteOfHour: 12345
                    hoursForHourlySnapshots:
                    - 12345
                    - 12345
                    hourOfDay: 12345
                    dayOfWeek: 12345
                    dayOfMonth: 12345
                    monthOfYear: 12345
                    alertOnStart: true
                    alertOnSuccess: true
                    alertOnFail: true
                    alertOnAbort: true
                    hbaseArguments: {}
                    hdfsArguments: {}
                    lastCommand: {}
                    lastSuccessfulCommand: {}
                    paused: true
                  entityStatus: STOPPING
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}:
    get:
      tags:
      - ServicesResource
      summary: Retrieves details information about a service.
      description: Retrieves details information about a service.
      operationId: readService
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: DataView to materialize. Defaults to 'full'.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: full
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: UNKNOWN
                healthSummary: NOT_AVAILABLE
                configStalenessStatus: FRESH
                clientConfigStalenessStatus: STALE
                healthChecks:
                - name: '...'
                  summary: CONCERNING
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: GOOD
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - SERVICE
                - CLUSTER
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STOPPING
                  commissionState: DECOMMISSIONED
                  healthSummary: BAD
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: CONCERNING
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - HOST
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: CONCERNING_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: HISTORY_NOT_AVAILABLE
                  commissionState: OFFLINED
                  healthSummary: CONCERNING
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - ROLE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER
                  entityStatus: STARTING
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: KEEP_DATA_IN_CLOUD
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MINUTE
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: KEEP_DATA_IN_CLOUD
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MINUTE
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: REMOTE_S3
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: GOOD_HEALTH
    put:
      tags:
      - ServicesResource
      summary: Updates service information.
      description: |-
        Updates service information.
        <p/>
        This method will update only writable fields of the service information.
        Currently this only includes the service display name.
        <p/>
        Available since API v3.
      operationId: updateService
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated service information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiService'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: NA
                healthSummary: DISABLED
                configStalenessStatus: FRESH
                clientConfigStalenessStatus: STALE_REFRESHABLE
                healthChecks:
                - name: '...'
                  summary: CONCERNING
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: HISTORY_NOT_AVAILABLE
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - CLUSTER
                - HOST
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: BUSY
                  commissionState: COMMISSIONED
                  healthSummary: HISTORY_NOT_AVAILABLE
                  configStalenessStatus: STALE_REFRESHABLE
                  healthChecks:
                  - name: '...'
                    summary: BAD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - SERVICE
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER_ELECTION
                  entityStatus: STOPPING
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: UNKNOWN
                  commissionState: UNKNOWN
                  healthSummary: BAD
                  configStalenessStatus: FRESH
                  healthChecks:
                  - name: '...'
                    summary: HISTORY_NOT_AVAILABLE
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: UNKNOWN
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_LEADER
                  entityStatus: UNKNOWN_HEALTH
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_AND_DATA
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: WEEK
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: KEEP_DATA_IN_CLOUD
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MINUTE
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: REMOTE_S3
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: UNKNOWN
      x-codegen-request-body-name: body
    delete:
      tags:
      - ServicesResource
      summary: Deletes a service from the system.
      description: Deletes a service from the system.
      operationId: deleteService
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiService'
              example:
                name: '...'
                type: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceState: STARTING
                healthSummary: BAD
                configStalenessStatus: STALE_REFRESHABLE
                clientConfigStalenessStatus: STALE_REFRESHABLE
                healthChecks:
                - name: '...'
                  summary: BAD
                  explanation: '...'
                  suppressed: true
                - name: '...'
                  summary: BAD
                  explanation: '...'
                  suppressed: true
                serviceUrl: '...'
                roleInstancesUrl: '...'
                maintenanceMode: true
                maintenanceOwners:
                - HOST
                - SERVICE
                config:
                  roleTypeConfigs:
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  - roleType: '...'
                    items:
                    - {}
                    - {}
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                roles:
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: UNKNOWN
                  commissionState: OFFLINED
                  healthSummary: DISABLED
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: GOOD
                    explanation: '...'
                    suppressed: true
                  haStatus: STANDBY
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - HOST
                  - SERVICE
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: GOOD_HEALTH
                - name: '...'
                  type: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleState: STARTING
                  commissionState: DECOMMISSIONING
                  healthSummary: CONCERNING
                  configStalenessStatus: STALE
                  healthChecks:
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  - name: '...'
                    summary: DISABLED
                    explanation: '...'
                    suppressed: true
                  haStatus: ACTIVE
                  roleUrl: '...'
                  maintenanceMode: true
                  maintenanceOwners:
                  - CLUSTER
                  - CLUSTER
                  config:
                    items:
                    - {}
                    - {}
                  roleConfigGroupRef:
                    roleConfigGroupName: '...'
                  zooKeeperServerMode: REPLICATED_OBSERVER
                  entityStatus: CONCERNING_HEALTH
                displayName: '...'
                roleConfigGroups:
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                - name: '...'
                  roleType: '...'
                  base: true
                  config:
                    items:
                    - {}
                    - {}
                  displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                replicationSchedules:
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: KEEP_DATA_IN_CLOUD
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: HOUR
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                - hdfsArguments:
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: STATIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  hiveArguments:
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  hdfsCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    sourceService: {}
                    sourcePath: '...'
                    destinationPath: '...'
                    mapreduceServiceName: '...'
                    schedulerPoolName: '...'
                    userName: '...'
                    sourceUser: '...'
                    numMaps: 12345
                    dryRun: true
                    bandwidthPerMap: 12345
                    abortOnError: true
                    removeMissingFiles: true
                    preserveReplicationCount: true
                    preserveBlockSize: true
                    preservePermissions: true
                    logPath: '...'
                    skipChecksumChecks: true
                    skipListingChecksumChecks: true
                    skipTrash: true
                    replicationStrategy: DYNAMIC
                    preserveXAttrs: true
                    exclusionFilters:
                    - '...'
                    - '...'
                    raiseSnapshotDiffFailures: true
                    destinationCloudAccount: '...'
                  history:
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - hdfsResult: {}
                    hiveResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  active: true
                  hiveCloudArguments:
                    sourceAccount: '...'
                    destinationAccount: '...'
                    cloudRootPath: '...'
                    replicationOption: METADATA_ONLY
                    sourceService: {}
                    tableFilters:
                    - {}
                    - {}
                    exportDir: '...'
                    force: true
                    replicateData: true
                    hdfsArguments: {}
                    replicateImpalaMetadata: true
                    runInvalidateMetadata: true
                    dryRun: true
                    numThreads: 12345
                  id: 12345
                  displayName: '...'
                  description: '...'
                  startTime: '...'
                  endTime: '...'
                  interval: 12345
                  intervalUnit: MONTH
                  nextRun: '...'
                  paused: true
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                snapshotPolicies:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                entityStatus: DOWN
  /clusters/{clusterName}/services/{serviceName}/clientConfig:
    get:
      tags:
      - ServicesResource
      summary: |-
        Download a zip-compressed archive of the client configuration,
        of a specific service.
      description: |-
        Download a zip-compressed archive of the client configuration,
        of a specific service. This resource does not require any authentication.
      operationId: getClientConfig
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                description: ""
                format: binary
                x-content-type: application/octet-stream
  /clusters/{clusterName}/services/{serviceName}/commands:
    get:
      tags:
      - ServicesResource
      summary: List active service commands.
      description: List active service commands.
      operationId: listActiveCommands
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to which the role belongs.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandList'
              example:
                items:
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commandsByName:
    get:
      tags:
      - ServicesResource
      summary: |-
        Lists all the commands that can be executed by name
        on the provided service.
      description: |-
        Lists all the commands that can be executed by name
        on the provided service.

        <p>
        Available since API v6.
        </p>
      operationId: listServiceCommands
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommandMetadataList'
              example:
                items:
                - name: '...'
                  argSchema: '...'
                - name: '...'
                  argSchema: '...'
  /clusters/{clusterName}/services/{serviceName}/config:
    get:
      tags:
      - ServicesResource
      summary: Retrieves the configuration of a specific service.
      description: |-
        Retrieves the configuration of a specific service.
        <p>
        The "summary" view contains only the configured parameters, and
        configuration for role types that contain configured parameters.
        <p>
        The "full" view contains all available configuration parameters for
        the service and its role types.
        This mode performs validation on the configuration, which could take
        a few seconds on a large cluster (around 500 nodes or more).
      operationId: readServiceConfig
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to query.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceConfig'
              example:
                roleTypeConfigs:
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: ERROR
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
    put:
      tags:
      - ServicesResource
      summary: Updates the service configuration with the given values.
      description: |-
        Updates the service configuration with the given values.
        <p>
        If a value is set in the given configuration, it will be added
        to the service's configuration, replacing any existing entries.
        If a value is unset (its value is null), the existing
        configuration for the attribute will be erased, if any.
        <p>
        Attributes that are not listed in the input will maintain their
        current values in the configuration.
      operationId: updateServiceConfig
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: message
        in: query
        description: Optional message describing the changes.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Configuration changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceConfig'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceConfig'
              example:
                roleTypeConfigs:
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: OK
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                - roleType: '...'
                  items:
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                  - name: '...'
                    value: '...'
                    required: true
                    default: '...'
                    displayName: '...'
                    description: '...'
                    relatedName: '...'
                    sensitive: true
                    validationState: WARNING
                    validationMessage: '...'
                    validationWarningsSuppressed: true
                items:
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: WARNING
                  validationMessage: '...'
                  validationWarningsSuppressed: true
                - name: '...'
                  value: '...'
                  required: true
                  default: '...'
                  displayName: '...'
                  description: '...'
                  relatedName: '...'
                  sensitive: true
                  validationState: OK
                  validationMessage: '...'
                  validationWarningsSuppressed: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/impalaUtilization:
    get:
      tags:
      - ServicesResource
      summary: |-
        Provides the resource utilization of the Impala service as well as the
        resource utilization per tenant.
      description: |-
        Provides the resource utilization of the Impala service as well as the
        resource utilization per tenant. Only available with Cloudera Manager Enterprise Edition.
      operationId: getImpalaUtilization
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: service name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: daysOfWeek
        in: query
        description: |-
          The days of the week for which the user wants to report utilization.
          Days is a list of number between 1 to 7, where 1 corresponds to Mon. and 7 corresponds to Sun.
          All 7 days are included if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: endHourOfDay
        in: query
        description: |-
          The end hour of a day for which the user wants to report utilization.
          The hour is a number between [0-23]. Default value is 23 if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 23
      - name: from
        in: query
        description: Start of the time range to report utilization in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startHourOfDay
        in: query
        description: |-
          The start hour of a day for which the user wants to report utilization.
          The hour is a number between [0-23]. Default value is 0 if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: tenantType
        in: query
        description: The type of the tenant (POOL or USER).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: POOL
      - name: to
        in: query
        description: End of the the time range to report utilization in ISO 8601 format
          (defaults to now).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiImpalaUtilization'
              example:
                totalQueries: 12345.0
                successfulQueries: 12345.0
                oomQueries: 12345.0
                timeOutQueries: 12345.0
                rejectedQueries: 12345.0
                successfulQueriesPercentage: 12345.0
                oomQueriesPercentage: 12345.0
                timeOutQueriesPercentage: 12345.0
                rejectedQueriesPercentage: 12345.0
                avgWaitTimeInQueue: 12345.0
                peakAllocationTimestampMS: 12345
                maxAllocatedMemory: 12345.0
                maxAllocatedMemoryPercentage: 12345.0
                utilizedAtMaxAllocated: 12345.0
                utilizedAtMaxAllocatedPercentage: 12345.0
                peakUsageTimestampMS: 12345
                maxUtilizedMemory: 12345.0
                maxUtilizedMemoryPercentage: 12345.0
                allocatedAtMaxUtilized: 12345.0
                allocatedAtMaxUtilizedPercentage: 12345.0
                distributionUtilizedByImpalaDaemon:
                  bins:
                    items:
                    - {}
                    - {}
                distributionAllocatedByImpalaDaemon:
                  bins:
                    items:
                    - {}
                    - {}
                tenantUtilizations:
                  items:
                  - tenantName: '...'
                    totalQueries: 12345.0
                    successfulQueries: 12345.0
                    oomQueries: 12345.0
                    timeOutQueries: 12345.0
                    rejectedQueries: 12345.0
                    avgWaitTimeInQueue: 12345.0
                    peakAllocationTimestampMS: 12345
                    maxAllocatedMemory: 12345.0
                    maxAllocatedMemoryPercentage: 12345.0
                    utilizedAtMaxAllocated: 12345.0
                    utilizedAtMaxAllocatedPercentage: 12345.0
                    peakUsageTimestampMS: 12345
                    maxUtilizedMemory: 12345.0
                    maxUtilizedMemoryPercentage: 12345.0
                    allocatedAtMaxUtilized: 12345.0
                    allocatedAtMaxUtilizedPercentage: 12345.0
                    distributionUtilizedByImpalaDaemon: {}
                    distributionAllocatedByImpalaDaemon: {}
                    avgSpilledMemory: 12345.0
                    maxSpilledMemory: 12345.0
                  - tenantName: '...'
                    totalQueries: 12345.0
                    successfulQueries: 12345.0
                    oomQueries: 12345.0
                    timeOutQueries: 12345.0
                    rejectedQueries: 12345.0
                    avgWaitTimeInQueue: 12345.0
                    peakAllocationTimestampMS: 12345
                    maxAllocatedMemory: 12345.0
                    maxAllocatedMemoryPercentage: 12345.0
                    utilizedAtMaxAllocated: 12345.0
                    utilizedAtMaxAllocatedPercentage: 12345.0
                    peakUsageTimestampMS: 12345
                    maxUtilizedMemory: 12345.0
                    maxUtilizedMemoryPercentage: 12345.0
                    allocatedAtMaxUtilized: 12345.0
                    allocatedAtMaxUtilizedPercentage: 12345.0
                    distributionUtilizedByImpalaDaemon: {}
                    distributionAllocatedByImpalaDaemon: {}
                    avgSpilledMemory: 12345.0
                    maxSpilledMemory: 12345.0
                errorMessage: '...'
  /clusters/{clusterName}/services/{serviceName}/metrics:
    get:
      tags:
      - ServicesResource
      summary: Fetch metric readings for a particular service.
      description: |-
        Fetch metric readings for a particular service.
        <p>
        By default, this call will look up all metrics available for the service.
        If only specific metrics are desired, use the <i>metrics</i> parameter.
        <p>
        By default, the returned results correspond to a 5 minute window based on
        the provided end time (which defaults to the current server time). The
        <i>from</i> and <i>to</i> parameters can be used to control the window
        being queried. A maximum window of 3 hours is enforced.
        <p>
        When requesting a "full" view, aside from the extended properties of the
        returned metric data, the collection will also contain information about
        all metrics available for the service, even if no readings are available
        in the requested window.
        <p>
        HDFS services that have more than one nameservice will not expose
        any metrics. Instead, the nameservices should be queried separately.
        <p/>
      operationId: getMetrics
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: from
        in: query
        description: Start of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: metrics
        in: query
        description: Filter for which metrics to query.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: to
        in: query
        description: End of the period to query.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      - name: view
        in: query
        description: |-
          The view of the data to materialize,
          either "summary" or "full".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetricList'
              example:
                items:
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
                - name: '...'
                  context: '...'
                  unit: '...'
                  data:
                  - timestamp: '...'
                    value: 12345.0
                  - timestamp: '...'
                    value: 12345.0
                  displayName: '...'
                  description: '...'
      deprecated: true
  /clusters/{clusterName}/services/{serviceName}/roleTypes:
    get:
      tags:
      - ServicesResource
      summary: List the supported role types for a service.
      description: List the supported role types for a service.
      operationId: listRoleTypes
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to modify.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleTypeList'
              example:
                items:
                - '...'
                - '...'
  /clusters/{clusterName}/services/{serviceName}/yarnUtilization:
    get:
      tags:
      - ServicesResource
      summary: |-
        Provides the resource utilization of the yarn service as well as the
        resource utilization per tenant.
      description: |-
        Provides the resource utilization of the yarn service as well as the
        resource utilization per tenant. Only available with Cloudera Manager Enterprise Edition.
      operationId: getYarnUtilization
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: service name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: daysOfWeek
        in: query
        description: |-
          The days of the week for which the user wants to report utilization.
          Days is a list of number between 1 to 7, where 1 corresponds to Mon. and 7 corresponds to Sun.
          All 7 days are included if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: endHourOfDay
        in: query
        description: |-
          The end hour of a day for which the user wants to report utilization.
          The hour is a number between [0-23]. Default value is 23 if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 23
      - name: from
        in: query
        description: Start of the time range to report utilization in ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startHourOfDay
        in: query
        description: |-
          The start hour of a day for which the user wants to report utilization.
          The hour is a number between [0-23]. Default value is 0 if this is not specified.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: tenantType
        in: query
        description: The type of the tenant (POOL or USER).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: POOL
      - name: to
        in: query
        description: End of the the time range to report utilization in ISO 8601 format
          (defaults to now).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiYarnUtilization'
              example:
                avgCpuUtilization: 12345.0
                maxCpuUtilization: 12345.0
                avgCpuDailyPeak: 12345.0
                maxCpuUtilizationTimestampMs: 12345
                avgCpuUtilizationPercentage: 12345.0
                maxCpuUtilizationPercentage: 12345.0
                avgCpuDailyPeakPercentage: 12345.0
                avgMemoryUtilization: 12345.0
                maxMemoryUtilization: 12345.0
                avgMemoryDailyPeak: 12345.0
                maxMemoryUtilizationTimestampMs: 12345
                avgMemoryUtilizationPercentage: 12345.0
                maxMemoryUtilizationPercentage: 12345.0
                avgMemoryDailyPeakPercentage: 12345.0
                tenantUtilizations:
                  items:
                  - tenantName: '...'
                    avgYarnCpuAllocation: 12345.0
                    avgYarnCpuUtilization: 12345.0
                    avgYarnCpuUnusedCapacity: 12345.0
                    avgYarnCpuSteadyFairShare: 12345.0
                    avgYarnPoolAllocatedCpuDuringContention: 12345.0
                    avgYarnPoolFairShareCpuDuringContention: 12345.0
                    avgYarnPoolSteadyFairShareCpuDuringContention: 12345.0
                    avgYarnContainerWaitRatio: 12345.0
                    avgYarnMemoryAllocation: 12345.0
                    avgYarnMemoryUtilization: 12345.0
                    avgYarnMemoryUnusedCapacity: 12345.0
                    avgYarnMemorySteadyFairShare: 12345.0
                    avgYarnPoolAllocatedMemoryDuringContention: 12345.0
                    avgYarnPoolFairShareMemoryDuringContention: 12345.0
                    avgYarnPoolSteadyFairShareMemoryDuringContention: 12345.0
                  - tenantName: '...'
                    avgYarnCpuAllocation: 12345.0
                    avgYarnCpuUtilization: 12345.0
                    avgYarnCpuUnusedCapacity: 12345.0
                    avgYarnCpuSteadyFairShare: 12345.0
                    avgYarnPoolAllocatedCpuDuringContention: 12345.0
                    avgYarnPoolFairShareCpuDuringContention: 12345.0
                    avgYarnPoolSteadyFairShareCpuDuringContention: 12345.0
                    avgYarnContainerWaitRatio: 12345.0
                    avgYarnMemoryAllocation: 12345.0
                    avgYarnMemoryUtilization: 12345.0
                    avgYarnMemoryUnusedCapacity: 12345.0
                    avgYarnMemorySteadyFairShare: 12345.0
                    avgYarnPoolAllocatedMemoryDuringContention: 12345.0
                    avgYarnPoolFairShareMemoryDuringContention: 12345.0
                    avgYarnPoolSteadyFairShareMemoryDuringContention: 12345.0
                errorMessage: '...'
  /clusters/{clusterName}/services/{serviceName}/commands/createOozieDb:
    post:
      tags:
      - ServicesResource
      summary: Creates the Oozie Database Schema in the configured database.
      description: |-
        Creates the Oozie Database Schema in the configured database.
        This command does not create database. This command creates only tables
        required by Oozie. To create database, please refer to oozieCreateEmbeddedDatabase()

        <p>
        Available since API v2.
        </p>
      operationId: createOozieDb
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Oozie service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/createSolrHdfsHomeDir:
    post:
      tags:
      - ServicesResource
      summary: Creates the home directory of a Solr service in HDFS.
      description: |-
        Creates the home directory of a Solr service in HDFS.

        <p>
        Available since API v4.
      operationId: createSolrHdfsHomeDirCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Solr service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/createSqoopUserDir:
    post:
      tags:
      - ServicesResource
      summary: Creates the user directory of a Sqoop service in HDFS.
      description: |-
        Creates the user directory of a Sqoop service in HDFS.

        <p>
        Available since API v4.
      operationId: createSqoopUserDirCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Sqoop service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/decommission:
    post:
      tags:
      - ServicesResource
      summary: Decommission roles of a service.
      description: |-
        Decommission roles of a service.
        <p>
        For HBase services, the list should contain names of RegionServers to
        decommission.
        <p>
        For HDFS services, the list should contain names of DataNodes to
        decommission.
      operationId: decommissionCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HBase service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: List of role names to decommision.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/deployClientConfig:
    post:
      tags:
      - ServicesResource
      summary: Deploy a service's client configuration.
      description: |-
        Deploy a service's client configuration.
        <p>
        The client configuration is deployed to the hosts where the given roles
        are running.
        <p/>
        Added in v3: passing null for the role name list will deploy client configs
        to all known service roles.
        Added in v6: passing an empty role name list will deploy client configs
        to all known service roles.
        <p/>
        In Cloudera Manager 5.3 and newer, client configurations are fully managed,
        meaning that the server maintains state about which client configurations
        should exist and be managed by alternatives, and the agents actively
        rectify their hosts with this state. Consequently, if this API call is made
        with a specific set of roles, Cloudera Manager will deactivate, from
        alternatives, any deployed client configs from any non-gateway roles that
        are <em>not</em> specified as arguments. Gateway roles are always preserved,
        and calling this API with an empty or null argument continues to deploy to
        all roles.
        <p/>
      operationId: deployClientConfigCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: List of role names.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/disableJtHa:
    post:
      tags:
      - ServicesResource
      summary: Disable high availability (HA) for JobTracker.
      description: |-
        Disable high availability (HA) for JobTracker.

        As part of disabling HA, any services that depend on the MapReduce service
        being modified will be stopped. The command arguments provide options to
        specify name of JobTracker that will be preserved. The Command will
        redeploy the client configurations for services of the cluster after HA
        has been disabled.
      operationId: disableJtHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The MapReduce service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDisableJtHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/disableRmHa:
    post:
      tags:
      - ServicesResource
      summary: Disable high availability (HA) for ResourceManager.
      description: |-
        Disable high availability (HA) for ResourceManager.

        As part of disabling HA, any services that depend on the YARN service
        being modified will be stopped. The command arguments provide options to
        specify name of ResourceManager that will be preserved. The command will
        redeploy the client configurations for services of the cluster after HA
        has been disabled.
      operationId: disableRmHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The YARN service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDisableRmHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/disableSentryHa:
    post:
      tags:
      - ServicesResource
      summary: Disable high availability (HA) for Sentry service.
      description: |-
        Disable high availability (HA) for Sentry service.
        <p>
        This command only applies to CDH 5.13+ Sentry services.
        <p>
        The command will keep exactly one Sentry server, on the specified host,
        and update the ZooKeeper configs needed for Sentry.
        <p>
        All services that depend on HDFS will be restarted after enabling Sentry HA.
        <p>
        Note: Sentry doesn't support Rolling Restart.
      operationId: disableSentryHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the Sentry service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An instance of ApiDisableSentryHaArgs
          representing the arguments to the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDisableSentryHaArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/enableJtHa:
    post:
      tags:
      - ServicesResource
      summary: Enable high availability (HA) for a JobTracker.
      description: |-
        Enable high availability (HA) for a JobTracker.
        <p>
        This command only applies to CDH4 MapReduce services.
        <p>
        The command will create a new JobTracker on the specified host and then
        create an active/standby pair with the existing JobTracker. Autofailover
        will be enabled using ZooKeeper. A ZNode will be created for this purpose.
        Command arguments provide option to forcefully create this ZNode if one
        already exists. A node may already exists if JobTracker was previously
        enabled in HA mode but HA mode was disabled later on. The ZNode is not
        deleted when HA is disabled.
        <p>
        As part of enabling HA, any services that depends on the MapReduce service
        being modified will be stopped. Command will redeploy the client
        configurations for services of the cluster after HA has been enabled.
      operationId: enableJtHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The MapReduce service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEnableJtHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/enableRmHa:
    post:
      tags:
      - ServicesResource
      summary: Enable high availability (HA) for a YARN ResourceManager.
      description: |-
        Enable high availability (HA) for a YARN ResourceManager.
        <p>
        This command only applies to CDH5+ YARN services.
        <p>
        The command will create a new ResourceManager on the specified host and then
        create an active/standby pair with the existing ResourceManager. Autofailover
        will be enabled using ZooKeeper.
        <p>
        As part of enabling HA, any services that depends on the YARN service
        being modified will be stopped. Command will redeploy the client
        configurations for services of the cluster after HA has been enabled.
      operationId: enableRmHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The YARN service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEnableRmHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/enableSentryHa:
    post:
      tags:
      - ServicesResource
      summary: Enable high availability (HA) for Sentry service.
      description: |-
        Enable high availability (HA) for Sentry service.
        <p>
        This command only applies to CDH 5.13+ Sentry services.
        <p>
        The command will create a new Sentry server on the specified host
        and set the ZooKeeper configs needed for Sentry HA.
        <p>
        As part of enabling HA, all services that depend on HDFS will be
        restarted after enabling Sentry HA.
        <p>
        Note: Sentry doesn't support Rolling Restart.
      operationId: enableSentryHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the Sentry service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: |-
          An instance of ApiEnableSentryHaArgs
          representing the arguments to the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEnableSentryHaArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/enterMaintenanceMode:
    post:
      tags:
      - ServicesResource
      summary: Put the service into maintenance mode.
      description: |-
        Put the service into maintenance mode. This is a synchronous command. The
        result is known immediately upon return.

        <p>
        Available since API v2.
        </p>
      operationId: enterMaintenanceMode
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/exitMaintenanceMode:
    post:
      tags:
      - ServicesResource
      summary: Take the service out of maintenance mode.
      description: |-
        Take the service out of maintenance mode. This is a synchronous command.
        The result is known immediately upon return.

        <p>
        Available since API v2.
        </p>
      operationId: exitMaintenanceMode
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/firstRun:
    post:
      tags:
      - ServicesResource
      summary: Prepare and start a service.
      description: |-
        Prepare and start a service.

        <p>
        Perform all the steps needed to prepare the service and start it.
        </p>

        <p>
        Available since API v7.
        </p>
      operationId: firstRun
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hbaseCreateRoot:
    post:
      tags:
      - ServicesResource
      summary: Creates the root directory of an HBase service.
      description: Creates the root directory of an HBase service.
      operationId: createHBaseRootCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HBase service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hbaseUpgrade:
    post:
      tags:
      - ServicesResource
      summary: Upgrade HBase data in HDFS and ZooKeeper as part of upgrade from CDH4
        to CDH5.
      description: |-
        Upgrade HBase data in HDFS and ZooKeeper as part of upgrade from CDH4 to CDH5.
        <p/>
        This is required in order to run HBase after upgrade.
        <p/>
        Available since API v6.
      operationId: hbaseUpgradeCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HBase service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsCreateTmpDir:
    post:
      tags:
      - ServicesResource
      summary: Creates a tmp directory on the HDFS filesystem.
      description: |-
        Creates a tmp directory on the HDFS filesystem.
        <p>
        Available since API v2.
        </p>
      operationId: hdfsCreateTmpDir
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the HDFS service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsDisableAutoFailover:
    post:
      tags:
      - ServicesResource
      summary: Disable auto-failover for a highly available HDFS nameservice.
      description: |-
        Disable auto-failover for a highly available HDFS nameservice.
        <p>
        The command will modify the nameservice's NameNodes configuration to
        disable automatic failover, and delete the existing failover controllers.
        <p>
        The ZooKeeper dependency of the service will not be removed.
      operationId: hdfsDisableAutoFailoverCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The nameservice name.
        content:
          application/json:
            schema:
              type: string
              description: ""
          text/plain:
            schema:
              type: string
              description: ""
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsDisableHa:
    post:
      tags:
      - ServicesResource
      summary: Disable high availability (HA) for an HDFS NameNode.
      description: |-
        Disable high availability (HA) for an HDFS NameNode.
        <p>
        The NameNode to be kept must be running before HA can be disabled.
        <p>
        As part of disabling HA, any services that depend on the HDFS service being
        modified will be stopped. The command arguments provide options to
        re-start these services and to re-deploy the client configurations for
        services of the cluster after HA has been disabled.
      operationId: hdfsDisableHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHdfsDisableHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsDisableNnHa:
    post:
      tags:
      - ServicesResource
      summary: Disable High Availability (HA) with Automatic Failover for an HDFS
        NameNode.
      description: |-
        Disable High Availability (HA) with Automatic Failover for an HDFS NameNode.
        <p>
        As part of disabling HA, any services that depend on the HDFS service being
        modified will be stopped. The command will delete the Standby NameNode
        associated with the specified NameNode. Any FailoverControllers associated
        with the NameNode's nameservice are also deleted. A SecondaryNameNode
        is created on the host specified by the arugments.
        <p>
        If no nameservices uses Quorum Journal after HA is disabled for the specified
        nameservice, then all JournalNodes are also deleted.
        <p>
        Then, HDFS service is restarted and all services that were stopped
        are started again afterwards.
        Finally, client configs for HDFS and its depedents will be re-deployed.
      operationId: hdfsDisableNnHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDisableNnHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsEnableAutoFailover:
    post:
      tags:
      - ServicesResource
      summary: Enable auto-failover for an HDFS nameservice.
      description: |-
        Enable auto-failover for an HDFS nameservice.
        <p>
        This command requires that the nameservice exists, and HA has been
        configured for that nameservice.
        <p>
        The command will create the needed failover controllers, perform the
        needed initialization and configuration, and will start the new roles.
        The existing NameNodes which are part of the nameservice will be
        re-started in the process.
        <p>
        This process may require changing the service's configuration, to add a
        dependency on the provided ZooKeeper service. This will be done if such a
        dependency has not been configured yet, and will cause roles that are
        not affected by this command to show an "outdated configuration" status.
        <p>
        If a ZooKeeper dependency has already been set up by some other means,
        it does not need to be provided in the command arguments.
      operationId: hdfsEnableAutoFailoverCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHdfsFailoverArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsEnableHa:
    post:
      tags:
      - ServicesResource
      summary: Enable high availability (HA) for an HDFS NameNode.
      description: |-
        Enable high availability (HA) for an HDFS NameNode.
        <p>
        The command will set up the given "active" and "stand-by" NameNodes as
        an HA pair. Both nodes need to already exist.
        <p>
        If there is a SecondaryNameNode associated with either given NameNode
        instance, it will be deleted.
        <p>
        Note that while the shared edits path may be different for both nodes,
        they need to point to the same underlying storage (e.g., an NFS share).
        <p>
        As part of enabling HA, any services that depend on the HDFS service being
        modified will be stopped. The command arguments provide options to
        re-start these services and to re-deploy the client configurations for
        services of the cluster after HA has been enabled.
      operationId: hdfsEnableHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHdfsHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsEnableNnHa:
    post:
      tags:
      - ServicesResource
      summary: Enable High Availability (HA) with Automatic Failover for an HDFS NameNode.
      description: |-
        Enable High Availability (HA) with Automatic Failover for an HDFS NameNode.
        <p>
        The command will create a Standby NameNode for the given nameservice
        and create FailoverControllers for both Active and Standby NameNodes.
        The SecondaryNameNode associated with the Active NameNode will be deleted.
        <p>
        The command will also create JournalNodes needed for HDFS HA if they
        do not already exist.
        <p>
        As part of enabling HA, any services that depend on the HDFS service being
        modified will be stopped. They will be restarted after HA has been enabled.
        Finally, client configs for HDFS and its depedents will be re-deployed.
      operationId: hdfsEnableNnHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEnableNnHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsFailover:
    post:
      tags:
      - ServicesResource
      summary: Initiate a failover in an HDFS HA NameNode pair.
      description: |-
        Initiate a failover in an HDFS HA NameNode pair.
        <p>
        The arguments should contain the names of the two NameNodes in
        the HA pair. The first one should be the currently active NameNode,
        the second one the NameNode to be made active.
      operationId: hdfsFailoverCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: Whether to force failover.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: Names of the NameNodes in the HA pair.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsFinalizeRollingUpgrade:
    post:
      tags:
      - ServicesResource
      summary: |-
        Finalizes the rolling upgrade for HDFS by updating the NameNode
        metadata permanently to the next version.
      description: |-
        Finalizes the rolling upgrade for HDFS by updating the NameNode
        metadata permanently to the next version. Should be done after
        doing a rolling upgrade to a CDH version >= 5.2.0.
        <p>
        Available since API v8.
      operationId: hdfsFinalizeRollingUpgrade
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsRollEdits:
    post:
      tags:
      - ServicesResource
      summary: Roll the edits of an HDFS NameNode or Nameservice.
      description: |-
        Roll the edits of an HDFS NameNode or Nameservice.
        <p>
        Available since API v3.
      operationId: hdfsRollEditsCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments to the Roll Edits command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRollEditsArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/hdfsUpgradeMetadata:
    post:
      tags:
      - ServicesResource
      summary: Upgrade HDFS Metadata as part of a major version upgrade.
      description: |-
        Upgrade HDFS Metadata as part of a major version upgrade.
        <p/>
        When doing a major version upgrade for HDFS, it is necessary to start HDFS
        in a special mode where it will do any necessary upgrades of stored
        metadata. Trying to start HDFS normally will result in an error message and
        the NameNode(s) failing to start.
        <p/>
        The metadata upgrade must eventually be finalized, using the
        hdfsFinalizeMetadataUpgrade command on the NameNode.
        <p/>
        Available since API v6.
      operationId: hdfsUpgradeMetadataCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hiveCreateHiveUserDir:
    post:
      tags:
      - ServicesResource
      summary: Create the Hive user directory.
      description: |-
        Create the Hive user directory
        <p>
        Available since API v4.
        </p>
      operationId: createHiveUserDirCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Hive service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hiveCreateHiveWarehouse:
    post:
      tags:
      - ServicesResource
      summary: "Create the Hive warehouse directory, on Hive services."
      description: |-
        Create the Hive warehouse directory, on Hive services.
        <p>
        Available since API v3.
        </p>
      operationId: createHiveWarehouseCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Hive service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hiveCreateMetastoreDatabase:
    post:
      tags:
      - ServicesResource
      summary: Create the Hive Metastore Database.
      description: |-
        Create the Hive Metastore Database. Only works with embedded postgresql
        database.
        <p>
        This command is to be run whenever a new user and database needs to be
        created in the embedded postgresql database for a Hive service. This
        command should usually be followed by a call to
        hiveCreateMetastoreDatabaseTables.
        <p>
        Available since API v4.
      operationId: hiveCreateMetastoreDatabaseCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Hive service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hiveCreateMetastoreDatabaseTables:
    post:
      tags:
      - ServicesResource
      summary: Create the Hive Metastore Database tables.
      description: |-
        Create the Hive Metastore Database tables.
        <p>
        This command is to be run whenever a new database has been specified. Will
        do nothing if tables already exist. Will not perform an upgrade. Only
        Available when all Hive Metastore Servers are stopped.
        <p>
        Available since API v3.
      operationId: hiveCreateMetastoreDatabaseTablesCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Hive service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hiveUpdateMetastoreNamenodes:
    post:
      tags:
      - ServicesResource
      summary: |-
        Update Hive Metastore to point to a NameNode's Nameservice name instead of
        hostname.
      description: |-
        Update Hive Metastore to point to a NameNode's Nameservice name instead of
        hostname.
        <p>
        <strong>Back up the Hive Metastore Database before running this command.</strong>
        <p>
        This command is to be run after enabling HDFS High Availability. Only
        available when all Hive Metastore Servers are stopped.
        <p>
        Available since API v4.
      operationId: hiveUpdateMetastoreNamenodesCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Hive service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hiveUpgradeMetastore:
    post:
      tags:
      - ServicesResource
      summary: Upgrade Hive Metastore as part of a major version upgrade.
      description: |-
        Upgrade Hive Metastore as part of a major version upgrade.
        <p/>
        When doing a major version upgrade for Hive, it is necessary to upgrade
        data in the metastore database.
        <p/>
        Available since API v6.
      operationId: hiveUpgradeMetastoreCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Hive service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hiveValidateMetastoreSchema:
    post:
      tags:
      - ServicesResource
      summary: Validate the Hive Metastore Schema.
      description: |-
        Validate the Hive Metastore Schema.
        <p>
        This command checks the Hive metastore schema for any errors and corruptions.
        This command is to be run on two instances:
        <li>After the Hive Metastore database tables are created.</li>
        <li>Both before and after upgrading the Hive metastore database schema./li>
        * <p>
        Available since API v17.
      operationId: hiveValidateMetastoreSchemaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Hive service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hueCreateHiveWarehouse:
    post:
      tags:
      - ServicesResource
      summary: "Create the Beeswax role's Hive warehouse directory, on Hue services."
      description: "Create the Beeswax role's Hive warehouse directory, on Hue services."
      operationId: createBeeswaxWarehouseCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Hue service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
  /clusters/{clusterName}/services/{serviceName}/commands/hueDumpDb:
    post:
      tags:
      - ServicesResource
      summary: Runs Hue's dumpdata command.
      description: |-
        Runs Hue's dumpdata command.

        Available since API v10.
      operationId: hueDumpDbCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hueLoadDb:
    post:
      tags:
      - ServicesResource
      summary: Runs Hue's loaddata command.
      description: |-
        Runs Hue's loaddata command.

        Available since API v10.
      operationId: hueLoadDbCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/hueSyncDb:
    post:
      tags:
      - ServicesResource
      summary: Runs Hue's syncdb command.
      description: |-
        Runs Hue's syncdb command.

        Available since API v10.
      operationId: hueSyncDbCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/impalaCreateCatalogDatabase:
    post:
      tags:
      - ServicesResource
      summary: "."
      description: |-
        <strong>Not needed in CM 5.0.0 Release, since Impala Catalog Database
        is not yet available in CDH as of this release.</strong>
        Create the Impala Catalog Database. Only works with embedded postgresql
        database.
        <p>
        This command is to be run whenever a new user and database needs to be
        created in the embedded postgresql database for the Impala Catalog Server.
        This command should usually be followed by a call to
        impalaCreateCatalogDatabaseTables.
        <p>
        Available since API v6.
      operationId: impalaCreateCatalogDatabaseCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Impala service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/impalaCreateCatalogDatabaseTables:
    post:
      tags:
      - ServicesResource
      summary: "."
      description: |-
        <strong>Not needed in CM 5.0.0 Release, since Impala Catalog Database
        is not yet available in CDH as of this release.</strong>
        Create the Impala Catalog Database tables.
        <p>
        This command is to be run whenever a new database has been specified. Will
        do nothing if tables already exist. Will not perform an upgrade. Only
        available when all Impala Catalog Servers are stopped.
        <p>
        Available since API v6.
      operationId: impalaCreateCatalogDatabaseTablesCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Impala service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/impalaCreateUserDir:
    post:
      tags:
      - ServicesResource
      summary: Create the Impala user directory.
      description: |-
        Create the Impala user directory
        <p>
        Available since API v6.
        </p>
      operationId: createImpalaUserDirCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Impala service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/impalaDisableLlamaHa:
    post:
      tags:
      - ServicesResource
      summary: Not Supported.
      description: Not Supported. Llama was removed.
      operationId: disableLlamaHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDisableLlamaHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/impalaDisableLlamaRm:
    post:
      tags:
      - ServicesResource
      summary: Not Supported.
      description: Not Supported. Llama was removed.
      operationId: disableLlamaRmCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
  /clusters/{clusterName}/services/{serviceName}/commands/impalaEnableLlamaHa:
    post:
      tags:
      - ServicesResource
      summary: Not Supported.
      description: Not Supported. Llama was removed.
      operationId: enableLlamaHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEnableLlamaHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/impalaEnableLlamaRm:
    post:
      tags:
      - ServicesResource
      summary: Not Supported.
      description: Not Supported. Llama was removed.
      operationId: enableLlamaRmCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEnableLlamaRmArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      deprecated: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/importMrConfigsIntoYarn:
    post:
      tags:
      - ServicesResource
      summary: "Import MapReduce configuration into Yarn, overwriting Yarn configuration."
      description: |-
        Import MapReduce configuration into Yarn, overwriting Yarn configuration.
        <p>
        You will lose existing Yarn configuration. Read all MapReduce
        configuration, role assignments, and role configuration groups and update
        Yarn with corresponding values. MR1 configuration will be converted into
        the equivalent MR2 configuration.
        <p>
        Before running this command, Yarn must be stopped and MapReduce must exist
        with valid configuration.
        <p>
        Available since API v6.
      operationId: importMrConfigsIntoYarn
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Yarn service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/initSolr:
    post:
      tags:
      - ServicesResource
      summary: Initializes the Solr service in Zookeeper.
      description: |-
        Initializes the Solr service in Zookeeper.

        <p>
        Available since API v4.
      operationId: initSolrCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Solr service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/installMrFrameworkJars:
    post:
      tags:
      - ServicesResource
      summary: |-
        Creates an HDFS directory to hold the MapReduce2 framework JARs
        (if necessary), and uploads the framework JARs to it.
      description: |-
        Creates an HDFS directory to hold the MapReduce2 framework JARs
        (if necessary), and uploads the framework JARs to it.
        <p>
        This command is run automatically when starting a YARN service for
        the first time, or when upgrading an existing YARN service. It can
        also be run manually to ensure that the latest version of the framework
        JARS is installed.
        <p>
        Available since API v30.
        <p>
      operationId: installMrFrameworkJars
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the YARN service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/installOozieShareLib:
    post:
      tags:
      - ServicesResource
      summary: Creates directory for Oozie user in HDFS and installs the ShareLib
        in it.
      description: |-
        Creates directory for Oozie user in HDFS and installs the ShareLib in it.
        <p/>
        This command should be re-run after a major version upgrade to refresh the
        ShareLib to the latest version.
        <p/>
        Available since API v3.
        <p/>
      operationId: installOozieShareLib
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Oozie service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/migrateToSentry:
    post:
      tags:
      - ServicesResource
      summary: |-
        Migrates the HBase Indexer policy-based permissions to Sentry,
        by invoking the SentryConfigToolIndexer.
      description: |-
        Migrates the HBase Indexer policy-based permissions to Sentry,
        by invoking the SentryConfigToolIndexer.
        <p>
        Note:
        <li>
        <ul>KeyStore Indexer service should be in Stopped state.</ul>
        <ul>This is only needed for upgrading to CDH6.0.</ul>
        <p>
        Available since API v30.
      operationId: ksMigrateToSentry
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the KeyStore Indexer service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/offline:
    post:
      tags:
      - ServicesResource
      summary: Offline roles of a service.
      description: |-
        Offline roles of a service.
        <p>
        Currently the offline operation is only supported by HDFS.
        <p>
        For HDFS, the offline operation will put DataNodes into <em>HDFS IN MAINTENANCE</em> state which
        prevents unnecessary re-replication which could occur if decommissioned.
        <p>
        The <em>timeout</em> parameter is used to specify a timeout for offline. For HDFS, when the
        timeout expires, the DataNode will automatically transition out of <em>HDFS IN MAINTENANCE</em>
        state, back to <em>HDFS IN SERVICE</em> state.
        <p>
      operationId: offlineCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timeout
        in: query
        description: |-
          Offline timeout in seconds. Offlined roles will automatically transition from offline
          state to normal state after timeout.
          Specify as null to get the default timeout (4 hours).
        required: false
        style: form
        explode: true
        schema:
          type: number
      requestBody:
        description: List of role names to offline.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/oozieCreateEmbeddedDatabase:
    post:
      tags:
      - ServicesResource
      summary: Create the Oozie Server Database.
      description: |-
        Create the Oozie Server Database. Only works with embedded postgresql
        database.
        <p>
        This command is to be run whenever a new user and database need to be
        created in the embedded postgresql database for an Oozie service. This
        command should usually be followed by a call to createOozieDb.
        <p>
        Available since API v10.
      operationId: oozieCreateEmbeddedDatabaseCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Oozie service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/oozieDisableHa:
    post:
      tags:
      - ServicesResource
      summary: Disable high availability (HA) for Oozie.
      description: |-
        Disable high availability (HA) for Oozie.

        As part of disabling HA, any services that depend on the Oozie service
        being modified will be stopped. The command arguments provide options to
        specify name of Oozie Server that will be preserved. After deleting,
        other Oozie servers, all the services that were stopped are restarted.
      operationId: disableOozieHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Oozie service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDisableOozieHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/oozieDumpDatabase:
    post:
      tags:
      - ServicesResource
      summary: Dump the Oozie Server Database.
      description: Dump the Oozie Server Database.
      operationId: oozieDumpDatabaseCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/oozieEnableHa:
    post:
      tags:
      - ServicesResource
      summary: Enable high availability (HA) for Oozie service.
      description: |-
        Enable high availability (HA) for Oozie service.
        <p>
        This command only applies to CDH5+ Oozie services.
        <p>
        The command will create new Oozie Servers on the specified hosts and
        set the ZooKeeper and Load Balancer configs needed for Oozie HA.
        <p>
        As part of enabling HA, any services that depends on the Oozie service
        being modified will be stopped and restarted after enabling Oozie HA.
      operationId: enableOozieHaCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Oozie service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments for the command.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiEnableOozieHaArguments'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/oozieLoadDatabase:
    post:
      tags:
      - ServicesResource
      summary: Load the Oozie Server Database from dump.
      description: Load the Oozie Server Database from dump.
      operationId: oozieLoadDatabaseCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/oozieUpgradeDb:
    post:
      tags:
      - ServicesResource
      summary: Upgrade Oozie Database schema as part of a major version upgrade.
      description: |-
        Upgrade Oozie Database schema as part of a major version upgrade.
        <p/>
        When doing a major version upgrade for Oozie, it is necessary to upgrade
        the schema of its database before Oozie can run successfully.
        <p/>
        Available since API v6.
      operationId: oozieUpgradeDbCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Oozie service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/recommission:
    post:
      tags:
      - ServicesResource
      summary: Recommission roles of a service.
      description: |-
        Recommission roles of a service.
        <p>
        The list should contain names of slave roles to recommission.
        </p>

        <p>
        Available since API v2.
        </p>
      operationId: recommissionCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: List of role names to recommision.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/recommissionWithStart:
    post:
      tags:
      - ServicesResource
      summary: Start and recommission roles of a service.
      description: |-
        Start and recommission roles of a service.
        <p>
        The list should contain names of slave roles to start and recommission.
        </p>

        <p>
        Warning: Evolving. This method may change in the future and does not offer standard compatibility guarantees.
        Only support by HDFS.
        Do not use without guidance from Cloudera.
        </p>

        <p>
        Available since API v15.
        </p>
      operationId: recommissionWithStartCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: List of role names to recommision.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleNameList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/restart:
    post:
      tags:
      - ServicesResource
      summary: Restart the service.
      description: Restart the service.
      operationId: restartCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to start.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/rollingRestart:
    post:
      tags:
      - ServicesResource
      summary: Command to run rolling restart of roles in a service.
      description: |-
        Command to run rolling restart of roles in a service. The sequence is:
        <ol>
        <li>Restart all the non-slave roles
        <li>If slaves are present restart them in batches of size specified in RollingRestartCmdArgs
        <li>Perform any post-command needed after rolling restart
        </ol>
        <p>
        Available since API v3. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: rollingRestart
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRollingRestartArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/sentryCreateDatabase:
    post:
      tags:
      - ServicesResource
      summary: Create the Sentry Server Database.
      description: |-
        Create the Sentry Server Database. Only works with embedded postgresql
        database.
        <p>
        This command is to be run whenever a new user and database need to be
        created in the embedded postgresql database for a Sentry service. This
        command should usually be followed by a call to sentryCreateDatabaseTables.
        <p>
        Available since API v7.
      operationId: sentryCreateDatabaseCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Sentry service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/sentryCreateDatabaseTables:
    post:
      tags:
      - ServicesResource
      summary: Create the Sentry Server Database tables.
      description: |-
        Create the Sentry Server Database tables.
        <p>
        This command is to be run whenever a new database has been specified. Will
        do nothing if tables already exist. Will not perform an upgrade. Only
        Available when Sentry Server is stopped.
        <p>
        Available since API v7.
      operationId: sentryCreateDatabaseTablesCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Sentry service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/sentryUpgradeDatabaseTables:
    post:
      tags:
      - ServicesResource
      summary: Upgrade the Sentry Server Database tables.
      description: |-
        Upgrade the Sentry Server Database tables.
        <p>
        This command is to be run whenever Sentry requires an upgrade to its
        database tables.
        <p>
        Available since API v8.
      operationId: sentryUpgradeDatabaseTablesCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Sentry service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/solrBootstrapCollections:
    post:
      tags:
      - ServicesResource
      summary: Bootstraps Solr Collections after the CDH upgrade.
      description: |-
        Bootstraps Solr Collections after the CDH upgrade.
        <p>
        Note: This is only needed for upgrading to CDH6.0.
        <p>
        Available since API v30.
      operationId: solrBootstrapCollectionsCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the Solr service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/solrBootstrapConfig:
    post:
      tags:
      - ServicesResource
      summary: Bootstraps Solr config during the CDH upgrade.
      description: |-
        Bootstraps Solr config during the CDH upgrade.
        <p>
        Note: This is only needed for upgrading to CDH6.0.
        <p>
        Available since API v30.
      operationId: solrBootstrapConfigCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the Solr service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/solrConfigBackup:
    post:
      tags:
      - ServicesResource
      summary: Backs up Solr configuration metadata before CDH upgrade.
      description: |-
        Backs up Solr configuration metadata before CDH upgrade.
        <p>
        Note:
        <li>
        <ul>Solr service should be in Stopped state.</ul>
        <ul>HDFS and Zookeeper services should in Running state.</ul>
        <ul>This is only needed for upgrading to CDH6.0.</ul>
        </p>
        Available since API v30.
      operationId: solrConfigBackupCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the Solr service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/solrMigrateSentryPrivilegesCommand:
    post:
      tags:
      - ServicesResource
      summary: |-
        Migrates Sentry privileges to new model compatible to support
        more granular permissions if Solr is configured with a
        Sentry service.
      description: |-
        Migrates Sentry privileges to new model compatible to support
        more granular permissions if Solr is configured with a
        Sentry service.
        <p>
        Note:
        <li>
        <ul>Solr service should be in Stopped state.</ul>
        <ul>HDFS, Zookeeper, and Sentry services should in Running state.</ul>
        <ul>This is only needed for upgrading to CDH6.0.</ul>
        <p>
        Available since API v30.
      operationId: solrMigrateSentryPrivilegesCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the Solr service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/solrReinitializeStateForUpgrade:
    post:
      tags:
      - ServicesResource
      summary: |-
        Reinitializes the Solr state by clearing the Solr HDFS
        data directory, the Solr data directory, and the Zookeeper
        state.
      description: |-
        Reinitializes the Solr state by clearing the Solr HDFS
        data directory, the Solr data directory, and the Zookeeper
        state.
        <p>
        Note:
        <li>
        <ul>Solr service should be in Stopped state.</ul>
        <ul>HDFS and Zookeeper services should in Running state.</ul>
        <ul>This is only needed for upgrading to CDH6.0.</ul>
        <p>
        Available since API v30.
      operationId: solrReinitializeStateForUpgradeCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the Solr service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/solrValidateMetadata:
    post:
      tags:
      - ServicesResource
      summary: Validates Solr metadata and configurations.
      description: |-
        Validates Solr metadata and configurations.
        <p>
        Note: This is only needed for upgrading to CDH6.0.
        <p>
        Available since API v30.
      operationId: solrValidateMetadataCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: A String representing the Solr service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/sqoopCreateDatabaseTables:
    post:
      tags:
      - ServicesResource
      summary: Create the Sqoop2 Server Database tables.
      description: |-
        Create the Sqoop2 Server Database tables.
        <p>
        This command is to be run whenever a new database has been specified. Will
        do nothing if tables already exist. Will not perform an upgrade. Only
        available when Sqoop2 Server is stopped.
        <p>
        Available since API v10.
      operationId: sqoopCreateDatabaseTablesCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Sentry service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/sqoopUpgradeDb:
    post:
      tags:
      - ServicesResource
      summary: Upgrade Sqoop Database schema as part of a major version upgrade.
      description: |-
        Upgrade Sqoop Database schema as part of a major version upgrade.
        <p/>
        When doing a major version upgrade for Sqoop, it is necessary to upgrade
        the schema of its database before Sqoop can run successfully.
        <p/>
        Available since API v6.
      operationId: sqoopUpgradeDbCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The Sqoop service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/start:
    post:
      tags:
      - ServicesResource
      summary: Start the service.
      description: Start the service.
      operationId: startCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to start.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/stop:
    post:
      tags:
      - ServicesResource
      summary: Stop the service.
      description: Stop the service.
      operationId: stopCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to stop.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/switchToMr2:
    post:
      tags:
      - ServicesResource
      summary: Change the cluster to use MR2 instead of MR1.
      description: |-
        Change the cluster to use MR2 instead of MR1. Services will be restarted.
        <p>
        Will perform the following steps:
        <ul>
        <li>Update all services that depend on MapReduce to instead depend on Yarn.
        </li>
        <li>Stop MapReduce</li>
        <li>Start Yarn (MR2 Included)</li>
        <li>Deploy Yarn (MR2) Client Configuration</li>
        </ul>
        <p>
        Available since API v6.
      operationId: switchToMr2
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the Yarn service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/yarnApplicationDiagnosticsCollection:
    post:
      tags:
      - ServicesResource
      summary: Collect the Diagnostics data for Yarn applications.
      description: |-
        Collect the Diagnostics data for Yarn applications
        <p>
        Available since API v8.
      operationId: collectYarnApplicationDiagnostics
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: Name of the YARN service on which to run the command.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Arguments used for collecting diagnostics data for Yarn applications
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiYarnApplicationDiagnosticsCollectionArgs'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/commands/yarnCreateCmContainerUsageInputDirCommand:
    post:
      tags:
      - ServicesResource
      summary: |-
        Creates the HDFS directory where YARN container usage metrics are
        stored by NodeManagers for CM to read and aggregate into app usage metrics.
      description: |-
        Creates the HDFS directory where YARN container usage metrics are
        stored by NodeManagers for CM to read and aggregate into app usage metrics.
        <p>
        Available since API v13.
        </p>
      operationId: createYarnCmContainerUsageInputDirCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The YARN service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/yarnCreateJobHistoryDirCommand:
    post:
      tags:
      - ServicesResource
      summary: Create the Yarn job history directory.
      description: |-
        Create the Yarn job history directory
        <p>
        Available since API v6.
        </p>
      operationId: createYarnJobHistoryDirCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The YARN service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/yarnFormatStateStore:
    post:
      tags:
      - ServicesResource
      summary: |-
        Formats the state store in ZooKeeper used for Resource Manager
        High Availability.
      description: |-
        Formats the state store in ZooKeeper used for Resource Manager
        High Availability. Typically used while moving from non-secure
        to secure cluster or vice-versa.
        <p>
        Available since API v8.
      operationId: yarnFormatStateStore
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The YARN service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/yarnNodeManagerRemoteAppLogDirCommand:
    post:
      tags:
      - ServicesResource
      summary: Create the Yarn NodeManager remote application log directory.
      description: |-
        Create the Yarn NodeManager remote application log directory
        <p>
        Available since API v6.
        </p>
      operationId: createYarnNodeManagerRemoteAppLogDirCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The YARN service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/zooKeeperCleanup:
    post:
      tags:
      - ServicesResource
      summary: Clean up all running server instances of a ZooKeeper service.
      description: |-
        Clean up all running server instances of a ZooKeeper service.
        <p>
        This command removes snapshots and transaction log files kept by
        ZooKeeper for backup purposes. Refer to the ZooKeeper documentation
        for more details.
      operationId: zooKeeperCleanupCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to start.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/zooKeeperInit:
    post:
      tags:
      - ServicesResource
      summary: Initializes all the server instances of a ZooKeeper service.
      description: |-
        Initializes all the server instances of a ZooKeeper service.
        <p>
        ZooKeeper server roles need to be initialized before they
        can be used.
      operationId: zooKeeperInitCommand
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service to start.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/commands/{commandName}:
    post:
      tags:
      - ServicesResource
      summary: |-
        Executes a command on the service specified
        by name.
      description: |-
        Executes a command on the service specified
        by name.
        <p>
        Available since API v6.
        </p>
      operationId: serviceCommandByName
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commandName
        in: path
        description: The command name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCommand'
              example:
                id: 12345
                name: '...'
                startTime: '...'
                endTime: '...'
                active: true
                success: true
                resultMessage: '...'
                resultDataUrl: '...'
                clusterRef:
                  clusterName: '...'
                  displayName: '...'
                serviceRef:
                  peerName: '...'
                  clusterName: '...'
                  serviceName: '...'
                  serviceDisplayName: '...'
                  serviceType: '...'
                roleRef:
                  clusterName: '...'
                  serviceName: '...'
                  roleName: '...'
                hostRef:
                  hostId: '...'
                  hostname: '...'
                parent:
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent: {}
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                children:
                  items:
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  - id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                canRetry: true
  /clusters/{clusterName}/services/{serviceName}/reports/hdfsUsageReport:
    get:
      tags:
      - ServicesResource
      summary: Fetch the HDFS usage report.
      description: |-
        Fetch the HDFS usage report. For the requested time range, at the
        specified aggregation intervals, the report shows HDFS disk usages
        per user.
        <p>
        This call supports returning JSON or CSV, as determined by the
        "Accept" header of application/json or text/csv.
        <p>
        Available since API v4. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: getHdfsUsageReport
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The HDFS service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aggregation
        in: query
        description: |-
          The (optional) aggregation period for the data.
          Supports "hourly", "daily" (default) and "weekly".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: daily
          enum:
          - DAILY
          - HOURLY
          - WEEKLY
      - name: from
        in: query
        description: |-
          The (optional) start time of the report in ISO 8601 format (
          defaults to 24 hours before "to" time).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nameservice
        in: query
        description: The (optional) HDFS nameservice. Required for HA setup.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to
        in: query
        description: |-
          The (optional) end time of the report in ISO 8601 format (
          defaults to now).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHdfsUsageReport'
              example:
                lastUpdateTime: '...'
                items:
                - date: '...'
                  user: '...'
                  size: 12345
                  rawSize: 12345
                  numFiles: 12345
                - date: '...'
                  user: '...'
                  size: 12345
                  rawSize: 12345
                  numFiles: 12345
            text/csv:
              schema:
                $ref: '#/components/schemas/ApiHdfsUsageReport'
  /clusters/{clusterName}/services/{serviceName}/reports/mrUsageReport:
    get:
      tags:
      - ServicesResource
      summary: Fetch the MR usage report.
      description: |-
        Fetch the MR usage report. For the requested time range, at the
        specified aggregation intervals, the report shows job CPU usages (and other
        metrics) per user.
        <p>
        This call supports returning JSON or CSV, as determined by the
        "Accept" header of application/json or text/csv.
        <p>
        Available since API v4. Only available with Cloudera Manager Enterprise
        Edition.
      operationId: getMrUsageReport
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The MR service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aggregation
        in: query
        description: |-
          The (optional) aggregation period for the data.
          Supports "hourly", "daily" (default) and "weekly".
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: daily
          enum:
          - DAILY
          - HOURLY
          - WEEKLY
      - name: from
        in: query
        description: |-
          The (optional) start time of the report in ISO 8601 format
          (defaults to 24 hours before "to" time).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to
        in: query
        description: |-
          The (optional) end time of the report in ISO 8601 format (defaults
          to now).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMrUsageReport'
              example:
                items:
                - timePeriod: '...'
                  user: '...'
                  group: '...'
                  cpuSec: 12345
                  memoryBytes: 12345
                  jobCount: 12345
                  taskCount: 12345
                  durationSec: 12345
                  failedMaps: 12345
                  totalMaps: 12345
                  failedReduces: 12345
                  totalReduces: 12345
                  mapInputBytes: 12345
                  mapOutputBytes: 12345
                  hdfsBytesRead: 12345
                  hdfsBytesWritten: 12345
                  localBytesRead: 12345
                  localBytesWritten: 12345
                  dataLocalMaps: 12345
                  rackLocalMaps: 12345
                - timePeriod: '...'
                  user: '...'
                  group: '...'
                  cpuSec: 12345
                  memoryBytes: 12345
                  jobCount: 12345
                  taskCount: 12345
                  durationSec: 12345
                  failedMaps: 12345
                  totalMaps: 12345
                  failedReduces: 12345
                  totalReduces: 12345
                  mapInputBytes: 12345
                  mapOutputBytes: 12345
                  hdfsBytesRead: 12345
                  hdfsBytesWritten: 12345
                  localBytesRead: 12345
                  localBytesWritten: 12345
                  dataLocalMaps: 12345
                  rackLocalMaps: 12345
            text/csv:
              schema:
                $ref: '#/components/schemas/ApiMrUsageReport'
  /clusters/{clusterName}/services/{serviceName}/snapshots/policies:
    get:
      tags:
      - SnapshotsResource
      summary: Returns information for all snapshot policies.
      description: Returns information for all snapshot policies.
      operationId: readPolicies
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: The view to materialize.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSnapshotPolicyList'
              example:
                items:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: REMOTE_S3
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
    post:
      tags:
      - SnapshotsResource
      summary: Creates one or more snapshot policies.
      description: Creates one or more snapshot policies.
      operationId: createPolicies
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: List of the snapshot policies to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSnapshotPolicyList'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSnapshotPolicyList'
              example:
                items:
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: REMOTE_S3
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
                - name: '...'
                  description: '...'
                  hourlySnapshots: 12345
                  dailySnapshots: 12345
                  weeklySnapshots: 12345
                  monthlySnapshots: 12345
                  yearlySnapshots: 12345
                  minuteOfHour: 12345
                  hoursForHourlySnapshots:
                  - 12345
                  - 12345
                  hourOfDay: 12345
                  dayOfWeek: 12345
                  dayOfMonth: 12345
                  monthOfYear: 12345
                  alertOnStart: true
                  alertOnSuccess: true
                  alertOnFail: true
                  alertOnAbort: true
                  hbaseArguments:
                    tableRegExps:
                    - '...'
                    - '...'
                    storage: LOCAL
                  hdfsArguments:
                    pathPatterns:
                    - '...'
                    - '...'
                  lastCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  lastSuccessfulCommand:
                    hbaseResult: {}
                    hdfsResult: {}
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  paused: true
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/snapshots/policies/{policyName}:
    get:
      tags:
      - SnapshotsResource
      summary: Returns information for a specific snapshot policy.
      description: Returns information for a specific snapshot policy.
      operationId: readPolicy
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyName
        in: path
        description: Name of an existing snapshot policy.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: view
        in: query
        description: The view to materialize.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSnapshotPolicy'
              example:
                name: '...'
                description: '...'
                hourlySnapshots: 12345
                dailySnapshots: 12345
                weeklySnapshots: 12345
                monthlySnapshots: 12345
                yearlySnapshots: 12345
                minuteOfHour: 12345
                hoursForHourlySnapshots:
                - 12345
                - 12345
                hourOfDay: 12345
                dayOfWeek: 12345
                dayOfMonth: 12345
                monthOfYear: 12345
                alertOnStart: true
                alertOnSuccess: true
                alertOnFail: true
                alertOnAbort: true
                hbaseArguments:
                  tableRegExps:
                  - '...'
                  - '...'
                  storage: LOCAL
                hdfsArguments:
                  pathPatterns:
                  - '...'
                  - '...'
                lastCommand:
                  hbaseResult:
                    processedTableCount: 12345
                    processedTables:
                    - '...'
                    - '...'
                    unprocessedTableCount: 12345
                    unprocessedTables:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  hdfsResult:
                    processedPathCount: 12345
                    processedPaths:
                    - '...'
                    - '...'
                    unprocessedPathCount: 12345
                    unprocessedPaths:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                lastSuccessfulCommand:
                  hbaseResult:
                    processedTableCount: 12345
                    processedTables:
                    - '...'
                    - '...'
                    unprocessedTableCount: 12345
                    unprocessedTables:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  hdfsResult:
                    processedPathCount: 12345
                    processedPaths:
                    - '...'
                    - '...'
                    unprocessedPathCount: 12345
                    unprocessedPaths:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                paused: true
    put:
      tags:
      - SnapshotsResource
      summary: Updates an existing snapshot policy.
      description: Updates an existing snapshot policy.
      operationId: updatePolicy
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyName
        in: path
        description: Name of an existing snapshot policy.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Modified policy.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSnapshotPolicy'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSnapshotPolicy'
              example:
                name: '...'
                description: '...'
                hourlySnapshots: 12345
                dailySnapshots: 12345
                weeklySnapshots: 12345
                monthlySnapshots: 12345
                yearlySnapshots: 12345
                minuteOfHour: 12345
                hoursForHourlySnapshots:
                - 12345
                - 12345
                hourOfDay: 12345
                dayOfWeek: 12345
                dayOfMonth: 12345
                monthOfYear: 12345
                alertOnStart: true
                alertOnSuccess: true
                alertOnFail: true
                alertOnAbort: true
                hbaseArguments:
                  tableRegExps:
                  - '...'
                  - '...'
                  storage: REMOTE_S3
                hdfsArguments:
                  pathPatterns:
                  - '...'
                  - '...'
                lastCommand:
                  hbaseResult:
                    processedTableCount: 12345
                    processedTables:
                    - '...'
                    - '...'
                    unprocessedTableCount: 12345
                    unprocessedTables:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  hdfsResult:
                    processedPathCount: 12345
                    processedPaths:
                    - '...'
                    - '...'
                    unprocessedPathCount: 12345
                    unprocessedPaths:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                lastSuccessfulCommand:
                  hbaseResult:
                    processedTableCount: 12345
                    processedTables:
                    - '...'
                    - '...'
                    unprocessedTableCount: 12345
                    unprocessedTables:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  hdfsResult:
                    processedPathCount: 12345
                    processedPaths:
                    - '...'
                    - '...'
                    unprocessedPathCount: 12345
                    unprocessedPaths:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                paused: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - SnapshotsResource
      summary: Deletes an existing snapshot policy.
      description: Deletes an existing snapshot policy.
      operationId: deletePolicy
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyName
        in: path
        description: Name of an existing snapshot policy.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSnapshotPolicy'
              example:
                name: '...'
                description: '...'
                hourlySnapshots: 12345
                dailySnapshots: 12345
                weeklySnapshots: 12345
                monthlySnapshots: 12345
                yearlySnapshots: 12345
                minuteOfHour: 12345
                hoursForHourlySnapshots:
                - 12345
                - 12345
                hourOfDay: 12345
                dayOfWeek: 12345
                dayOfMonth: 12345
                monthOfYear: 12345
                alertOnStart: true
                alertOnSuccess: true
                alertOnFail: true
                alertOnAbort: true
                hbaseArguments:
                  tableRegExps:
                  - '...'
                  - '...'
                  storage: LOCAL
                hdfsArguments:
                  pathPatterns:
                  - '...'
                  - '...'
                lastCommand:
                  hbaseResult:
                    processedTableCount: 12345
                    processedTables:
                    - '...'
                    - '...'
                    unprocessedTableCount: 12345
                    unprocessedTables:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  hdfsResult:
                    processedPathCount: 12345
                    processedPaths:
                    - '...'
                    - '...'
                    unprocessedPathCount: 12345
                    unprocessedPaths:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                lastSuccessfulCommand:
                  hbaseResult:
                    processedTableCount: 12345
                    processedTables:
                    - '...'
                    - '...'
                    unprocessedTableCount: 12345
                    unprocessedTables:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  hdfsResult:
                    processedPathCount: 12345
                    processedPaths:
                    - '...'
                    - '...'
                    unprocessedPathCount: 12345
                    unprocessedPaths:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                paused: true
  /clusters/{clusterName}/services/{serviceName}/snapshots/policies/{policyName}/history:
    get:
      tags:
      - SnapshotsResource
      summary: Returns a list of commands triggered by a snapshot policy.
      description: Returns a list of commands triggered by a snapshot policy.
      operationId: readHistory
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyName
        in: path
        description: Name of an existing snapshot policy.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Maximum number of commands to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 20
      - name: offset
        in: query
        description: Index of first command to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: view
        in: query
        description: The view to materialize.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSnapshotCommandList'
              example:
                items:
                - hbaseResult:
                    processedTableCount: 12345
                    processedTables:
                    - '...'
                    - '...'
                    unprocessedTableCount: 12345
                    unprocessedTables:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  hdfsResult:
                    processedPathCount: 12345
                    processedPaths:
                    - '...'
                    - '...'
                    unprocessedPathCount: 12345
                    unprocessedPaths:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
                - hbaseResult:
                    processedTableCount: 12345
                    processedTables:
                    - '...'
                    - '...'
                    unprocessedTableCount: 12345
                    unprocessedTables:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  hdfsResult:
                    processedPathCount: 12345
                    processedPaths:
                    - '...'
                    - '...'
                    unprocessedPathCount: 12345
                    unprocessedPaths:
                    - '...'
                    - '...'
                    createdSnapshotCount: 12345
                    createdSnapshots:
                    - {}
                    - {}
                    deletedSnapshotCount: 12345
                    deletedSnapshots:
                    - {}
                    - {}
                    creationErrorCount: 12345
                    creationErrors:
                    - {}
                    - {}
                    deletionErrorCount: 12345
                    deletionErrors:
                    - {}
                    - {}
                  id: 12345
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  active: true
                  success: true
                  resultMessage: '...'
                  resultDataUrl: '...'
                  clusterRef:
                    clusterName: '...'
                    displayName: '...'
                  serviceRef:
                    peerName: '...'
                    clusterName: '...'
                    serviceName: '...'
                    serviceDisplayName: '...'
                    serviceType: '...'
                  roleRef:
                    clusterName: '...'
                    serviceName: '...'
                    roleName: '...'
                  hostRef:
                    hostId: '...'
                    hostname: '...'
                  parent:
                    id: 12345
                    name: '...'
                    startTime: '...'
                    endTime: '...'
                    active: true
                    success: true
                    resultMessage: '...'
                    resultDataUrl: '...'
                    clusterRef: {}
                    serviceRef: {}
                    roleRef: {}
                    hostRef: {}
                    parent: {}
                    children: {}
                    canRetry: true
                  children:
                    items:
                    - {}
                    - {}
                  canRetry: true
  /timeseries:
    get:
      tags:
      - TimeSeriesResource
      summary: |-
        Retrieve time-series data from the Cloudera Manager (CM) time-series
        data store using a tsquery.
      description: |-
        Retrieve time-series data from the Cloudera Manager (CM) time-series
        data store using a tsquery.

        Please see the
        <a href="http://tiny.cloudera.com/cm_tsquery">
        tsquery language documentation</a>.
        <p/>
        Available since API v6.
      operationId: queryTimeSeries
      parameters:
      - name: contentType
        in: query
        description: |-
          to return the response in. The content types
          "application/json" and "text/csv" are supported. This defaults to
          "application/json". If "text/csv" is specified then we return one row
          per time series data point, and we don't return any of the metadata.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: application/json
      - name: desiredRollup
        in: query
        description: |-
          Aggregate rollup level desired for the response data.
          Valid values are RAW, TEN_MINUTELY, HOURLY, SIX_HOURLY, DAILY, and WEEKLY.
          Note that if the mustUseDesiredRollup parameter is not set, then the
          monitoring server can decide to return a different rollup level.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: RAW
      - name: from
        in: query
        description: |-
          Start of the period to query in ISO 8601 format (defaults to 5
          minutes before the end of the period).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: mustUseDesiredRollup
        in: query
        description: |-
          If set then the tsquery will return
          data with the desired aggregate rollup level.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: query
        in: query
        description: Tsquery to run against the CM time-series data store.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to
        in: query
        description: |-
          End of the period to query in ISO 8601 format (defaults to
          current time).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimeSeriesResponseList'
              example:
                items:
                - timeSeries:
                  - metadata: {}
                    data:
                    - {}
                    - {}
                  - metadata: {}
                    data:
                    - {}
                    - {}
                  warnings:
                  - '...'
                  - '...'
                  timeSeriesQuery: '...'
                - timeSeries:
                  - metadata: {}
                    data:
                    - {}
                    - {}
                  - metadata: {}
                    data:
                    - {}
                    - {}
                  warnings:
                  - '...'
                  - '...'
                  timeSeriesQuery: '...'
    post:
      tags:
      - TimeSeriesResource
      summary: |-
        Retrieve time-series data from the Cloudera Manager (CM) time-series
        data store accepting HTTP POST request.
      description: |-
        Retrieve time-series data from the Cloudera Manager (CM) time-series
        data store accepting HTTP POST request. This method differs
        from queryTimeSeries() in v6 that this could accept query strings that are
        longer than HTTP GET request limit.

        Available since API v11.
      operationId: queryTimeSeries
      requestBody:
        description: |-
          Request object containing information used when
          retrieving timeseries data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTimeSeriesRequest'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimeSeriesResponseList'
              example:
                items:
                - timeSeries:
                  - metadata: {}
                    data:
                    - {}
                    - {}
                  - metadata: {}
                    data:
                    - {}
                    - {}
                  warnings:
                  - '...'
                  - '...'
                  timeSeriesQuery: '...'
                - timeSeries:
                  - metadata: {}
                    data:
                    - {}
                    - {}
                  - metadata: {}
                    data:
                    - {}
                    - {}
                  warnings:
                  - '...'
                  - '...'
                  timeSeriesQuery: '...'
      x-codegen-request-body-name: body
  /timeseries/entityTypeAttributes:
    get:
      tags:
      - TimeSeriesResource
      summary: Retrieve all metric entity type attributes monitored by Cloudera Manager.
      description: |-
        Retrieve all metric entity type attributes monitored by Cloudera Manager.
        <p/>
        Available since API v11.
      operationId: getEntityTypeAttributes
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimeSeriesEntityAttributeList'
              example:
                items:
                - name: '...'
                  displayName: '...'
                  description: '...'
                  isValueCaseSensitive: true
                - name: '...'
                  displayName: '...'
                  description: '...'
                  isValueCaseSensitive: true
  /timeseries/entityTypes:
    get:
      tags:
      - TimeSeriesResource
      summary: Retrieve all metric entity types monitored by Cloudera Manager.
      description: |-
        Retrieve all metric entity types monitored by Cloudera Manager.
        It is guaranteed that parent types appear before their children.
        <p/>
        Available since API v11.
      operationId: getEntityTypes
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimeSeriesEntityTypeList'
              example:
                items:
                - name: '...'
                  category: '...'
                  nameForCrossEntityAggregateMetrics: '...'
                  displayName: '...'
                  description: '...'
                  immutableAttributeNames:
                  - '...'
                  - '...'
                  mutableAttributeNames:
                  - '...'
                  - '...'
                  entityNameFormat:
                  - '...'
                  - '...'
                  entityDisplayNameFormat: '...'
                  parentMetricEntityTypeNames:
                  - '...'
                  - '...'
                - name: '...'
                  category: '...'
                  nameForCrossEntityAggregateMetrics: '...'
                  displayName: '...'
                  description: '...'
                  immutableAttributeNames:
                  - '...'
                  - '...'
                  mutableAttributeNames:
                  - '...'
                  - '...'
                  entityNameFormat:
                  - '...'
                  - '...'
                  entityDisplayNameFormat: '...'
                  parentMetricEntityTypeNames:
                  - '...'
                  - '...'
  /timeseries/schema:
    get:
      tags:
      - TimeSeriesResource
      summary: Retrieve schema for all metrics.
      description: |-
        Retrieve schema for all metrics
        <p/>
        The schema is fixed for a product version.
        The schema may change for an API versions
        <p/>
        Available since API v4.
      operationId: getMetricSchema
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetricSchemaList'
              example:
                items:
                - name: '...'
                  displayName: '...'
                  description: '...'
                  isCounter: true
                  unitNumerator: '...'
                  unitDenominator: '...'
                  aliases:
                  - '...'
                  - '...'
                  sources:
                    property1:
                    - '...'
                    - '...'
                    property2:
                    - '...'
                    - '...'
                - name: '...'
                  displayName: '...'
                  description: '...'
                  isCounter: true
                  unitNumerator: '...'
                  unitDenominator: '...'
                  aliases:
                  - '...'
                  - '...'
                  sources:
                    property1:
                    - '...'
                    - '...'
                    property2:
                    - '...'
                    - '...'
  /tools/echo:
    get:
      tags:
      - ToolsResource
      summary: Echoes the provided message back to the caller.
      description: Echoes the provided message back to the caller.
      operationId: echo
      parameters:
      - name: message
        in: query
        description: The message to echo back
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: "Hello, World!"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEcho'
              example:
                message: '...'
  /tools/echoError:
    get:
      tags:
      - ToolsResource
      summary: Throws an error containing the given input message.
      description: |-
        Throws an error containing the given input message. This is
        what an error response looks like.

        <pre>
           {
             "message": "An error message",
             "causes": [ "A list of causes", "Potentially null" ]
           }
         </pre>

        <p>The <em>message</em> field contains a description of the error.
        The <em>causes</em> field, if not null, contains a list of causes
        for the error.
        </p>

        <p>Note that this <strong>never</strong> returns an echoMessage.
        Instead, the result (and all error results) has the above structure.
        </p>
      operationId: echoError
      parameters:
      - name: message
        in: query
        description: The error message to echo
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: Default error message
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiEcho'
              example:
                message: '...'
  /users:
    get:
      tags:
      - UsersResource
      summary: Returns a list of the user names configured in the system.
      description: Returns a list of the user names configured in the system.
      operationId: readUsers2
      parameters:
      - name: view
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: summary
          enum:
          - EXPORT
          - EXPORT_REDACTED
          - FULL
          - FULL_WITH_HEALTH_CHECK_EXPLANATION
          - SUMMARY
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser2List'
              example:
                items:
                - name: '...'
                  password: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  pwHash: '...'
                  pwSalt: 12345
                  pwLogin: true
                - name: '...'
                  password: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  pwHash: '...'
                  pwSalt: 12345
                  pwLogin: true
    post:
      tags:
      - UsersResource
      summary: Creates a list of users.
      description: |-
        Creates a list of users.
        <p>
        When creating new users, the <i>password</i> property of each user should
        be their plain text password. The returned user information will not
        contain any password information.
        <p/>
      operationId: createUsers2
      requestBody:
        description: List of users to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser2List'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser2List'
              example:
                items:
                - name: '...'
                  password: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  pwHash: '...'
                  pwSalt: 12345
                  pwLogin: true
                - name: '...'
                  password: '...'
                  authRoles:
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  - displayName: '...'
                    name: '...'
                    uuid: '...'
                  pwHash: '...'
                  pwSalt: 12345
                  pwLogin: true
      x-codegen-request-body-name: body
  /users/sessions:
    get:
      tags:
      - UsersResource
      summary: |-
        Return a list of the sessions associated with interactive authenticated
        users in Cloudera Manager.
      description: |-
        Return a list of the sessions associated with interactive authenticated
        users in Cloudera Manager.
        <p>
        Note that these sessions are only associated with users who log into the
        web interface. API users will not appear.
      operationId: getSessions
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserSessionList'
              example:
                items:
                - name: '...'
                  remoteAddr: '...'
                  lastRequest: '...'
                - name: '...'
                  remoteAddr: '...'
                  lastRequest: '...'
  /users/{userName}:
    get:
      tags:
      - UsersResource
      summary: Returns detailed information about a user.
      description: Returns detailed information about a user.
      operationId: readUser2
      parameters:
      - name: userName
        in: path
        description: The user to read.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser2'
              example:
                name: '...'
                password: '...'
                authRoles:
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                pwHash: '...'
                pwSalt: 12345
                pwLogin: true
    put:
      tags:
      - UsersResource
      summary: Updates the given user's information.
      description: |-
        Updates the given user's information. Note that the user's name cannot
        be changed.
      operationId: updateUser2
      parameters:
      - name: userName
        in: path
        description: User name being updated.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The user information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser2'
        required: false
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser2'
              example:
                name: '...'
                password: '...'
                authRoles:
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                pwHash: '...'
                pwSalt: 12345
                pwLogin: true
      x-codegen-request-body-name: body
    delete:
      tags:
      - UsersResource
      summary: Deletes a user from the system.
      description: |-
        Deletes a user from the system.
        <p/>
      operationId: deleteUser2
      parameters:
      - name: userName
        in: path
        description: The name of the user to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser2'
              example:
                name: '...'
                password: '...'
                authRoles:
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                - displayName: '...'
                  name: '...'
                  uuid: '...'
                pwHash: '...'
                pwSalt: 12345
                pwLogin: true
  /users/expireSessions/{userName}:
    post:
      tags:
      - UsersResource
      summary: |-
        Expires the sessions associated with interactive authenticated
        user in Cloudera Manager.
      description: |-
        Expires the sessions associated with interactive authenticated
        user in Cloudera Manager. This can be used by Full Admin/User Admin users only.
        <p>
        Note that these sessions are only associated with a user who log into the
        web interface. Sessions of an API user will not be affected.
      operationId: expireSessions
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content: {}
  /clusters/{clusterName}/services/{serviceName}/watcheddir:
    get:
      tags:
      - WatchedDirResource
      summary: Lists all the watched directories.
      description: |-
        Lists all the watched directories.
        <p>
        Available since API v14. Only available with Cloudera Manager Enterprise
        Edition.
        <p>
      operationId: listWatchedDirectories
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiWatchedDirList'
              example:
                items:
                - path: '...'
                - path: '...'
    post:
      tags:
      - WatchedDirResource
      summary: Adds a directory to the watching list.
      description: |-
        Adds a directory to the watching list.
        <p>
        Available since API v14. Only available with Cloudera Manager Enterprise
        Edition.
        <p>
      operationId: addWatchedDirectory
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The directory to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiWatchedDir'
        required: false
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiWatchedDir'
              example:
                path: '...'
      x-codegen-request-body-name: body
  /clusters/{clusterName}/services/{serviceName}/watcheddir/{directoryPath}:
    delete:
      tags:
      - WatchedDirResource
      summary: Removes a directory from the watching list.
      description: |-
        Removes a directory from the watching list.
        <p>
        Available since API v14. Only available with Cloudera Manager Enterprise
        Edition.
        <p>
      operationId: removeWatchedDirectory
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: directoryPath
        in: path
        description: The directory path to be removed.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The service name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiWatchedDir'
              example:
                path: '...'
  /clusters/{clusterName}/services/{serviceName}/yarnApplications:
    get:
      tags:
      - YarnApplicationsResource
      summary: Returns a list of applications that satisfy the filter.
      description: |-
        Returns a list of applications that satisfy the filter
        <p>
        Available since API v6.
      operationId: getYarnApplications
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter to apply to the applications. A basic filter tests the
          value of an attribute and looks something like 'executing = true' or
          'user = root'. Multiple basic filters can be combined into a complex
          expression using standard and / or boolean logic and parenthesis.
          An example of a complex filter is: 'application_duration > 5s and (user = root or
          user = myUserName').
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from
        in: query
        description: |-
          Start of the period to query in ISO 8601 format (defaults to 5
          minutes before the 'to' time).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: |-
          The maximum number of applications to return. Applications will be
          returned in the following order:
          <ul>
          <li> All executing applications, ordered from longest to shortest running </li>
          <li> All completed applications order by end time descending. </li>
          </ul>
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: offset
        in: query
        description: |-
          The offset to start returning applications from. This is useful
          for paging through lists of applications. Note that this has non-deterministic
          behavior if executing applications are included in the response because they
          can disappear from the list while paging. To exclude executing applications
          from the response and a 'executing = false' clause to your filter.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: to
        in: query
        description: End of the period to query in ISO 8601 format (defaults to now).
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: now
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiYarnApplicationResponse'
              example:
                applications:
                - allocatedMB: 12345
                  allocatedVCores: 12345
                  runningContainers: 12345
                  applicationTags:
                  - '...'
                  - '...'
                  allocatedMemorySeconds: 12345
                  allocatedVcoreSeconds: 12345
                  applicationId: '...'
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  user: '...'
                  pool: '...'
                  progress: 12345.0
                  attributes:
                    property1: '...'
                    property2: '...'
                  mr2AppInformation:
                    jobState: '...'
                  state: '...'
                  containerUsedMemorySeconds: 12345.0
                  containerUsedMemoryMax: 12345.0
                  containerUsedCpuSeconds: 12345.0
                  containerUsedVcoreSeconds: 12345.0
                  containerAllocatedMemorySeconds: 12345.0
                  containerAllocatedVcoreSeconds: 12345.0
                - allocatedMB: 12345
                  allocatedVCores: 12345
                  runningContainers: 12345
                  applicationTags:
                  - '...'
                  - '...'
                  allocatedMemorySeconds: 12345
                  allocatedVcoreSeconds: 12345
                  applicationId: '...'
                  name: '...'
                  startTime: '...'
                  endTime: '...'
                  user: '...'
                  pool: '...'
                  progress: 12345.0
                  attributes:
                    property1: '...'
                    property2: '...'
                  mr2AppInformation:
                    jobState: '...'
                  state: '...'
                  containerUsedMemorySeconds: 12345.0
                  containerUsedMemoryMax: 12345.0
                  containerUsedCpuSeconds: 12345.0
                  containerUsedVcoreSeconds: 12345.0
                  containerAllocatedMemorySeconds: 12345.0
                  containerAllocatedVcoreSeconds: 12345.0
                warnings:
                - '...'
                - '...'
  /clusters/{clusterName}/services/{serviceName}/yarnApplications/attributes:
    get:
      tags:
      - YarnApplicationsResource
      summary: |-
        Returns the list of all attributes that the Service Monitor can associate
        with YARN applications.
      description: |-
        Returns the list of all attributes that the Service Monitor can associate
        with YARN applications.
        <p>
        Examples of attributes include the user who ran the application and the
        number of maps completed by the application.
        <p>
        These attributes can be used to search for specific YARN applications through
        the getYarnApplications API. For example the 'user' attribute could be used
        in the search 'user = root'. If the attribute is numeric it can also be used
        as a metric in a tsquery (ie, 'select maps_completed from YARN_APPLICATIONS').
        <p>
        Note that this response is identical for all YARN services.
        <p>
        Available since API v6.
      operationId: getYarnApplicationAttributes
      parameters:
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiYarnApplicationAttributeList'
              example:
                items:
                - name: '...'
                  type: '...'
                  displayName: '...'
                  supportsHistograms: true
                  description: '...'
                - name: '...'
                  type: '...'
                  displayName: '...'
                  supportsHistograms: true
                  description: '...'
  /clusters/{clusterName}/services/{serviceName}/yarnApplications/{applicationId}/kill:
    post:
      tags:
      - YarnApplicationsResource
      summary: Kills an YARN Application.
      description: |-
        Kills an YARN Application
        <p>
        Available since API v6.
      operationId: killYarnApplication
      parameters:
      - name: applicationId
        in: path
        description: The applicationId to kill
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceName
        in: path
        description: The name of the service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiYarnKillResponse'
              example:
                warning: '...'
components:
  schemas:
    ApiActivity:
      title: ApiActivity
      type: object
      properties:
        name:
          type: string
          description: Activity name.
          example: "null"
        type:
          $ref: '#/components/schemas/ApiActivityType'
        parent:
          type: string
          description: The name of the parent activity.
          example: "null"
        startTime:
          type: string
          description: The start time of this activity.
          example: "null"
        finishTime:
          type: string
          description: The finish time of this activity.
          example: "null"
        id:
          type: string
          description: "Activity id, which is unique within a MapReduce service."
          example: "null"
        status:
          $ref: '#/components/schemas/ApiActivityStatus'
        user:
          type: string
          description: The user who submitted this activity.
          example: "null"
        group:
          type: string
          description: The user-group of this activity.
          example: "null"
        inputDir:
          type: string
          description: The input data directory of the activity. An HDFS url.
          example: "null"
        outputDir:
          type: string
          description: The output result directory of the activity. An HDFS url.
          example: "null"
        mapper:
          type: string
          description: The mapper class.
          example: "null"
        combiner:
          type: string
          description: The combiner class.
          example: "null"
        reducer:
          type: string
          description: The reducer class.
          example: "null"
        queueName:
          type: string
          description: The scheduler queue this activity is in.
          example: "null"
        schedulerPriority:
          type: string
          description: The scheduler priority of this activity.
          example: "null"
      description: |-
        Represents a user activity, such as a MapReduce job, a Hive query, an Oozie
        workflow, etc.
      example:
        name: '...'
        type: MR
        parent: '...'
        startTime: '...'
        finishTime: '...'
        id: '...'
        status: SUSPENDED
        user: '...'
        group: '...'
        inputDir: '...'
        outputDir: '...'
        mapper: '...'
        combiner: '...'
        reducer: '...'
        queueName: '...'
        schedulerPriority: '...'
    ApiActivityList:
      title: ApiActivityList
      description: A generic list.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiActivity'
    ApiActivityStatus:
      title: ApiActivityStatus
      type: string
      description: ""
      enum:
      - UNKNOWN
      - SUBMITTED
      - STARTED
      - SUSPENDED
      - FAILED
      - KILLED
      - SUCCEEDED
      - ASSUMED_SUCCEEDED
    ApiActivityType:
      title: ApiActivityType
      type: string
      description: ""
      enum:
      - UNKNOWN
      - OOZIE
      - PIG
      - HIVE
      - MR
      - STREAMING
    ApiAddCustomCertsArguments:
      title: ApiAddCustomCertsArguments
      type: object
      properties:
        location:
          type: string
          description: |-
            The location on disk to store the CMCA directory. If there is already a CMCA created there,
            it will be backed up, and a new one will be created in its place.
          example: /opt/cloudera/CMCA
        interpretAsFilenames:
          type: boolean
          description: |-
            Whether the following arguments are interpreted as filenames local to the Cloudera Manager
            host (true, default) or as the actual data for that argument:
            * hostCerts.hostCert
            * hostCerts.hostKey

            If HTTPS has not been enabled on the Cloudera Manager Admin Console and API, we
            *strongly* recommend that you pass the arguments as filenames local to the Cloudera Manager
            host (i.e. set to true) to avoid leaking sensitive information over the wire in plaintext.
          example: true
        hostCerts:
          type: array
          description: |-
            A list of HostCertInfo objects, which associate a hostname with the corresponding
            certificate and private key. Only used if customCA == true.
          items:
            $ref: '#/components/schemas/ApiHostCertInfo'
      description: Arguments to add custom certificates to the Auto-TLS certificate
        database
      example:
        location: /opt/cloudera/CMCA
        interpretAsFilenames: true
        hostCerts:
        - hostname: '...'
          certificate: host-cert.pem
          key: host-key.pem
        - hostname: '...'
          certificate: '...'
          key: '...'
    ApiAudit:
      title: ApiAudit
      type: object
      properties:
        timestamp:
          type: string
          description: When the audit event was captured.
          example: "null"
        service:
          type: string
          description: Service name associated with this audit.
          example: "null"
        username:
          type: string
          description: The user who performed this operation.
          example: "null"
        impersonator:
          type: string
          description: |-
            The impersonating user (or the proxy user) who submitted this operation.
            This is usually applicable when using services like Oozie or Hue, who
            can be configured to impersonate other users and submit jobs.
          example: "null"
        ipAddress:
          type: string
          description: The IP address that the client connected from.
          example: "null"
        command:
          type: string
          description: The command/operation that was requested.
          example: "null"
        resource:
          type: string
          description: The resource that the operation was performed on.
          example: "null"
        operationText:
          type: string
          description: |-
            The full text of the requested operation. E.g. the full Hive query.
            <p>
            Available since API v5.
          example: "null"
        allowed:
          type: boolean
          description: Whether the operation was allowed or denied by the authorization
            system.
      description: |-
        Models audit events from both CM and CM managed services like HDFS, HBase
        and Hive. Audits for CM managed services are retrieved from Cloudera Navigator
        server.
      example:
        timestamp: '...'
        service: '...'
        username: '...'
        impersonator: '...'
        ipAddress: '...'
        command: '...'
        resource: '...'
        operationText: '...'
        allowed: true
    ApiAuditList:
      title: ApiAuditList
      description: A generic list.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiAudit'
    ApiAuthRole:
      title: ApiAuthRole
      type: object
      properties:
        displayName:
          type: string
          description: ""
          example: "null"
        name:
          type: string
          description: ""
          example: "null"
        clusters:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterRef'
        users:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiUser2Ref'
        externalUserMappings:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiExternalUserMappingRef'
        baseRole:
          $ref: '#/components/schemas/ApiAuthRoleRef'
        uuid:
          type: string
          description: |-
            Readonly. The UUID of the authRole.
            <p>
          example: "null"
        isCustom:
          type: boolean
          description: ""
      description: |-
        This is the model for user role scope in the API since v18.
        This is used to support granular permissions.
      example:
        displayName: '...'
        name: '...'
        clusters:
        - clusterName: '...'
          displayName: '...'
        - clusterName: '...'
          displayName: '...'
        users:
        - name: '...'
        - name: '...'
        externalUserMappings:
        - uuid: '...'
          name: '...'
          type: SAML_SCRIPT
        - uuid: '...'
          name: '...'
          type: LDAP
        baseRole:
          displayName: '...'
          name: '...'
          uuid: '...'
        uuid: '...'
        isCustom: true
    ApiAuthRoleAuthority:
      title: ApiAuthRoleAuthority
      type: object
      properties:
        name:
          type: string
          description: The name of the authority.
          example: "null"
        description:
          type: string
          description: The description of the authority.
          example: "null"
      description: |-
        This represents an authority with a name
        and description.
      example:
        name: '...'
        description: '...'
    ApiAuthRoleList:
      title: ApiAuthRoleList
      description: A list of auth roles.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiAuthRole'
    ApiAuthRoleMetadata:
      title: ApiAuthRoleMetadata
      type: object
      properties:
        displayName:
          type: string
          description: ""
          example: "null"
        uuid:
          type: string
          description: ""
          example: "null"
        role:
          type: string
          description: ""
          example: "null"
        authorities:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiAuthRoleAuthority'
        allowedScopes:
          type: array
          description: ""
          example: "null"
          items:
            type: string
      description: This is the model for auth role metadata
      example:
        displayName: '...'
        uuid: '...'
        role: '...'
        authorities:
        - name: '...'
          description: '...'
        - name: '...'
          description: '...'
        allowedScopes:
        - '...'
        - '...'
    ApiAuthRoleMetadataList:
      title: ApiAuthRoleMetadataList
      description: A list of auth roles metadata.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiAuthRoleMetadata'
    ApiAuthRoleRef:
      title: ApiAuthRoleRef
      type: object
      properties:
        displayName:
          type: string
          description: |-
            The display name of the authRole.
            displayName is optional. If a changed displayName is passed
            in, it will be ignored.
          example: "null"
        name:
          type: string
          description: |-
            The name of the authRole.
            name is available from v32. It is optional, and cannot be
            modified. Name takes precedence over uuid. If name is absent,
            uuid will be used for look up.
          example: "null"
        uuid:
          type: string
          description: "The uuid of the authRole, which uniquely identifies it in\
            \ a CM installation."
          example: "null"
      description: An authRoleRef to operate on ApiAuthRole object
      example:
        displayName: '...'
        name: '...'
        uuid: '...'
    ApiBatchRequest:
      title: ApiBatchRequest
      description: "A batch request, comprised of one or more request elements."
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiBatchRequestElement'
    ApiBatchRequestElement:
      title: ApiBatchRequestElement
      type: object
      properties:
        method:
          $ref: '#/components/schemas/HTTPMethod'
        url:
          type: string
          description: |-
            The URL of the request. Must not have a scheme, host, or port. The path
            should be prefixed with "/api/", and should include path and query
            parameters.
          example: "null"
        body:
          type: object
          properties: {}
          description: |-
            Optional body of the request. Must be serialized in accordance with
            #getContentType(). For application/json, use
            com.cloudera.api.ApiObjectMapper.
        contentType:
          type: string
          description: |-
            Content-Type header of the request element. If unset, the element will be
            treated as if the wildcard type had been specified unless it has a body,
            in which case it will fall back to application/json.
          example: "null"
        acceptType:
          type: string
          description: |-
            Accept header of the request element. The response body (if it exists)
            will be in this representation. If unset, the element will be treated as
            if the wildcard type had been requested.
          example: "null"
      description: |-
        A single element of a batch request, often part of a list with other
        elements.
      example:
        method: PUT
        url: '...'
        body: {}
        contentType: '...'
        acceptType: '...'
    ApiBatchResponse:
      title: ApiBatchResponse
      description: "A batch response, comprised of one or more response elements."
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiBatchResponseElement'
          success:
            type: boolean
            description: |-
              Read-only. True if every response element's
              ApiBatchResponseElement#getStatusCode() is in the range [200, 300),
              false otherwise.
    ApiBatchResponseElement:
      title: ApiBatchResponseElement
      type: object
      properties:
        statusCode:
          type: number
          description: Read-only. The HTTP status code of the response.
        response:
          type: object
          properties: {}
          description: |-
            Read-only. The (optional) serialized body of the response, in the
            representation produced by the corresponding API endpoint, such as
            application/json.
      description: |-
        A single element of a batch response, often part of a list with other
        elements.
      example:
        statusCode: 12345
        response: {}
    ApiBulkCommandList:
      title: ApiBulkCommandList
      description: |-
        A list of commands.
        <p>
        This list is returned whenever commands are issued in bulk, and contains a
        second list with information about errors issuing specific commands.
      allOf:
      - $ref: '#/components/schemas/ApiCommandList'
      - type: object
        properties:
          errors:
            type: array
            description: Errors that occurred when issuing individual commands.
            example: "null"
            items:
              type: string
    ApiCdhUpgradeArgs:
      title: ApiCdhUpgradeArgs
      type: object
      properties:
        cdhParcelVersion:
          type: string
          description: |-
            If using parcels, the full version of an already distributed
            parcel for the next major CDH version. Default is null, which
            indicates this is a package upgrade. Example versions are:
            '5.0.0-1.cdh5.0.0.p0.11' or '5.0.2-1.cdh5.0.2.p0.32'
          example: "null"
        cdhPackageVersion:
          type: string
          description: |-
            If using packages, the full version of the CDH packages being upgraded to,
            such as "5.1.2". These packages must already be installed on the cluster
            before running the upgrade command. For backwards compatibility, if
            "5.0.0" is specified here, then the upgrade command will relax validation
            of installed packages to match v6 behavior, only checking major version.
            <p>
            Introduced in v9. Has no effect in older API versions, which assume
            "5.0.0"
          example: "null"
        rollingRestartArgs:
          $ref: '#/components/schemas/ApiRollingUpgradeClusterArgs'
        deployClientConfig:
          type: boolean
          description: |-
            Not used starting in v9 - Client config is always deployed as part of
            upgrade. For older versions, determines whether client configuration
            should be deployed as part of upgrade. Default is true.
        startAllServices:
          type: boolean
          description: |-
            Not used starting in v9 - All servies are always started as part of
            upgrade. For older versions, determines whether all services should be
            started should be deployed as part of upgrade. Default is true.
      description: Arguments used for the CDH Upgrade command.
      example:
        cdhParcelVersion: '...'
        cdhPackageVersion: '...'
        rollingRestartArgs:
          slaveBatchSize: 12345
          sleepSeconds: 12345
          slaveFailCountThreshold: 12345
    ApiCluster:
      title: ApiCluster
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the cluster.
            <p>
            Immutable since API v6.
            <p>
            Prior to API v6, will contain the display name of the cluster.
          example: "null"
        displayName:
          type: string
          description: |-
            The display name of the cluster that is shown in the UI.
            <p>
            Available since API v6.
          example: "null"
        version:
          $ref: '#/components/schemas/ApiClusterVersion'
        fullVersion:
          type: string
          description: |-
            The full CDH version of the cluster. The expected format is three dot
            separated version numbers, e.g. "4.2.1" or "5.0.0". The full version takes
            precedence over the version field during cluster creation.
            <p>
            Available since API v6.
          example: "null"
        maintenanceMode:
          type: boolean
          description: |-
            Readonly. Whether the cluster is in maintenance mode.
            Available since API v2.
        maintenanceOwners:
          type: array
          description: |-
            Readonly. The list of objects that trigger this cluster to be in
            maintenance mode.
            Available since API v2.
          example: "null"
          items:
            $ref: '#/components/schemas/ApiEntityType'
        services:
          type: array
          description: Optional. Used during import/export of settings.
          items:
            $ref: '#/components/schemas/ApiService'
        parcels:
          type: array
          description: |-
            Optional. Used during import/export of settings.
            Available since API v4.
          items:
            $ref: '#/components/schemas/ApiParcel'
        clusterUrl:
          type: string
          description: |-
            Readonly. Link into the Cloudera Manager web UI for this specific cluster.
            <p>
            Available since API v10.
          example: "null"
        hostsUrl:
          type: string
          description: |-
            Readonly. Link into the Cloudera Manager web UI for host table for this cluster.
            <p>
            Available since API v11.
          example: "null"
        entityStatus:
          $ref: '#/components/schemas/ApiEntityStatus'
        uuid:
          type: string
          description: |-
            Readonly. The UUID of the cluster.
            <p>
            Available since API v15.
          example: "null"
        dataContextRefs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiDataContextRef'
        clusterType:
          type: string
          description: |-
            Readonly. The type of cluster.
            Available since APIv32.
          example: "null"
      description: |-
        A cluster represents a set of interdependent services running on a set
        of hosts. All services on a given cluster are of the same software version
        (e.g. CDH4 or CDH5).
      example:
        name: '...'
        displayName: '...'
        fullVersion: '...'
        maintenanceMode: true
        maintenanceOwners:
        - HOST
        - CLUSTER
        services:
        - name: '...'
          type: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceState: STARTED
          healthSummary: GOOD
          configStalenessStatus: STALE_REFRESHABLE
          clientConfigStalenessStatus: STALE
          healthChecks:
          - name: '...'
            summary: NOT_AVAILABLE
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: BAD
            explanation: '...'
            suppressed: true
          serviceUrl: '...'
          roleInstancesUrl: '...'
          maintenanceMode: true
          maintenanceOwners:
          - SERVICE
          - SERVICE
          config:
            roleTypeConfigs:
            - {}
            - {}
            items:
            - {}
            - {}
          roles:
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: UNKNOWN
            commissionState: DECOMMISSIONING
            healthSummary: CONCERNING
            configStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            haStatus: UNKNOWN
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - SERVICE
            - CLUSTER
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: STANDALONE
            entityStatus: NONE
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: NA
            commissionState: COMMISSIONED
            healthSummary: HISTORY_NOT_AVAILABLE
            configStalenessStatus: STALE
            healthChecks:
            - {}
            - {}
            haStatus: STANDBY
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - SERVICE
            - SERVICE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: REPLICATED_LEADER_ELECTION
            entityStatus: GOOD_HEALTH
          displayName: '...'
          roleConfigGroups:
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          replicationSchedules:
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: MONTH
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: YEAR
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          snapshotPolicies:
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          entityStatus: HISTORY_NOT_AVAILABLE
        - name: '...'
          type: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceState: HISTORY_NOT_AVAILABLE
          healthSummary: CONCERNING
          configStalenessStatus: STALE_REFRESHABLE
          clientConfigStalenessStatus: STALE_REFRESHABLE
          healthChecks:
          - name: '...'
            summary: BAD
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: NOT_AVAILABLE
            explanation: '...'
            suppressed: true
          serviceUrl: '...'
          roleInstancesUrl: '...'
          maintenanceMode: true
          maintenanceOwners:
          - ROLE
          - ROLE
          config:
            roleTypeConfigs:
            - {}
            - {}
            items:
            - {}
            - {}
          roles:
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: STOPPING
            commissionState: DECOMMISSIONING
            healthSummary: NOT_AVAILABLE
            configStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            haStatus: ACTIVE
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - CLUSTER
            - SERVICE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: UNKNOWN
            entityStatus: DOWN
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: HISTORY_NOT_AVAILABLE
            commissionState: UNKNOWN
            healthSummary: BAD
            configStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            haStatus: STANDBY
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - CLUSTER
            - ROLE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: REPLICATED_FOLLOWER
            entityStatus: DISABLED_HEALTH
          displayName: '...'
          roleConfigGroups:
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          replicationSchedules:
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: YEAR
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: WEEK
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          snapshotPolicies:
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          entityStatus: HISTORY_NOT_AVAILABLE
        parcels:
        - product: '...'
          version: '...'
          stage: '...'
          state:
            progress: 12345
            totalProgress: 12345
            count: 12345
            totalCount: 12345
            errors:
            - '...'
            - '...'
            warnings:
            - '...'
            - '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
        - product: '...'
          version: '...'
          stage: '...'
          state:
            progress: 12345
            totalProgress: 12345
            count: 12345
            totalCount: 12345
            errors:
            - '...'
            - '...'
            warnings:
            - '...'
            - '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
        clusterUrl: '...'
        hostsUrl: '...'
        entityStatus: DOWN
        uuid: '...'
        dataContextRefs:
        - name: '...'
        - name: '...'
        clusterType: '...'
    ApiClusterList:
      title: ApiClusterList
      description: A list of clusters.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiCluster'
    ApiClusterNameList:
      title: ApiClusterNameList
      description: A list of cluster names.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            example: "null"
            items:
              type: string
    ApiClusterPerfInspectorArgs:
      title: ApiClusterPerfInspectorArgs
      type: object
      properties:
        pingArgs:
          $ref: '#/components/schemas/ApiPerfInspectorPingArgs'
      description: Arguments used for the Cluster Performance Inspector
      example:
        pingArgs:
          pingTimeoutSecs: 10
          pingCount: 10
          pingPacketSizeBytes: 56
    ApiClusterRef:
      title: ApiClusterRef
      type: object
      properties:
        clusterName:
          type: string
          description: "The name of the cluster, which uniquely identifies it in a\
            \ CM installation."
          example: "null"
        displayName:
          type: string
          description: The display name of the cluster. This is available from v30.
          example: "null"
      description: |-
        A clusterRef references a cluster. To operate on the cluster object,
        use the cluster API with the clusterName as the parameter.
      example:
        clusterName: '...'
        displayName: '...'
    ApiClusterTemplate:
      title: ApiClusterTemplate
      type: object
      properties:
        cdhVersion:
          type: string
          description: ""
          example: "null"
        products:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiProductVersion'
        services:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateService'
        hostTemplates:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateHostTemplate'
        displayName:
          type: string
          description: ""
          example: "null"
        cmVersion:
          type: string
          description: ""
          example: "null"
        instantiator:
          $ref: '#/components/schemas/ApiClusterTemplateInstantiator'
        repositories:
          type: array
          description: ""
          example: "null"
          items:
            type: string
        clusterSpec:
          $ref: '#/components/schemas/ApiClusterTemplateClusterSpec'
      description: Details of cluster template
      example:
        cdhVersion: '...'
        products:
        - version: '...'
          product: '...'
        - version: '...'
          product: '...'
        services:
        - refName: '...'
          serviceType: '...'
          serviceConfigs:
          - name: '...'
            value: '...'
            ref: '...'
            variable: '...'
            autoConfig: true
          - name: '...'
            value: '...'
            ref: '...'
            variable: '...'
            autoConfig: true
          roleConfigGroups:
          - refName: '...'
            roleType: '...'
            base: true
            displayName: '...'
            configs:
            - {}
            - {}
          - refName: '...'
            roleType: '...'
            base: true
            displayName: '...'
            configs:
            - {}
            - {}
          roles:
          - refName: '...'
            roleType: '...'
          - refName: '...'
            roleType: '...'
          displayName: '...'
        - refName: '...'
          serviceType: '...'
          serviceConfigs:
          - name: '...'
            value: '...'
            ref: '...'
            variable: '...'
            autoConfig: true
          - name: '...'
            value: '...'
            ref: '...'
            variable: '...'
            autoConfig: true
          roleConfigGroups:
          - refName: '...'
            roleType: '...'
            base: true
            displayName: '...'
            configs:
            - {}
            - {}
          - refName: '...'
            roleType: '...'
            base: true
            displayName: '...'
            configs:
            - {}
            - {}
          roles:
          - refName: '...'
            roleType: '...'
          - refName: '...'
            roleType: '...'
          displayName: '...'
        hostTemplates:
        - refName: '...'
          roleConfigGroupsRefNames:
          - '...'
          - '...'
          cardinality: 12345
        - refName: '...'
          roleConfigGroupsRefNames:
          - '...'
          - '...'
          cardinality: 12345
        displayName: '...'
        cmVersion: '...'
        instantiator:
          clusterName: '...'
          hosts:
          - hostName: '...'
            hostNameRange: '...'
            rackId: '...'
            hostTemplateRefName: '...'
            roleRefNames:
            - '...'
            - '...'
          - hostName: '...'
            hostNameRange: '...'
            rackId: '...'
            hostTemplateRefName: '...'
            roleRefNames:
            - '...'
            - '...'
          variables:
          - name: '...'
            value: '...'
          - name: '...'
            value: '...'
          roleConfigGroups:
          - rcgRefName: '...'
            name: '...'
          - rcgRefName: '...'
            name: '...'
          clusterSpec:
            dataContextRefs:
            - {}
            - {}
        repositories:
        - '...'
        - '...'
        clusterSpec:
          dataContextRefs:
          - name: '...'
          - name: '...'
    ApiClusterTemplateClusterSpec:
      title: ApiClusterTemplateClusterSpec
      type: object
      properties:
        dataContextRefs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiDataContextRef'
      description: |-
        Specify type of cluster to create. If one or more ApiDataContextRef are specified, the created cluster
        upon import will be a cluster with clusterType "COMPUTE".
      example:
        dataContextRefs:
        - name: '...'
        - name: '...'
    ApiClusterTemplateConfig:
      title: ApiClusterTemplateConfig
      type: object
      properties:
        name:
          type: string
          description: ""
          example: "null"
        value:
          type: string
          description: ""
          example: "null"
        ref:
          type: string
          description: ""
          example: "null"
        variable:
          type: string
          description: ""
          example: "null"
        autoConfig:
          type: boolean
          description: ""
      description: "Config Details: The config can either have a value or ref or variable."
      example:
        name: '...'
        value: '...'
        ref: '...'
        variable: '...'
        autoConfig: true
    ApiClusterTemplateHostInfo:
      title: ApiClusterTemplateHostInfo
      type: object
      properties:
        hostName:
          type: string
          description: ""
          example: "null"
        hostNameRange:
          type: string
          description: ""
          example: "null"
        rackId:
          type: string
          description: ""
          example: "null"
        hostTemplateRefName:
          type: string
          description: ""
          example: "null"
        roleRefNames:
          type: array
          description: ""
          example: "null"
          items:
            type: string
      description: |-
        This contains information about the host or host range on which provided
        host template will be applied.
      example:
        hostName: '...'
        hostNameRange: '...'
        rackId: '...'
        hostTemplateRefName: '...'
        roleRefNames:
        - '...'
        - '...'
    ApiClusterTemplateHostTemplate:
      title: ApiClusterTemplateHostTemplate
      type: object
      properties:
        refName:
          type: string
          description: ""
          example: "null"
        roleConfigGroupsRefNames:
          type: array
          description: ""
          example: "null"
          items:
            type: string
        cardinality:
          type: number
          description: ""
      description: |-
        Host templates will contain information about the role config groups that
        should be applied to a host. This basically means a host will have a role
        corresponding to each config group.
      example:
        refName: '...'
        roleConfigGroupsRefNames:
        - '...'
        - '...'
        cardinality: 12345
    ApiClusterTemplateInstantiator:
      title: ApiClusterTemplateInstantiator
      type: object
      properties:
        clusterName:
          type: string
          description: ""
          example: "null"
        hosts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateHostInfo'
        variables:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateVariable'
        roleConfigGroups:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateRoleConfigGroupInfo'
        clusterSpec:
          $ref: '#/components/schemas/ApiClusterTemplateClusterSpec'
      description: Details of cluster template
      example:
        clusterName: '...'
        hosts:
        - hostName: '...'
          hostNameRange: '...'
          rackId: '...'
          hostTemplateRefName: '...'
          roleRefNames:
          - '...'
          - '...'
        - hostName: '...'
          hostNameRange: '...'
          rackId: '...'
          hostTemplateRefName: '...'
          roleRefNames:
          - '...'
          - '...'
        variables:
        - name: '...'
          value: '...'
        - name: '...'
          value: '...'
        roleConfigGroups:
        - rcgRefName: '...'
          name: '...'
        - rcgRefName: '...'
          name: '...'
        clusterSpec:
          dataContextRefs:
          - name: '...'
          - name: '...'
    ApiClusterTemplateRole:
      title: ApiClusterTemplateRole
      type: object
      properties:
        refName:
          type: string
          description: ""
          example: "null"
        roleType:
          type: string
          description: ""
          example: "null"
      description: |-
        Role info: This will contain information related to a role referred by some
        configuration. During import type this role must be materizalized.
      example:
        refName: '...'
        roleType: '...'
    ApiClusterTemplateRoleConfigGroup:
      title: ApiClusterTemplateRoleConfigGroup
      type: object
      properties:
        refName:
          type: string
          description: ""
          example: "null"
        roleType:
          type: string
          description: ""
          example: "null"
        base:
          type: boolean
          description: ""
        displayName:
          type: string
          description: ""
          example: "null"
        configs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateConfig'
      description: Role config group info.
      example:
        refName: '...'
        roleType: '...'
        base: true
        displayName: '...'
        configs:
        - name: '...'
          value: '...'
          ref: '...'
          variable: '...'
          autoConfig: true
        - name: '...'
          value: '...'
          ref: '...'
          variable: '...'
          autoConfig: true
    ApiClusterTemplateRoleConfigGroupInfo:
      title: ApiClusterTemplateRoleConfigGroupInfo
      type: object
      properties:
        rcgRefName:
          type: string
          description: ""
          example: "null"
        name:
          type: string
          description: ""
          example: "null"
      description: |-
        During import time information related to all the non-base config groups
        must be provided.
      example:
        rcgRefName: '...'
        name: '...'
    ApiClusterTemplateService:
      title: ApiClusterTemplateService
      type: object
      properties:
        refName:
          type: string
          description: ""
          example: "null"
        serviceType:
          type: string
          description: ""
          example: "null"
        serviceConfigs:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateConfig'
        roleConfigGroups:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateRoleConfigGroup'
        roles:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiClusterTemplateRole'
        displayName:
          type: string
          description: ""
          example: "null"
      description: Service information
      example:
        refName: '...'
        serviceType: '...'
        serviceConfigs:
        - name: '...'
          value: '...'
          ref: '...'
          variable: '...'
          autoConfig: true
        - name: '...'
          value: '...'
          ref: '...'
          variable: '...'
          autoConfig: true
        roleConfigGroups:
        - refName: '...'
          roleType: '...'
          base: true
          displayName: '...'
          configs:
          - name: '...'
            value: '...'
            ref: '...'
            variable: '...'
            autoConfig: true
          - name: '...'
            value: '...'
            ref: '...'
            variable: '...'
            autoConfig: true
        - refName: '...'
          roleType: '...'
          base: true
          displayName: '...'
          configs:
          - name: '...'
            value: '...'
            ref: '...'
            variable: '...'
            autoConfig: true
          - name: '...'
            value: '...'
            ref: '...'
            variable: '...'
            autoConfig: true
        roles:
        - refName: '...'
          roleType: '...'
        - refName: '...'
          roleType: '...'
        displayName: '...'
    ApiClusterTemplateVariable:
      title: ApiClusterTemplateVariable
      type: object
      properties:
        name:
          type: string
          description: ""
          example: "null"
        value:
          type: string
          description: ""
          example: "null"
      description: Variable that is referred in cluster template.
      example:
        name: '...'
        value: '...'
    ApiClusterUtilization:
      title: ApiClusterUtilization
      type: object
      properties:
        totalCpuCores:
          type: number
          description: Average number of CPU cores available in the cluster during
            the report window.
        avgCpuUtilization:
          type: number
          description: |-
            Average CPU consumption for the entire cluster during the report window.
            This includes consumption by user workloads in YARN and Impala, as well as
            consumption by all services running in the cluster.
        maxCpuUtilization:
          type: number
          description: |-
            Maximum CPU consumption for the entire cluster during the report window.
            This includes consumption by user workloads in YARN and Impala, as well as
            consumption by all services running in the cluster.
        avgCpuDailyPeak:
          type: number
          description: |-
            Average daily peak CPU consumption for the entire cluster during the report
            window. This includes consumption by user workloads in YARN and Impala, as
            well as consumption by all services running in the cluster.
        avgWorkloadCpu:
          type: number
          description: |-
            Average CPU consumption by workloads that ran on the cluster during the
            report window. This includes consumption by user workloads in YARN and
            Impala.
        maxWorkloadCpu:
          type: number
          description: |-
            Maximum CPU consumption by workloads that ran on the cluster during the
            report window. This includes consumption by user workloads in YARN and
            Impala.
        avgWorkloadCpuDailyPeak:
          type: number
          description: |-
            Average daily peak CPU consumption by workloads that ran on the cluster
            during the report window. This includes consumption by user workloads in
            YARN and Impala.
        totalMemory:
          type: number
          description: |-
            Average physical memory (in bytes) available in the cluster during the
            report window. This includes consumption by user workloads in YARN and
            Impala, as well as consumption by all services running in the cluster.
        avgMemoryUtilization:
          type: number
          description: |-
            Average memory consumption (as percentage of total memory) for the entire
            cluster during the report window. This includes consumption by user
            workloads in YARN and Impala, as well as consumption by all services
            running in the cluster.
        maxMemoryUtilization:
          type: number
          description: |-
            Maximum memory consumption (as percentage of total memory) for the entire
            cluster during the report window. This includes consumption by user
            workloads in YARN and Impala, as well as consumption by all services
            running in the cluster.
        avgMemoryDailyPeak:
          type: number
          description: |-
            Average daily peak memory consumption (as percentage of total memory) for
            the entire cluster during the report window. This includes consumption by
            user workloads in YARN and Impala, as well as consumption by all services
            running in the cluster.
        avgWorkloadMemory:
          type: number
          description: |-
            Average memory consumption (as percentage of total memory) by workloads
            that ran on the cluster during the report window. This includes consumption
            by user workloads in YARN and Impala.
        maxWorkloadMemory:
          type: number
          description: |-
            Maximum memory consumption (as percentage of total memory) by workloads
            that ran on the cluster. This includes consumption by user workloads in
            YARN and Impala
        avgWorkloadMemoryDailyPeak:
          type: number
          description: |-
            Average daily peak memory consumption (as percentage of total memory) by
            workloads that ran on the cluster during the report window. This includes
            consumption by user workloads in YARN and Impala.
        tenantUtilizations:
          $ref: '#/components/schemas/ApiTenantUtilizationList'
        maxCpuUtilizationTimestampMs:
          type: number
          description: |-
            Timestamp corresponding to maximum CPU utilization for the entire cluster
            during the report window.
        maxMemoryUtilizationTimestampMs:
          type: number
          description: |-
            Timestamp corresponding to maximum memory utilization for the entire
            cluster during the report window.
        maxWorkloadCpuTimestampMs:
          type: number
          description: |-
            Timestamp corresponds to maximum CPU consumption by workloads that
            ran on the cluster during the report window.
        maxWorkloadMemoryTimestampMs:
          type: number
          description: |-
            Timestamp corresponds to maximum memory resource consumption by workloads that
            ran on the cluster during the report window.
        errorMessage:
          type: string
          description: Error message while generating utilization report.
          example: "null"
      description: Utilization report information of a Cluster.
      example:
        totalCpuCores: 12345.0
        avgCpuUtilization: 12345.0
        maxCpuUtilization: 12345.0
        avgCpuDailyPeak: 12345.0
        avgWorkloadCpu: 12345.0
        maxWorkloadCpu: 12345.0
        avgWorkloadCpuDailyPeak: 12345.0
        totalMemory: 12345.0
        avgMemoryUtilization: 12345.0
        maxMemoryUtilization: 12345.0
        avgMemoryDailyPeak: 12345.0
        avgWorkloadMemory: 12345.0
        maxWorkloadMemory: 12345.0
        avgWorkloadMemoryDailyPeak: 12345.0
        tenantUtilizations:
          items:
          - tenantName: '...'
            cpuUtilizationPercentage: 12345.0
            memoryUtilizationPercentage: 12345.0
          - tenantName: '...'
            cpuUtilizationPercentage: 12345.0
            memoryUtilizationPercentage: 12345.0
        maxCpuUtilizationTimestampMs: 12345
        maxMemoryUtilizationTimestampMs: 12345
        maxWorkloadCpuTimestampMs: 12345
        maxWorkloadMemoryTimestampMs: 12345
        errorMessage: '...'
    ApiClusterVersion:
      title: ApiClusterVersion
      type: string
      description: The CDH version of the cluster.
      enum:
      - CDH3
      - CDH3u4X
      - CDH4
      - CDH5
      - CDH6
      - UNKNOWN
    ApiClustersPerfInspectorArgs:
      title: ApiClustersPerfInspectorArgs
      type: object
      properties:
        sourceCluster:
          type: string
          description: Required name of the source cluster to run network diagnostics
            test.
          example: "null"
        targetCluster:
          type: string
          description: Required name of the target cluster to run network diagnostics
            test.
          example: "null"
        pingArgs:
          $ref: '#/components/schemas/ApiPerfInspectorPingArgs'
        bandwidthArgs:
          $ref: '#/components/schemas/ApiPerfInspectorBandwidthArgs'
        policyType:
          $ref: '#/components/schemas/PerfInspectorPolicyType'
      description: |-
        Arguments used for the Cloudera Manager level performance inspector.
        Network diagnostics will be run from every host in sourceCluster to every host
        in targetCluster.
      example:
        sourceCluster: '...'
        targetCluster: '...'
        pingArgs:
          pingTimeoutSecs: 10
          pingCount: 10
          pingPacketSizeBytes: 56
        bandwidthArgs:
          runBandwidthDiagnostics: false
          bandwidthTimeoutSecs: 10
        policyType: FULL
    ApiCmPeer:
      title: ApiCmPeer
      type: object
      properties:
        name:
          type: string
          description: The name of the remote CM instance. Immutable during update.
          example: "null"
        type:
          $ref: '#/components/schemas/ApiCmPeerType'
        url:
          type: string
          description: The URL of the remote CM instance. Mutable during update.
          example: "null"
        username:
          type: string
          description: |-
            When creating peers, if 'clouderaManagerCreatedUser' is true, this should be
            the remote admin username for creating a user in remote Cloudera Manager. The
            created remote user will then be stored in the local Cloudera Manager DB and
            used in later communication. If 'clouderaManagerCreatedUser' is false, which
            is not applicable to REPLICATION peer type, Cloudera Manager will store this
            username in the local DB directly and use it together with 'password' for
            communication.

            Mutable during update.
            When set during update, if 'clouderaManagerCreatedUser' is true, a new user
            in remote Cloudera Manager is created, the newly created remote user will be
            stored in the local DB. An attempt to delete the previously created remote
            user will be made; If 'clouderaManagerCreatedUser' is false, the
            username/password in the local DB will be updated.
          example: "null"
        password:
          type: string
          description: |-
            When creating peers, if 'clouderaManagerCreatedUser' is true, this should be
            the remote admin password for creating a user in remote Cloudera Manager. The
            created remote user will then be stored in the local Cloudera Manager DB and
            used in later communication. If 'clouderaManagerCreatedUser' is false, which
            is not applicable to REPLICATION peer type, Cloudera Manager will store this
            password in the local DB directly and use it together with 'username' for
            communication.

            Mutable during update.
            When set during update, if 'clouderaManagerCreatedUser' is true, a new user
            in remote Cloudera Manager is created, the newly created remote user will be
            stored in the local DB. An attempt to delete the previously created remote
            user will be made; If 'clouderaManagerCreatedUser' is false, the
            username/password in the local DB will be updated.
          example: "null"
        clouderaManagerCreatedUser:
          type: boolean
          description: |-
            If true, Cloudera Manager creates a remote user using the given
            username/password and stores the created user in local DB for use in later
            communication. Cloudera Manager will also try to delete the created remote
            user when deleting such peers.

            If false, Cloudera Manager will store the provided username/password in
            the local DB and use them in later communication. 'false' value on this
            field is not applicable to REPLICATION peer type.

            Available since API v11.

            Immutable during update. Should not be set when updating peers.
      description: |-
        Information about a Cloudera Manager peer instance.
        <p>
        The requirement and usage of <i>username</i> and <i>password</i> properties
        are dependent on the <i>clouderaManagerCreatedUser</i> flag.
        <p>
        When creating peers, if 'clouderaManagerCreatedUser' is true, the
        username/password should be the credentials of a user with administrator
        privileges on the remote Cloudera Manager. These credentials are not stored,
        they are used to connect to the peer and create a user in that peer. The
        newly created user is stored and used for communication with that peer.
        If 'clouderaManagerCreatedUser' is false, which is not applicable to
        REPLICATION peer type, the username/password to the remote Cloudera Manager
        are directly stored and used for all communications with that peer.
        <p>
        When updating peers, if 'clouderaManagerCreatedUser' is true and
        username/password are set, a new remote user will be created. If
        'clouderaManagerCreatedUser' is false and username/password are set, the
        stored username/password will be updated.
      example:
        name: '...'
        type: STATUS_AGGREGATION
        url: '...'
        username: '...'
        password: '...'
        clouderaManagerCreatedUser: true
    ApiCmPeerList:
      title: ApiCmPeerList
      description: A list of Cloudera Manager peers.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiCmPeer'
    ApiCmPeerType:
      title: ApiCmPeerType
      type: string
      description: Enum for CM peer types.
      enum:
      - REPLICATION
      - STATUS_AGGREGATION
    ApiCollectDiagnosticDataArguments:
      title: ApiCollectDiagnosticDataArguments
      type: object
      properties:
        bundleSizeBytes:
          type: number
          description: The maximum approximate bundle size of the output file
        startTime:
          type: string
          description: |-
            This parameter is ignored between CM 4.5 and CM 5.7 versions.
            For versions from CM 4.5 to CM 5.7, use endTime and
            bundleSizeBytes instead.

            For CM 5.7+ versions, startTime is an optional parameter that
            is with endTime and bundleSizeBytes. This was introduced
            to perform diagnostic data estimation and collection of global
            diagnostics data for a certain time range.
            The start time (in ISO 8601 format)
            of the period to collection statistics for.
          example: "null"
        endTime:
          type: string
          description: |-
            The end time (in ISO 8601 format)
            of the period to collection statistics for.
          example: "null"
        includeInfoLog:
          type: boolean
          description: |-
            This parameter is ignored as of CM 4.5.
            INFO logs are always collected.
            Whether to include INFO level logs.
            WARN, ERROR, and FATAL level logs are always included.
        ticketNumber:
          type: string
          description: The support ticket number to attach to this data collection.
          example: "null"
        comments:
          type: string
          description: Comments to include with this data collection.
          example: "null"
        clusterName:
          type: string
          description: "Name of the cluster to collect. If null, collects from all\
            \ clusters."
          example: "null"
        enableMonitorMetricsCollection:
          type: boolean
          description: Flag to enable collection of metrics for chart display.
        roles:
          type: array
          description: |-
            List of roles for which to get logs and metrics.

            If set, this restricts the roles for log and metrics collection
            to the list specified.

            If empty, the default is to get logs for all roles (in the selected
            cluster, if one is selected).

            Introduced in API v10 of the API.
          example: "null"
          items:
            type: string
      description: Arguments used for the collectDiagnosticData command.
      example:
        bundleSizeBytes: 12345
        startTime: '...'
        endTime: '...'
        ticketNumber: '...'
        comments: '...'
        clusterName: '...'
        enableMonitorMetricsCollection: true
        roles:
        - '...'
        - '...'
    ApiCommand:
      title: ApiCommand
      type: object
      properties:
        id:
          type: number
          description: The command ID.
        name:
          type: string
          description: The command name.
          example: "null"
        startTime:
          type: string
          description: The start time.
          example: "null"
        endTime:
          type: string
          description: "The end time, if the command is finished."
          example: "null"
        active:
          type: boolean
          description: Whether the command is currently active.
        success:
          type: boolean
          description: "If the command is finished, whether it was successful."
        resultMessage:
          type: string
          description: "If the command is finished, the result message."
          example: "null"
        resultDataUrl:
          type: string
          description: "URL to the command's downloadable result data, if any exists."
          example: "null"
        clusterRef:
          $ref: '#/components/schemas/ApiClusterRef'
        serviceRef:
          $ref: '#/components/schemas/ApiServiceRef'
        roleRef:
          $ref: '#/components/schemas/ApiRoleRef'
        hostRef:
          $ref: '#/components/schemas/ApiHostRef'
        parent:
          $ref: '#/components/schemas/ApiCommand'
        children:
          $ref: '#/components/schemas/ApiCommandList'
        canRetry:
          type: boolean
          description: If the command can be retried. Available since V11
      description: |-
        Provides detailed information about a submitted command.

        <p>There are two types of commands: synchronous and asynchronous.
        Synchronous commands complete immediately, and their results are passed
        back in the returned command object after the execution of an API call.
        Outside of that returned object, there is no way to check the result of a
        synchronous command.</p>

        <p>Asynchronous commands have unique non-negative IDs. They may still be
        running when the API call returns. Clients can check the status of such
        commands using the API.</p>
      example:
        id: 12345
        name: '...'
        startTime: '...'
        endTime: '...'
        active: true
        success: true
        resultMessage: '...'
        resultDataUrl: '...'
        clusterRef:
          clusterName: '...'
          displayName: '...'
        serviceRef:
          peerName: '...'
          clusterName: '...'
          serviceName: '...'
          serviceDisplayName: '...'
          serviceType: '...'
        roleRef:
          clusterName: '...'
          serviceName: '...'
          roleName: '...'
        hostRef:
          hostId: '...'
          hostname: '...'
        parent:
          id: 12345
          name: '...'
          startTime: '...'
          endTime: '...'
          active: true
          success: true
          resultMessage: '...'
          resultDataUrl: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceRef:
            peerName: '...'
            clusterName: '...'
            serviceName: '...'
            serviceDisplayName: '...'
            serviceType: '...'
          roleRef:
            clusterName: '...'
            serviceName: '...'
            roleName: '...'
          hostRef:
            hostId: '...'
            hostname: '...'
          parent: {}
          children:
            items:
            - {}
            - {}
          canRetry: true
        children:
          items:
          - id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          - id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
        canRetry: true
    ApiCommandList:
      title: ApiCommandList
      description: A list of commands.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiCommand'
    ApiCommandMetadata:
      title: ApiCommandMetadata
      type: object
      properties:
        name:
          type: string
          description: The name of of the command.
          example: "null"
        argSchema:
          type: string
          description: |-
            The command arguments schema.

            This is in the form of json schema and
            describes the structure of the command
            arguments. If null, the command does not
            take arguments.
          example: "null"
      description: Provides metadata information about a command.
      example:
        name: '...'
        argSchema: '...'
    ApiCommandMetadataList:
      title: ApiCommandMetadataList
      description: A list of command metadata.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: The list of command metadata objects.
            items:
              $ref: '#/components/schemas/ApiCommandMetadata'
    ApiCommissionState:
      title: ApiCommissionState
      type: string
      description: Represents the Commission state of an entity.
      enum:
      - COMMISSIONED
      - DECOMMISSIONING
      - DECOMMISSIONED
      - UNKNOWN
      - OFFLINING
      - OFFLINED
    ApiConfig:
      title: ApiConfig
      type: object
      properties:
        name:
          type: string
          description: Readonly. The canonical name that identifies this configuration
            parameter.
          example: "null"
        value:
          type: string
          description: |-
            The user-defined value. When absent, the default value (if any)
            will be used. Can also be absent, when enumerating allowed configs.
          example: "null"
        required:
          type: boolean
          description: |-
            Readonly. Requires "full" view.
            Whether this configuration is required for the object. If
            any required configuration is not set, operations on the object may not
            work.
        default:
          type: string
          description: Readonly. Requires "full" view. The default value.
          example: "null"
        displayName:
          type: string
          description: |-
            Readonly. Requires "full" view. A user-friendly name of the parameters,
            as would have been shown in the web UI.
          example: "null"
        description:
          type: string
          description: Readonly. Requires "full" view. A textual description of the
            parameter.
          example: "null"
        relatedName:
          type: string
          description: |-
            Readonly. Requires "full" view. If applicable, contains the related
            configuration variable used by the source project.
          example: "null"
        sensitive:
          type: boolean
          description: |-
            Readonly.
            Whether this configuration is sensitive, i.e. contains information such as passwords, which
            might affect how the value of this configuration might be shared by the caller.

            Available since v14.
        validationState:
          $ref: '#/components/schemas/ValidationState'
        validationMessage:
          type: string
          description: |-
            Readonly. Requires "full" view.
            A message explaining the parameter's validation state.
          example: "null"
        validationWarningsSuppressed:
          type: boolean
          description: |-
            Readonly. Requires "full" view.
            Whether validation warnings associated with this parameter are suppressed.
            In general, suppressed validation warnings are hidden in the Cloudera
            Manager UI. Configurations that do not produce warnings will not contain
            this field.
      description: |-
        Model for a configuration parameter.

        When an entry's <i>value</i> property is not available, it means the
        entry is not configured. This means that the default value for the entry,
        if any, will be used. Setting a value to <i>null</i> also can be used
        to unset any previously set value for the parameter, reverting to
        the default value (if any).
      example:
        name: '...'
        value: '...'
        required: true
        default: '...'
        displayName: '...'
        description: '...'
        relatedName: '...'
        sensitive: true
        validationState: ERROR
        validationMessage: '...'
        validationWarningsSuppressed: true
    ApiConfigList:
      title: ApiConfigList
      description: A list of configuration data.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiConfig'
    ApiConfigStalenessStatus:
      title: ApiConfigStalenessStatus
      type: string
      description: Represents the configuration staleness status of an entity.
      enum:
      - FRESH
      - STALE_REFRESHABLE
      - STALE
    ApiConfigureForKerberosArguments:
      title: ApiConfigureForKerberosArguments
      type: object
      properties:
        datanodeTransceiverPort:
          type: number
          description: |-
            The HDFS DataNode transceiver port to use. This will be applied to all DataNode
            role configuration groups. If not specified, this will default to 1004.
        datanodeWebPort:
          type: number
          description: |-
            The HDFS DataNode web port to use.  This will be applied to all DataNode
            role configuration groups. If not specified, this will default to 1006.
      description: Arguments used to configure a cluster for Kerberos.
      example:
        datanodeTransceiverPort: 12345
        datanodeWebPort: 12345
    ApiDashboard:
      title: ApiDashboard
      type: object
      properties:
        name:
          type: string
          description: Returns the dashboard name.
          example: "null"
        json:
          type: string
          description: |-
            Returns the json structure for the dashboard. This should be treated as
            an opaque blob.
          example: "null"
      description: A dashboard definition. Dashboards are composed of tsquery-based
        charts.
      example:
        name: '...'
        json: '...'
    ApiDashboardList:
      title: ApiDashboardList
      description: A list of dashboard definitions.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiDashboard'
    ApiDataContext:
      title: ApiDataContext
      type: object
      properties:
        name:
          type: string
          description: ""
          example: "null"
        displayName:
          type: string
          description: ""
          example: "null"
        nameservice:
          type: string
          description: ""
          example: "null"
        createdTime:
          type: string
          description: ""
          example: "null"
        lastModifiedTime:
          type: string
          description: ""
          example: "null"
        services:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiServiceRef'
        servicesDetails:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiService'
        supportedServiceTypes:
          type: array
          description: ""
          example: "null"
          items:
            type: string
        allowedClusterVersions:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ApiMapEntry'
        configStalenessStatus:
          $ref: '#/components/schemas/ApiConfigStalenessStatus'
        clientConfigStalenessStatus:
          $ref: '#/components/schemas/ApiConfigStalenessStatus'
        healthSummary:
          $ref: '#/components/schemas/ApiHealthSummary'
      description: |-
        ApiDataContext is the persistent storage/services context exported by the base cluster to be
        consumed by the compute cluster.
      example:
        name: '...'
        displayName: '...'
        nameservice: '...'
        createdTime: '...'
        lastModifiedTime: '...'
        services:
        - peerName: '...'
          clusterName: '...'
          serviceName: '...'
          serviceDisplayName: '...'
          serviceType: '...'
        - peerName: '...'
          clusterName: '...'
          serviceName: '...'
          serviceDisplayName: '...'
          serviceType: '...'
        servicesDetails:
        - name: '...'
          type: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceState: STOPPING
          healthSummary: CONCERNING
          configStalenessStatus: STALE_REFRESHABLE
          clientConfigStalenessStatus: STALE
          healthChecks:
          - name: '...'
            summary: CONCERNING
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: NOT_AVAILABLE
            explanation: '...'
            suppressed: true
          serviceUrl: '...'
          roleInstancesUrl: '...'
          maintenanceMode: true
          maintenanceOwners:
          - HOST
          - CLUSTER
          config:
            roleTypeConfigs:
            - {}
            - {}
            items:
            - {}
            - {}
          roles:
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: STARTED
            commissionState: COMMISSIONED
            healthSummary: CONCERNING
            configStalenessStatus: STALE
            healthChecks:
            - {}
            - {}
            haStatus: UNKNOWN
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - CLUSTER
            - HOST
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: UNKNOWN
            entityStatus: STARTING
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: NA
            commissionState: OFFLINING
            healthSummary: NOT_AVAILABLE
            configStalenessStatus: STALE
            healthChecks:
            - {}
            - {}
            haStatus: UNKNOWN
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - HOST
            - SERVICE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: REPLICATED_FOLLOWER
            entityStatus: UNKNOWN_HEALTH
          displayName: '...'
          roleConfigGroups:
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          replicationSchedules:
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: YEAR
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: HOUR
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          snapshotPolicies:
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          entityStatus: DOWN
        - name: '...'
          type: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceState: NA
          healthSummary: CONCERNING
          configStalenessStatus: STALE
          clientConfigStalenessStatus: FRESH
          healthChecks:
          - name: '...'
            summary: CONCERNING
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: NOT_AVAILABLE
            explanation: '...'
            suppressed: true
          serviceUrl: '...'
          roleInstancesUrl: '...'
          maintenanceMode: true
          maintenanceOwners:
          - ROLE
          - ROLE
          config:
            roleTypeConfigs:
            - {}
            - {}
            items:
            - {}
            - {}
          roles:
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: NA
            commissionState: OFFLINING
            healthSummary: GOOD
            configStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            haStatus: UNKNOWN
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - CLUSTER
            - SERVICE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: REPLICATED_OBSERVER
            entityStatus: UNKNOWN
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: NA
            commissionState: UNKNOWN
            healthSummary: DISABLED
            configStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            haStatus: STANDBY
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - HOST
            - ROLE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: REPLICATED_LEADER_ELECTION
            entityStatus: NONE
          displayName: '...'
          roleConfigGroups:
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          replicationSchedules:
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: HOUR
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: YEAR
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          snapshotPolicies:
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          entityStatus: DOWN
        supportedServiceTypes:
        - '...'
        - '...'
        allowedClusterVersions:
        - key: '...'
          value: '...'
        - key: '...'
          value: '...'
        configStalenessStatus: STALE_REFRESHABLE
        clientConfigStalenessStatus: STALE_REFRESHABLE
        healthSummary: HISTORY_NOT_AVAILABLE
    ApiDataContextList:
      title: ApiDataContextList
      description: List of ApiDataContext
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiDataContext'
    ApiDataContextRef:
      title: ApiDataContextRef
      type: object
      properties:
        name:
          type: string
          description: ""
          example: "null"
      description: |-
        Reference to an ApiDataContext object. More properties can be added to this object when we
        support mutable datacontexts, but for MVP datacontexts are immutable.
      example:
        name: '...'
    ApiDeployment:
      title: ApiDeployment
      type: object
      properties:
        timestamp:
          type: string
          description: |-
            Readonly. This timestamp is provided when you request a deployment and
            is not required (or even read) when creating a deployment. This
            timestamp is useful if you have multiple deployments saved and
            want to determine which one to use as a restore point.
          example: "null"
        clusters:
          type: array
          description: |-
            List of clusters in the system including their services, roles and
            complete config values.
          items:
            $ref: '#/components/schemas/ApiCluster'
        hosts:
          type: array
          description: List of hosts in the system
          items:
            $ref: '#/components/schemas/ApiHost'
        users:
          type: array
          description: List of all users in the system
          items:
            $ref: '#/components/schemas/ApiUser'
        versionInfo:
          $ref: '#/components/schemas/ApiVersionInfo'
        managementService:
          $ref: '#/components/schemas/ApiService'
        managerSettings:
          $ref: '#/components/schemas/ApiConfigList'
        allHostsConfig:
          $ref: '#/components/schemas/ApiConfigList'
        peers:
          type: array
          description: |-
            The list of peers configured in Cloudera Manager.
            Available since API v3.
          items:
            $ref: '#/components/schemas/ApiCmPeer'
        hostTemplates:
          $ref: '#/components/schemas/ApiHostTemplateList'
      description: |-
        This objects represents a deployment including all clusters, hosts,
        services, roles, etc in the system.  It can be used to save and restore
        all settings.
      example:
        timestamp: '...'
        clusters:
        - name: '...'
          displayName: '...'
          fullVersion: '...'
          maintenanceMode: true
          maintenanceOwners:
          - SERVICE
          - ROLE
          services:
          - name: '...'
            type: '...'
            clusterRef: {}
            serviceState: NA
            healthSummary: NOT_AVAILABLE
            configStalenessStatus: FRESH
            clientConfigStalenessStatus: STALE
            healthChecks:
            - {}
            - {}
            serviceUrl: '...'
            roleInstancesUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - ROLE
            - SERVICE
            config: {}
            roles:
            - {}
            - {}
            displayName: '...'
            roleConfigGroups:
            - {}
            - {}
            replicationSchedules:
            - {}
            - {}
            snapshotPolicies:
            - {}
            - {}
            entityStatus: STARTING
          - name: '...'
            type: '...'
            clusterRef: {}
            serviceState: STARTED
            healthSummary: HISTORY_NOT_AVAILABLE
            configStalenessStatus: STALE
            clientConfigStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            serviceUrl: '...'
            roleInstancesUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - ROLE
            - ROLE
            config: {}
            roles:
            - {}
            - {}
            displayName: '...'
            roleConfigGroups:
            - {}
            - {}
            replicationSchedules:
            - {}
            - {}
            snapshotPolicies:
            - {}
            - {}
            entityStatus: UNKNOWN_HEALTH
          parcels:
          - product: '...'
            version: '...'
            stage: '...'
            state: {}
            clusterRef: {}
          - product: '...'
            version: '...'
            stage: '...'
            state: {}
            clusterRef: {}
          clusterUrl: '...'
          hostsUrl: '...'
          entityStatus: DOWN
          uuid: '...'
          dataContextRefs:
          - name: '...'
          - name: '...'
          clusterType: '...'
        - name: '...'
          displayName: '...'
          fullVersion: '...'
          maintenanceMode: true
          maintenanceOwners:
          - ROLE
          - CLUSTER
          services:
          - name: '...'
            type: '...'
            clusterRef: {}
            serviceState: STOPPING
            healthSummary: NOT_AVAILABLE
            configStalenessStatus: FRESH
            clientConfigStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            serviceUrl: '...'
            roleInstancesUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - ROLE
            - CLUSTER
            config: {}
            roles:
            - {}
            - {}
            displayName: '...'
            roleConfigGroups:
            - {}
            - {}
            replicationSchedules:
            - {}
            - {}
            snapshotPolicies:
            - {}
            - {}
            entityStatus: UNKNOWN_HEALTH
          - name: '...'
            type: '...'
            clusterRef: {}
            serviceState: STOPPING
            healthSummary: GOOD
            configStalenessStatus: FRESH
            clientConfigStalenessStatus: STALE_REFRESHABLE
            healthChecks:
            - {}
            - {}
            serviceUrl: '...'
            roleInstancesUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - ROLE
            - HOST
            config: {}
            roles:
            - {}
            - {}
            displayName: '...'
            roleConfigGroups:
            - {}
            - {}
            replicationSchedules:
            - {}
            - {}
            snapshotPolicies:
            - {}
            - {}
            entityStatus: DISABLED_HEALTH
          parcels:
          - product: '...'
            version: '...'
            stage: '...'
            state: {}
            clusterRef: {}
          - product: '...'
            version: '...'
            stage: '...'
            state: {}
            clusterRef: {}
          clusterUrl: '...'
          hostsUrl: '...'
          entityStatus: CONCERNING_HEALTH
          uuid: '...'
          dataContextRefs:
          - name: '...'
          - name: '...'
          clusterType: '...'
        hosts:
        - hostId: '...'
          ipAddress: '...'
          hostname: '...'
          rackId: '...'
          lastHeartbeat: '...'
          roleRefs:
          - clusterName: '...'
            serviceName: '...'
            roleName: '...'
          - clusterName: '...'
            serviceName: '...'
            roleName: '...'
          healthSummary: CONCERNING
          healthChecks:
          - name: '...'
            summary: HISTORY_NOT_AVAILABLE
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: DISABLED
            explanation: '...'
            suppressed: true
          hostUrl: '...'
          maintenanceMode: true
          commissionState: OFFLINED
          maintenanceOwners:
          - HOST
          - ROLE
          config:
            items:
            - {}
            - {}
          numCores: 12345
          numPhysicalCores: 12345
          totalPhysMemBytes: 12345
          entityStatus: STOPPED
          clusterRef:
            clusterName: '...'
            displayName: '...'
        - hostId: '...'
          ipAddress: '...'
          hostname: '...'
          rackId: '...'
          lastHeartbeat: '...'
          roleRefs:
          - clusterName: '...'
            serviceName: '...'
            roleName: '...'
          - clusterName: '...'
            serviceName: '...'
            roleName: '...'
          healthSummary: GOOD
          healthChecks:
          - name: '...'
            summary: NOT_AVAILABLE
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: BAD
            explanation: '...'
            suppressed: true
          hostUrl: '...'
          maintenanceMode: true
          commissionState: OFFLINING
          maintenanceOwners:
          - ROLE
          - CLUSTER
          config:
            items:
            - {}
            - {}
          numCores: 12345
          numPhysicalCores: 12345
          totalPhysMemBytes: 12345
          entityStatus: HISTORY_NOT_AVAILABLE
          clusterRef:
            clusterName: '...'
            displayName: '...'
        users:
        - name: '...'
          password: '...'
          roles:
          - '...'
          - '...'
          pwHash: '...'
          pwSalt: 12345
          pwLogin: true
        - name: '...'
          password: '...'
          roles:
          - '...'
          - '...'
          pwHash: '...'
          pwSalt: 12345
          pwLogin: true
        versionInfo:
          version: '...'
          snapshot: true
          buildUser: '...'
          buildTimestamp: '...'
          gitHash: '...'
        managementService:
          name: '...'
          type: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceState: STARTED
          healthSummary: CONCERNING
          configStalenessStatus: STALE
          clientConfigStalenessStatus: FRESH
          healthChecks:
          - name: '...'
            summary: BAD
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: DISABLED
            explanation: '...'
            suppressed: true
          serviceUrl: '...'
          roleInstancesUrl: '...'
          maintenanceMode: true
          maintenanceOwners:
          - HOST
          - HOST
          config:
            roleTypeConfigs:
            - {}
            - {}
            items:
            - {}
            - {}
          roles:
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: STARTED
            commissionState: DECOMMISSIONED
            healthSummary: NOT_AVAILABLE
            configStalenessStatus: STALE_REFRESHABLE
            healthChecks:
            - {}
            - {}
            haStatus: ACTIVE
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - ROLE
            - SERVICE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: REPLICATED_LEADER
            entityStatus: STOPPING
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: BUSY
            commissionState: DECOMMISSIONED
            healthSummary: CONCERNING
            configStalenessStatus: STALE_REFRESHABLE
            healthChecks:
            - {}
            - {}
            haStatus: STANDBY
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - SERVICE
            - SERVICE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: STANDALONE
            entityStatus: GOOD_HEALTH
          displayName: '...'
          roleConfigGroups:
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          replicationSchedules:
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: HOUR
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: MONTH
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          snapshotPolicies:
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          entityStatus: STOPPING
        managerSettings:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: ERROR
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: WARNING
            validationMessage: '...'
            validationWarningsSuppressed: true
        allHostsConfig:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: ERROR
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: WARNING
            validationMessage: '...'
            validationWarningsSuppressed: true
        peers:
        - name: '...'
          type: REPLICATION
          url: '...'
          username: '...'
          password: '...'
          clouderaManagerCreatedUser: true
        - name: '...'
          type: STATUS_AGGREGATION
          url: '...'
          username: '...'
          password: '...'
          clouderaManagerCreatedUser: true
        hostTemplates:
          items:
          - name: '...'
            clusterRef: {}
            roleConfigGroupRefs:
            - {}
            - {}
          - name: '...'
            clusterRef: {}
            roleConfigGroupRefs:
            - {}
            - {}
    ApiDeployment2:
      title: ApiDeployment2
      type: object
      properties:
        timestamp:
          type: string
          description: |-
            Readonly. This timestamp is provided when you request a deployment and
            is not required (or even read) when creating a deployment. This
            timestamp is useful if you have multiple deployments saved and
            want to determine which one to use as a restore point.
          example: "null"
        clusters:
          type: array
          description: |-
            List of clusters in the system including their services, roles and
            complete config values.
          items:
            $ref: '#/components/schemas/ApiCluster'
        hosts:
          type: array
          description: List of hosts in the system
          items:
            $ref: '#/components/schemas/ApiHost'
        authRoles:
          type: array
          description: |-
            List of all auth roles in the system
            Available from v32
          items:
            $ref: '#/components/schemas/ApiAuthRole'
        externalUserMappings:
          type: array
          description: |-
            List of all external user mappings in the system
            Available from v32
          items:
            $ref: '#/components/schemas/ApiExternalUserMapping'
        users:
          type: array
          description: List of all users in the system
          items:
            $ref: '#/components/schemas/ApiUser2'
        versionInfo:
          $ref: '#/components/schemas/ApiVersionInfo'
        managementService:
          $ref: '#/components/schemas/ApiService'
        managerSettings:
          $ref: '#/components/schemas/ApiConfigList'
        allHostsConfig:
          $ref: '#/components/schemas/ApiConfigList'
        peers:
          type: array
          description: |-
            The list of peers configured in Cloudera Manager.
            Available since API v3.
          items:
            $ref: '#/components/schemas/ApiCmPeer'
        hostTemplates:
          $ref: '#/components/schemas/ApiHostTemplateList'
        dataContexts:
          $ref: '#/components/schemas/ApiDataContextList'
      description: |-
        This objects represents a deployment including all clusters, hosts,
        services, roles, etc in the system.  It can be used to save and restore
        all settings. This model will be used v18 and beyond since users will be represented
        by ApiUser2 v18 and beyond.
      example:
        timestamp: '...'
        clusters:
        - name: '...'
          displayName: '...'
          fullVersion: '...'
          maintenanceMode: true
          maintenanceOwners:
          - CLUSTER
          - ROLE
          services:
          - name: '...'
            type: '...'
            clusterRef: {}
            serviceState: STARTING
            healthSummary: DISABLED
            configStalenessStatus: FRESH
            clientConfigStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            serviceUrl: '...'
            roleInstancesUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - SERVICE
            - ROLE
            config: {}
            roles:
            - {}
            - {}
            displayName: '...'
            roleConfigGroups:
            - {}
            - {}
            replicationSchedules:
            - {}
            - {}
            snapshotPolicies:
            - {}
            - {}
            entityStatus: DISABLED_HEALTH
          - name: '...'
            type: '...'
            clusterRef: {}
            serviceState: NA
            healthSummary: GOOD
            configStalenessStatus: STALE
            clientConfigStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            serviceUrl: '...'
            roleInstancesUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - HOST
            - CLUSTER
            config: {}
            roles:
            - {}
            - {}
            displayName: '...'
            roleConfigGroups:
            - {}
            - {}
            replicationSchedules:
            - {}
            - {}
            snapshotPolicies:
            - {}
            - {}
            entityStatus: UNKNOWN
          parcels:
          - product: '...'
            version: '...'
            stage: '...'
            state: {}
            clusterRef: {}
          - product: '...'
            version: '...'
            stage: '...'
            state: {}
            clusterRef: {}
          clusterUrl: '...'
          hostsUrl: '...'
          entityStatus: STOPPED
          uuid: '...'
          dataContextRefs:
          - name: '...'
          - name: '...'
          clusterType: '...'
        - name: '...'
          displayName: '...'
          fullVersion: '...'
          maintenanceMode: true
          maintenanceOwners:
          - ROLE
          - HOST
          services:
          - name: '...'
            type: '...'
            clusterRef: {}
            serviceState: UNKNOWN
            healthSummary: CONCERNING
            configStalenessStatus: STALE_REFRESHABLE
            clientConfigStalenessStatus: FRESH
            healthChecks:
            - {}
            - {}
            serviceUrl: '...'
            roleInstancesUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - CLUSTER
            - SERVICE
            config: {}
            roles:
            - {}
            - {}
            displayName: '...'
            roleConfigGroups:
            - {}
            - {}
            replicationSchedules:
            - {}
            - {}
            snapshotPolicies:
            - {}
            - {}
            entityStatus: UNKNOWN_HEALTH
          - name: '...'
            type: '...'
            clusterRef: {}
            serviceState: UNKNOWN
            healthSummary: CONCERNING
            configStalenessStatus: STALE_REFRESHABLE
            clientConfigStalenessStatus: STALE
            healthChecks:
            - {}
            - {}
            serviceUrl: '...'
            roleInstancesUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - SERVICE
            - HOST
            config: {}
            roles:
            - {}
            - {}
            displayName: '...'
            roleConfigGroups:
            - {}
            - {}
            replicationSchedules:
            - {}
            - {}
            snapshotPolicies:
            - {}
            - {}
            entityStatus: DISABLED_HEALTH
          parcels:
          - product: '...'
            version: '...'
            stage: '...'
            state: {}
            clusterRef: {}
          - product: '...'
            version: '...'
            stage: '...'
            state: {}
            clusterRef: {}
          clusterUrl: '...'
          hostsUrl: '...'
          entityStatus: DOWN
          uuid: '...'
          dataContextRefs:
          - name: '...'
          - name: '...'
          clusterType: '...'
        hosts:
        - hostId: '...'
          ipAddress: '...'
          hostname: '...'
          rackId: '...'
          lastHeartbeat: '...'
          roleRefs:
          - clusterName: '...'
            serviceName: '...'
            roleName: '...'
          - clusterName: '...'
            serviceName: '...'
            roleName: '...'
          healthSummary: BAD
          healthChecks:
          - name: '...'
            summary: GOOD
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: BAD
            explanation: '...'
            suppressed: true
          hostUrl: '...'
          maintenanceMode: true
          commissionState: OFFLINING
          maintenanceOwners:
          - CLUSTER
          - HOST
          config:
            items:
            - {}
            - {}
          numCores: 12345
          numPhysicalCores: 12345
          totalPhysMemBytes: 12345
          entityStatus: GOOD_HEALTH
          clusterRef:
            clusterName: '...'
            displayName: '...'
        - hostId: '...'
          ipAddress: '...'
          hostname: '...'
          rackId: '...'
          lastHeartbeat: '...'
          roleRefs:
          - clusterName: '...'
            serviceName: '...'
            roleName: '...'
          - clusterName: '...'
            serviceName: '...'
            roleName: '...'
          healthSummary: BAD
          healthChecks:
          - name: '...'
            summary: DISABLED
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: GOOD
            explanation: '...'
            suppressed: true
          hostUrl: '...'
          maintenanceMode: true
          commissionState: UNKNOWN
          maintenanceOwners:
          - HOST
          - HOST
          config:
            items:
            - {}
            - {}
          numCores: 12345
          numPhysicalCores: 12345
          totalPhysMemBytes: 12345
          entityStatus: BAD_HEALTH
          clusterRef:
            clusterName: '...'
            displayName: '...'
        authRoles:
        - displayName: '...'
          name: '...'
          clusters:
          - clusterName: '...'
            displayName: '...'
          - clusterName: '...'
            displayName: '...'
          users:
          - name: '...'
          - name: '...'
          externalUserMappings:
          - uuid: '...'
            name: '...'
            type: EXTERNAL_PROGRAM
          - uuid: '...'
            name: '...'
            type: EXTERNAL_PROGRAM
          baseRole:
            displayName: '...'
            name: '...'
            uuid: '...'
          uuid: '...'
          isCustom: true
        - displayName: '...'
          name: '...'
          clusters:
          - clusterName: '...'
            displayName: '...'
          - clusterName: '...'
            displayName: '...'
          users:
          - name: '...'
          - name: '...'
          externalUserMappings:
          - uuid: '...'
            name: '...'
            type: SAML_SCRIPT
          - uuid: '...'
            name: '...'
            type: EXTERNAL_PROGRAM
          baseRole:
            displayName: '...'
            name: '...'
            uuid: '...'
          uuid: '...'
          isCustom: true
        externalUserMappings:
        - name: '...'
          type: SAML_SCRIPT
          uuid: '...'
          authRoles:
          - displayName: '...'
            name: '...'
            uuid: '...'
          - displayName: '...'
            name: '...'
            uuid: '...'
        - name: '...'
          type: SAML_ATTRIBUTE
          uuid: '...'
          authRoles:
          - displayName: '...'
            name: '...'
            uuid: '...'
          - displayName: '...'
            name: '...'
            uuid: '...'
        users:
        - name: '...'
          password: '...'
          authRoles:
          - displayName: '...'
            name: '...'
            uuid: '...'
          - displayName: '...'
            name: '...'
            uuid: '...'
          pwHash: '...'
          pwSalt: 12345
          pwLogin: true
        - name: '...'
          password: '...'
          authRoles:
          - displayName: '...'
            name: '...'
            uuid: '...'
          - displayName: '...'
            name: '...'
            uuid: '...'
          pwHash: '...'
          pwSalt: 12345
          pwLogin: true
        versionInfo:
          version: '...'
          snapshot: true
          buildUser: '...'
          buildTimestamp: '...'
          gitHash: '...'
        managementService:
          name: '...'
          type: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceState: STARTED
          healthSummary: CONCERNING
          configStalenessStatus: STALE
          clientConfigStalenessStatus: STALE_REFRESHABLE
          healthChecks:
          - name: '...'
            summary: BAD
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: HISTORY_NOT_AVAILABLE
            explanation: '...'
            suppressed: true
          serviceUrl: '...'
          roleInstancesUrl: '...'
          maintenanceMode: true
          maintenanceOwners:
          - CLUSTER
          - HOST
          config:
            roleTypeConfigs:
            - {}
            - {}
            items:
            - {}
            - {}
          roles:
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: BUSY
            commissionState: OFFLINING
            healthSummary: BAD
            configStalenessStatus: STALE_REFRESHABLE
            healthChecks:
            - {}
            - {}
            haStatus: STANDBY
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - SERVICE
            - SERVICE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: UNKNOWN
            entityStatus: DOWN
          - name: '...'
            type: '...'
            hostRef: {}
            serviceRef: {}
            roleState: BUSY
            commissionState: UNKNOWN
            healthSummary: CONCERNING
            configStalenessStatus: STALE
            healthChecks:
            - {}
            - {}
            haStatus: ACTIVE
            roleUrl: '...'
            maintenanceMode: true
            maintenanceOwners:
            - HOST
            - ROLE
            config: {}
            roleConfigGroupRef: {}
            zooKeeperServerMode: STANDALONE
            entityStatus: UNKNOWN_HEALTH
          displayName: '...'
          roleConfigGroups:
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          - name: '...'
            roleType: '...'
            base: true
            config: {}
            displayName: '...'
            serviceRef: {}
          replicationSchedules:
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: HOUR
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          - hdfsArguments: {}
            hiveArguments: {}
            hdfsCloudArguments: {}
            history:
            - {}
            - {}
            active: true
            hiveCloudArguments: {}
            id: 12345
            displayName: '...'
            description: '...'
            startTime: '...'
            endTime: '...'
            interval: 12345
            intervalUnit: DAY
            nextRun: '...'
            paused: true
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
          snapshotPolicies:
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          - name: '...'
            description: '...'
            hourlySnapshots: 12345
            dailySnapshots: 12345
            weeklySnapshots: 12345
            monthlySnapshots: 12345
            yearlySnapshots: 12345
            minuteOfHour: 12345
            hoursForHourlySnapshots:
            - 12345
            - 12345
            hourOfDay: 12345
            dayOfWeek: 12345
            dayOfMonth: 12345
            monthOfYear: 12345
            alertOnStart: true
            alertOnSuccess: true
            alertOnFail: true
            alertOnAbort: true
            hbaseArguments: {}
            hdfsArguments: {}
            lastCommand: {}
            lastSuccessfulCommand: {}
            paused: true
          entityStatus: DISABLED_HEALTH
        managerSettings:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: ERROR
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: ERROR
            validationMessage: '...'
            validationWarningsSuppressed: true
        allHostsConfig:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: WARNING
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
        peers:
        - name: '...'
          type: REPLICATION
          url: '...'
          username: '...'
          password: '...'
          clouderaManagerCreatedUser: true
        - name: '...'
          type: REPLICATION
          url: '...'
          username: '...'
          password: '...'
          clouderaManagerCreatedUser: true
        hostTemplates:
          items:
          - name: '...'
            clusterRef: {}
            roleConfigGroupRefs:
            - {}
            - {}
          - name: '...'
            clusterRef: {}
            roleConfigGroupRefs:
            - {}
            - {}
        dataContexts:
          items:
          - name: '...'
            displayName: '...'
            nameservice: '...'
            createdTime: '...'
            lastModifiedTime: '...'
            services:
            - {}
            - {}
            servicesDetails:
            - {}
            - {}
            supportedServiceTypes:
            - '...'
            - '...'
            allowedClusterVersions:
            - {}
            - {}
            configStalenessStatus: FRESH
            clientConfigStalenessStatus: STALE_REFRESHABLE
            healthSummary: GOOD
          - name: '...'
            displayName: '...'
            nameservice: '...'
            createdTime: '...'
            lastModifiedTime: '...'
            services:
            - {}
            - {}
            servicesDetails:
            - {}
            - {}
            supportedServiceTypes:
            - '...'
            - '...'
            allowedClusterVersions:
            - {}
            - {}
            configStalenessStatus: STALE_REFRESHABLE
            clientConfigStalenessStatus: STALE_REFRESHABLE
            healthSummary: CONCERNING
    ApiDisableJtHaArguments:
      title: ApiDisableJtHaArguments
      type: object
      properties:
        activeName:
          type: string
          description: Name of the JobTracker that will be active after HA is disabled.
          example: "null"
      description: Arguments used for disable JT HA command.
      example:
        activeName: '...'
    ApiDisableLlamaHaArguments:
      title: ApiDisableLlamaHaArguments
      type: object
      properties:
        activeName:
          type: string
          description: Name of the Llama role that will be active after HA is disabled.
          example: "null"
      description: Arguments used for disable Llama HA command.
      example:
        activeName: '...'
    ApiDisableNnHaArguments:
      title: ApiDisableNnHaArguments
      type: object
      properties:
        activeNnName:
          type: string
          description: |-
            Name of the NamdeNode role that is going to be active after
            High Availability is disabled.
          example: "null"
        snnHostId:
          type: string
          description: Id of the host where the new SecondaryNameNode will be created.
          example: "null"
        snnCheckpointDirList:
          type: array
          description: List of directories used for checkpointing by the new SecondaryNameNode.
          example: "null"
          items:
            type: string
        snnName:
          type: string
          description: Name of the new SecondaryNameNode role (Optional).
          example: "null"
      description: Arguments used for Disable NameNode High Availability command.
      example:
        activeNnName: '...'
        snnHostId: '...'
        snnCheckpointDirList:
        - '...'
        - '...'
        snnName: '...'
    ApiDisableOozieHaArguments:
      title: ApiDisableOozieHaArguments
      type: object
      properties:
        activeName:
          type: string
          description: Name of the Oozie Server that will be active after HA is disabled.
          example: "null"
      description: ""
      example:
        activeName: '...'
    ApiDisableRmHaArguments:
      title: ApiDisableRmHaArguments
      type: object
      properties:
        activeName:
          type: string
          description: Name of the ResourceManager that will be active after HA is
            disabled.
          example: "null"
      description: Arguments used for Disable RM HA command.
      example:
        activeName: '...'
    ApiDisableSentryHaArgs:
      title: ApiDisableSentryHaArgs
      type: object
      properties:
        activeName:
          type: string
          description: Name of the single role that will remain active after HA is
            disabled.
          example: "null"
      description: Arguments used for disable Sentry HA API call.
      example:
        activeName: '...'
    ApiEcho:
      title: ApiEcho
      type: object
      properties:
        message:
          type: string
          description: ""
          example: "null"
      description: The echoMessage carries a message to be echoed back from the API
        service.
      example:
        message: '...'
    ApiEnableJtHaArguments:
      title: ApiEnableJtHaArguments
      type: object
      properties:
        newJtHostId:
          type: string
          description: Id of host on which second JobTracker role will be added.
          example: "null"
        forceInitZNode:
          type: boolean
          description: |-
            Initialize the ZNode even if it already exists. This can happen if
            JobTracker HA was enabled before and then disabled. Disable operation
            doesn't delete this ZNode. Defaults to true.
        zkServiceName:
          type: string
          description: |-
            Name of the ZooKeeper service that will be used for auto-failover.
            This is an optional parameter if the MapReduce to ZooKeeper dependency is
            already set in CM.
          example: "null"
        newJtRoleName:
          type: string
          description: Name of the second JobTracker role to be created (Optional)
          example: "null"
        fc1RoleName:
          type: string
          description: |-
            Name of first Failover Controller role to be created.
            This is the Failover Controller co-located with the current
            JobTracker (Optional)
          example: "null"
        fc2RoleName:
          type: string
          description: |-
            Name of second Failover Controller role to be created.
            This is the Failover Controller co-located with the new
            JobTracker (Optional)
          example: "null"
        logicalName:
          type: string
          description: |-
            Logical name of the JobTracker pair. If value is not provided,
            "logicaljt" is used as the default. The name can contain
            only alphanumeric characters and "-".
            <p>
            Available since API v8.
          example: "null"
      description: Arguments used for enable JT HA command.
      example:
        newJtHostId: '...'
        forceInitZNode: true
        zkServiceName: '...'
        newJtRoleName: '...'
        fc1RoleName: '...'
        fc2RoleName: '...'
        logicalName: '...'
    ApiEnableLlamaHaArguments:
      title: ApiEnableLlamaHaArguments
      type: object
      properties:
        newLlamaHostId:
          type: string
          description: HostId of the host on which the second Llama role will be created.
          example: "null"
        newLlamaRoleName:
          type: string
          description: Name of the second Llama role to be created (optional).
          example: "null"
        zkServiceName:
          type: string
          description: |-
            Name of the ZooKeeper service that will be used for auto-failover.
            This argument may be omitted if the ZooKeeper dependency for Impala
            is already configured.
          example: "null"
      description: Arguments used for enable Llama HA command.
      example:
        newLlamaHostId: '...'
        newLlamaRoleName: '...'
        zkServiceName: '...'
    ApiEnableLlamaRmArguments:
      title: ApiEnableLlamaRmArguments
      type: object
      properties:
        llama1HostId:
          type: string
          description: HostId of the host on which the first Llama role will be created.
          example: "null"
        llama1RoleName:
          type: string
          description: Name of the first Llama role to be created (optional).
          example: "null"
        llama2HostId:
          type: string
          description: HostId of the host on which the second Llama role will be created.
          example: "null"
        llama2RoleName:
          type: string
          description: Name of the second Llama role to be created (optional).
          example: "null"
        zkServiceName:
          type: string
          description: |-
            Name of the ZooKeeper service that will be used for auto-failover.
            Only relevant when enabling Llama RM in HA mode (i.e., when two
            Llama roles are being created). This argument may be omitted if
            the ZooKeeper dependency for Impala is already configured.
          example: "null"
        skipRestart:
          type: boolean
          description: |-
            Skip the restart of Yarn, Impala, and their dependent services,
            and don't deploy client configuration. Default is false (i.e.,
            by default, the services are restarted and client configuration
            is deployed).
      description: Arguments used for enable Llama RM command.
      example:
        llama1HostId: '...'
        llama1RoleName: '...'
        llama2HostId: '...'
        llama2RoleName: '...'
        zkServiceName: '...'
        skipRestart: true
    ApiEnableNnHaArguments:
      title: ApiEnableNnHaArguments
      type: object
      properties:
        activeNnName:
          type: string
          description: Name of the NameNode role that is going to be made Highly Available.
          example: "null"
        standbyNnName:
          type: string
          description: |-
            Name of the new Standby NameNode role that will be created during the
            command (Optional).
          example: "null"
        standbyNnHostId:
          type: string
          description: Id of the host on which new Standby NameNode will be created.
          example: "null"
        standbyNameDirList:
          type: array
          description: |-
            List of directories for the new Standby NameNode.
            If not provided then it will use same dirs as Active NameNode.
          example: "null"
          items:
            type: string
        nameservice:
          type: string
          description: |-
            Nameservice to be used while enabling Highly Available.
            It must be specified if Active NameNode isn't configured with it.
            If Active NameNode is already configured, then this need not
            be specified. However, if it is still specified, it must match
            the existing config for the Active NameNode.
          example: "null"
        qjName:
          type: string
          description: |-
            Name of the journal located on each JournalNodes' filesystem.
            This can be optionally provided if the config hasn't already been set for the
            Active NameNode.
            If this isn't provided and Active NameNode doesn't also have the config,
            then nameservice is used by default. If Active NameNode already has this configured,
            then it much match the existing config.
          example: "null"
        activeFcName:
          type: string
          description: |-
            Name of the FailoverController role to be created on
            Active NameNode's host (Optional).
          example: "null"
        standbyFcName:
          type: string
          description: |-
            Name of the FailoverController role to be created on
            Standby NameNode's host (Optional).
          example: "null"
        zkServiceName:
          type: string
          description: |-
            Name of the ZooKeeper service to be used for Auto-Failover.
            This MUST be provided if HDFS doesn't have a ZooKeeper dependency.
            If the dependency is already set, then this should be the name of the same
            ZooKeeper service, but can also be omitted in that case.
          example: "null"
        jns:
          type: array
          description: |-
            Arguments for the JournalNodes to be created during the command.
            Must be provided only if JournalNodes don't exist already in HDFS.
          items:
            $ref: '#/components/schemas/ApiJournalNodeArguments'
        forceInitZNode:
          type: boolean
          description: |-
            Boolean indicating if the ZNode should be force initialized if it is
            already present. Useful while re-enabling High Availability. (Default: TRUE)
        clearExistingStandbyNameDirs:
          type: boolean
          description: |-
            Boolean indicating if the existing name directories for Standby NameNode
            should be cleared during the workflow.
            Useful while re-enabling High Availability. (Default: TRUE)
        clearExistingJnEditsDir:
          type: boolean
          description: |-
            Boolean indicating if the existing edits directories for the JournalNodes
            for the specified nameservice should be cleared during the workflow.
            Useful while re-enabling High Availability. (Default: TRUE)
      description: Arguments used for Enable NameNode High Availability command.
      example:
        activeNnName: '...'
        standbyNnName: '...'
        standbyNnHostId: '...'
        standbyNameDirList:
        - '...'
        - '...'
        nameservice: '...'
        qjName: '...'
        activeFcName: '...'
        standbyFcName: '...'
        zkServiceName: '...'
        jns:
        - jnName: '...'
          jnHostId: '...'
          jnEditsDir: '...'
        - jnName: '...'
          jnHostId: '...'
          jnEditsDir: '...'
        forceInitZNode: true
        clearExistingStandbyNameDirs: true
        clearExistingJnEditsDir: true
    ApiEnableOozieHaArguments:
      title: ApiEnableOozieHaArguments
      type: object
      properties:
        newOozieServerHostIds:
          type: array
          description: IDs of the hosts on which new Oozie Servers will be added.
          example: "null"
          items:
            type: string
        newOozieServerRoleNames:
          type: array
          description: |-
            Names of the new Oozie Servers. This is an optional argument,
            but if provided, it should match the length of host IDs provided.
          example: "null"
          items:
            type: string
        zkServiceName:
          type: string
          description: |-
            Name of the ZooKeeper service that will be used for Oozie HA.
            This is an optional parameter if the Oozie to ZooKeeper dependency is
            already set in CM.
          example: "null"
        loadBalancerHostname:
          type: string
          description: |-
            Hostname of the load balancer used for Oozie HA.
            Optional if load balancer host and ports are already set in CM.
          example: "null"
        loadBalancerPort:
          type: number
          description: |-
            HTTP port of the load balancer used for Oozie HA.
            Optional if load balancer host and ports are already set in CM.
        loadBalancerSslPort:
          type: number
          description: |-
            HTTPS port of the load balancer used for Oozie HA when SSL is enabled.
            This port is only used for oozie.base.url -- the callback is always
            on HTTP.
            Optional if load balancer host and ports are already set in CM.
        loadBalancerHostPort:
          type: string
          description: |-
            Address of the load balancer used for Oozie HA.
            This is an optional parameter if this config is already set in CM.
          example: "null"
      description: ""
      example:
        newOozieServerHostIds:
        - '...'
        - '...'
        newOozieServerRoleNames:
        - '...'
        - '...'
        zkServiceName: '...'
        loadBalancerHostname: '...'
        loadBalancerPort: 12345
        loadBalancerSslPort: 12345
    ApiEnableRmHaArguments:
      title: ApiEnableRmHaArguments
      type: object
      properties:
        newRmHostId:
          type: string
          description: Id of host on which second ResourceManager role will be added.
          example: "null"
        newRmRoleName:
          type: string
          description: Name of the second ResourceManager role to be created (Optional)
          example: "null"
        zkServiceName:
          type: string
          description: |-
            Name of the ZooKeeper service that will be used for auto-failover.
            This is an optional parameter if the Yarn to ZooKeeper dependency is
            already set in CM.
          example: "null"
      description: Arguments used for enable RM HA command.
      example:
        newRmHostId: '...'
        newRmRoleName: '...'
        zkServiceName: '...'
    ApiEnableSentryHaArgs:
      title: ApiEnableSentryHaArgs
      type: object
      properties:
        newSentryHostId:
          type: string
          description: Id of host on which new Sentry Server role will be added.
          example: "null"
        newSentryRoleName:
          type: string
          description: |-
            Name of the new Sentry Server role to be created. This is an
            optional argument.
          example: "null"
        zkServiceName:
          type: string
          description: |-
            Name of the ZooKeeper service that will be used for Sentry HA.
            This is an optional parameter if the Sentry to ZooKeeper dependency is
            already set in CM.
          example: "null"
        rrcArgs:
          $ref: '#/components/schemas/ApiSimpleRollingRestartClusterArgs'
      description: Arguments used for enable Sentry HA command.
      example:
        newSentryHostId: '...'
        newSentryRoleName: '...'
        zkServiceName: '...'
        rrcArgs:
          slaveBatchSize: 12345
          sleepSeconds: 12345
          slaveFailCountThreshold: 12345
    ApiEntityStatus:
      title: ApiEntityStatus
      type: string
      description: |-
        The single value used by the Cloudera Manager UI to represent the status of
        the entity. It is computed from a variety of other entity-specific states,
        not all values apply to all entities. For example, STARTING/STOPPING do not
        apply to a host.
      enum:
      - UNKNOWN
      - NONE
      - STOPPED
      - DOWN
      - UNKNOWN_HEALTH
      - DISABLED_HEALTH
      - CONCERNING_HEALTH
      - BAD_HEALTH
      - GOOD_HEALTH
      - STARTING
      - STOPPING
      - HISTORY_NOT_AVAILABLE
    ApiEntityType:
      title: ApiEntityType
      type: string
      description: Represents the types of entities.
      enum:
      - CLUSTER
      - SERVICE
      - ROLE
      - HOST
    ApiEvent:
      title: ApiEvent
      type: object
      properties:
        id:
          type: string
          description: A unique ID for this event.
          example: "null"
        content:
          type: string
          description: The content payload of this event.
          example: "null"
        timeOccurred:
          type: string
          description: When the event was generated.
          example: "null"
        timeReceived:
          type: string
          description: |-
            When the event was stored by Cloudera Manager. Events do not arrive in
            the order that they are generated. If you are writing an event poller,
            this is a useful field to query.
          example: "null"
        category:
          $ref: '#/components/schemas/ApiEventCategory'
        severity:
          $ref: '#/components/schemas/ApiEventSeverity'
        alert:
          type: boolean
          description: Whether the event is promoted to an alert according to configuration.
        attributes:
          type: array
          description: A list of key-value attribute pairs.
          items:
            $ref: '#/components/schemas/ApiEventAttribute'
      description: |-
        Events model noteworthy incidents in Cloudera Manager or the managed
        Hadoop cluster. An event carries its event category, severity, and a
        string content. They also have generic attributes, which are free-form
        key value pairs. Important events may be promoted into alerts.
      example:
        id: '...'
        content: '...'
        timeOccurred: '...'
        timeReceived: '...'
        category: SYSTEM
        severity: IMPORTANT
        alert: true
        attributes:
        - name: '...'
          values:
          - '...'
          - '...'
        - name: '...'
          values:
          - '...'
          - '...'
    ApiEventAttribute:
      title: ApiEventAttribute
      type: object
      properties:
        name:
          type: string
          description: ""
          example: "null"
        values:
          type: array
          description: ""
          example: "null"
          items:
            type: string
      description: ""
      example:
        name: '...'
        values:
        - '...'
        - '...'
    ApiEventCategory:
      title: ApiEventCategory
      type: string
      description: ""
      enum:
      - UNKNOWN
      - HEALTH_EVENT
      - LOG_EVENT
      - AUDIT_EVENT
      - ACTIVITY_EVENT
      - HBASE
      - SYSTEM
    ApiEventQueryResult:
      title: ApiEventQueryResult
      description: A generic list.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          totalResults:
            type: number
            description: |-
              The total number of matched results. Some are possibly not shown due
              to pagination.
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiEvent'
    ApiEventSeverity:
      title: ApiEventSeverity
      type: string
      description: ""
      enum:
      - UNKNOWN
      - INFORMATIONAL
      - IMPORTANT
      - CRITICAL
    ApiExternalAccount:
      title: ApiExternalAccount
      type: object
      properties:
        name:
          type: string
          description: Represents the intial name of the account; used to uniquely
            identify this account.
          example: "null"
        displayName:
          type: string
          description: Represents a modifiable label to identify this account for
            user-visible purposes.
          example: "null"
        createdTime:
          type: string
          description: Represents the time of creation for this account.
          example: "null"
        lastModifiedTime:
          type: string
          description: Represents the last modification time for this account.
          example: "null"
        typeName:
          type: string
          description: |-
            Represents the Type ID of a supported external account type.
            The type represented by this field dictates which configuration options must be defined
            for this account.
          example: "null"
        accountConfigs:
          $ref: '#/components/schemas/ApiConfigList'
      description: |-
        Represents an instantiation of an external account type, referencing a supported
        external account type, via the typeName field, along with suitable configuration to
        access an external resource of the provided type.

        The typeName field must match the name of an external account type.
      example:
        name: '...'
        displayName: '...'
        createdTime: '...'
        lastModifiedTime: '...'
        typeName: '...'
        accountConfigs:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
    ApiExternalAccountCategory:
      title: ApiExternalAccountCategory
      type: object
      properties:
        name:
          type: string
          description: Represents an identifier for a category.
          example: "null"
        displayName:
          type: string
          description: Represents a localized display name for a category.
          example: "null"
        description:
          type: string
          description: Represents a localized description for a category.
          example: "null"
      description: Type representing an external account category.
      example:
        name: '...'
        displayName: '...'
        description: '...'
    ApiExternalAccountCategoryList:
      title: ApiExternalAccountCategoryList
      description: Represents a list of external account categories.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiExternalAccountCategory'
    ApiExternalAccountList:
      title: ApiExternalAccountList
      description: Represents a list of external accounts.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiExternalAccount'
    ApiExternalAccountType:
      title: ApiExternalAccountType
      type: object
      properties:
        name:
          type: string
          description: Represents the immutable name for this account.
          example: "null"
        categoryName:
          type: string
          description: Represents the category of this account.
          example: "null"
        type:
          type: string
          description: Represents the type for this account.
          example: "null"
        displayName:
          type: string
          description: Represents the localized display name for this account.
          example: "null"
        description:
          type: string
          description: Represents the localized description for this account type.
          example: "null"
        allowedAccountConfigs:
          $ref: '#/components/schemas/ApiConfigList'
      description: |-
        A supported external account type.
        An external account type represents an external authentication source that is used by
        Cloudera Manager in its APIs to take suitable actions that require authentication to an
        external service.

        An external account type is uniquely identified by a server-generated ID and identifies with
        a category identifier: e.g. The "AWS" category has an account type "AWS_Access_Key_Authorization"
      example:
        name: '...'
        categoryName: '...'
        type: '...'
        displayName: '...'
        description: '...'
        allowedAccountConfigs:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: ERROR
            validationMessage: '...'
            validationWarningsSuppressed: true
    ApiExternalAccountTypeList:
      title: ApiExternalAccountTypeList
      description: Represents a list of external account types.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiExternalAccountType'
    ApiExternalUserMapping:
      title: ApiExternalUserMapping
      type: object
      properties:
        name:
          type: string
          description: The name of the external mapping
          example: "null"
        type:
          $ref: '#/components/schemas/ApiExternalUserMappingType'
        uuid:
          type: string
          description: |-
            Readonly. The UUID of the authRole.
            <p>
          example: "null"
        authRoles:
          type: array
          description: |-
            A list of ApiAuthRole that this user possesses.

            Each custom role with be a built-in role with a set of scopes.
            ApiAuthRole is the model for specifying custom roles.
            Only admins and user admins can create/delete/update external
            user mappings.
          items:
            $ref: '#/components/schemas/ApiAuthRoleRef'
      description: |-
        This is the model for external user mapping information in the API, v19 and beyond.
        These can be of 4 types : LDAP group, SAML, SAML attribute and External Script.
        <p>
      example:
        name: '...'
        type: LDAP
        uuid: '...'
        authRoles:
        - displayName: '...'
          name: '...'
          uuid: '...'
        - displayName: '...'
          name: '...'
          uuid: '...'
    ApiExternalUserMappingList:
      title: ApiExternalUserMappingList
      description: A list of external user mappings.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiExternalUserMapping'
    ApiExternalUserMappingRef:
      title: ApiExternalUserMappingRef
      type: object
      properties:
        uuid:
          type: string
          description: "The uuid of the external user mapping, which uniquely identifies\
            \ it in a CM installation."
          example: "null"
        name:
          type: string
          description: The name of the mapping.
          example: "null"
        type:
          $ref: '#/components/schemas/ApiExternalUserMappingType'
      description: An externalUserMappingRef references an externalUserMapping.
      example:
        uuid: '...'
        name: '...'
        type: SAML_SCRIPT
    ApiExternalUserMappingType:
      title: ApiExternalUserMappingType
      type: string
      description: Enum for external user mapping types
      enum:
      - LDAP
      - SAML_SCRIPT
      - SAML_ATTRIBUTE
      - EXTERNAL_PROGRAM
    ApiGenerateCmcaArguments:
      title: ApiGenerateCmcaArguments
      description: Arguments to generate a Cloudera Manager Certificate Authority
        (CMCA).
      allOf:
      - $ref: '#/components/schemas/BaseApiSshCmdArguments'
      - type: object
        properties:
          location:
            type: string
            description: |-
              The location on disk to store the CMCA directory. If there is already a CMCA created there,
              it will be backed up, and a new one will be created in its place.
            example: /opt/cloudera/CMCA
          customCA:
            type: boolean
            description: |-
              Whether to generate an internal CMCA (false) or use user-provided certificates (true).

              When set to true (user-provided certificates), the following other arguments must be given:
              * cmHostCert
              * cmHostKey
              * caCert
              * keystorePasswd
              * truststorePasswd
            example: false
          interpretAsFilenames:
            type: boolean
            description: |-
              Whether the following arguments are interpreted as filenames local to the Cloudera Manager
              host (true, default) or as the actual data for that argument:
              * cmHostCert
              * cmHostKey
              * caCert
              * keystorePasswd
              * truststorePasswd
              * trustedCaCerts
              * hostCerts.hostCert
              * hostCerts.hostKey

              If HTTPS has not been enabled on the Cloudera Manager Admin Console and API, we
              *strongly* recommend that you pass the arguments as filenames local to the Cloudera Manager
              host (i.e. set to true) to avoid leaking sensitive information over the wire in plaintext.
            example: true
          cmHostCert:
            type: string
            description: The certificate for the CM host in PEM format. Only used
              if customCA == true.
            example: host-cert.pem
          cmHostKey:
            type: string
            description: The private key for the CM host in PEM format. Only used
              if customCA == true.
            example: host-key.pem
          caCert:
            type: string
            description: |-
              The certificate for the user-provided certificate authority in PEM format. Only used if
              customCA == true.
            example: ca-cert.pem
          keystorePasswd:
            type: string
            description: The password used for all Auto-TLS keystores. Only used if
              customCA == true.
            example: keystore.pw.txt
          truststorePasswd:
            type: string
            description: The password used for all Auto-TLS truststores. Only used
              if customCA == true.
            example: truststore.pw.txt
          trustedCaCerts:
            type: string
            description: |-
              A list of CA certificates that will be imported into the Auto-TLS truststore and
              distributed to all hosts.
            example: cacerts.pem
          hostCerts:
            type: array
            description: |-
              A list of HostCertInfo objects, which associate a hostname with the corresponding
              certificate and private key. Only used if customCA == true.
            items:
              $ref: '#/components/schemas/ApiHostCertInfo'
          configureAllServices:
            type: boolean
            description: |-
              Whether to configure all existing services to use Auto-TLS. If false, only MGMT services
              will be configured to use Auto-TLS. Use the cluster-level ConfigureAutoTlsServices
              command to configure Auto-TLS services for a single cluster only.

              All future services will be configured to use Auto-TLS regardless of this setting.
    ApiGenerateHostCertsArguments:
      title: ApiGenerateHostCertsArguments
      description: Arguments to install certificates on a host
      allOf:
      - $ref: '#/components/schemas/BaseApiSshCmdArguments'
      - type: object
    ApiHBaseSnapshot:
      title: ApiHBaseSnapshot
      type: object
      properties:
        snapshotName:
          type: string
          description: Snapshot name.
          example: "null"
        tableName:
          type: string
          description: Name of the table this snapshot is for.
          example: "null"
        creationTime:
          type: string
          description: Snapshot creation time.
          example: "null"
        storage:
          $ref: '#/components/schemas/Storage'
      description: An HBase snapshot descriptor.
      example:
        snapshotName: '...'
        tableName: '...'
        creationTime: '...'
        storage: LOCAL
    ApiHBaseSnapshotError:
      title: ApiHBaseSnapshotError
      type: object
      properties:
        tableName:
          type: string
          description: Name of the table.
          example: "null"
        snapshotName:
          type: string
          description: Name of the snapshot.
          example: "null"
        storage:
          $ref: '#/components/schemas/Storage'
        error:
          type: string
          description: Description of the error.
          example: "null"
      description: A HBase snapshot operation error.
      example:
        tableName: '...'
        snapshotName: '...'
        storage: REMOTE_S3
        error: '...'
    ApiHBaseSnapshotPolicyArguments:
      title: ApiHBaseSnapshotPolicyArguments
      type: object
      properties:
        tableRegExps:
          type: array
          description: |-
            The regular expressions specifying the tables. Tables matching any of them
            will be eligible for snapshot creation.
          example: "null"
          items:
            type: string
        storage:
          $ref: '#/components/schemas/Storage'
      description: HBase specific snapshot policy arguments.
      example:
        tableRegExps:
        - '...'
        - '...'
        storage: LOCAL
    ApiHBaseSnapshotResult:
      title: ApiHBaseSnapshotResult
      type: object
      properties:
        processedTableCount:
          type: number
          description: Number of processed tables.
        processedTables:
          type: array
          description: |-
            The list of processed tables.
            <p/>
            This is only available in the full view.
          example: "null"
          items:
            type: string
        unprocessedTableCount:
          type: number
          description: Number of unprocessed tables.
        unprocessedTables:
          type: array
          description: |-
            The list of unprocessed tables. Note that tables that are currently being
            processed will also be included in this list.
            <p/>
            This is only available in the full view.
          example: "null"
          items:
            type: string
        createdSnapshotCount:
          type: number
          description: Number of snapshots created.
        createdSnapshots:
          type: array
          description: |-
            List of snapshots created.
            <p/>
            This is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHBaseSnapshot'
        deletedSnapshotCount:
          type: number
          description: Number of snapshots deleted.
        deletedSnapshots:
          type: array
          description: |-
            List of snapshots deleted.
            <p/>
            This is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHBaseSnapshot'
        creationErrorCount:
          type: number
          description: Number of errors detected when creating snapshots.
        creationErrors:
          type: array
          description: |-
            List of errors encountered when creating snapshots.
            <p/>
            This is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHBaseSnapshotError'
        deletionErrorCount:
          type: number
          description: Number of errors detected when deleting snapshots.
        deletionErrors:
          type: array
          description: |-
            List of errors encountered when deleting snapshots.
            <p/>
            This is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHBaseSnapshotError'
      description: Detailed information about an HBase snapshot command.
      example:
        processedTableCount: 12345
        processedTables:
        - '...'
        - '...'
        unprocessedTableCount: 12345
        unprocessedTables:
        - '...'
        - '...'
        createdSnapshotCount: 12345
        createdSnapshots:
        - snapshotName: '...'
          tableName: '...'
          creationTime: '...'
          storage: REMOTE_S3
        - snapshotName: '...'
          tableName: '...'
          creationTime: '...'
          storage: REMOTE_S3
        deletedSnapshotCount: 12345
        deletedSnapshots:
        - snapshotName: '...'
          tableName: '...'
          creationTime: '...'
          storage: REMOTE_S3
        - snapshotName: '...'
          tableName: '...'
          creationTime: '...'
          storage: LOCAL
        creationErrorCount: 12345
        creationErrors:
        - tableName: '...'
          snapshotName: '...'
          storage: LOCAL
          error: '...'
        - tableName: '...'
          snapshotName: '...'
          storage: REMOTE_S3
          error: '...'
        deletionErrorCount: 12345
        deletionErrors:
        - tableName: '...'
          snapshotName: '...'
          storage: REMOTE_S3
          error: '...'
        - tableName: '...'
          snapshotName: '...'
          storage: REMOTE_S3
          error: '...'
    ApiHdfsCloudReplicationArguments:
      title: ApiHdfsCloudReplicationArguments
      description: Replication arguments for HDFS.
      allOf:
      - $ref: '#/components/schemas/ApiHdfsReplicationArguments'
      - type: object
        properties:
          sourceAccount:
            type: string
            description: ""
            example: "null"
          destinationAccount:
            type: string
            description: ""
            example: "null"
    ApiHdfsDisableHaArguments:
      title: ApiHdfsDisableHaArguments
      type: object
      properties:
        activeName:
          type: string
          description: Name of the the NameNode to be kept.
          example: "null"
        secondaryName:
          type: string
          description: Name of the SecondaryNamenode to associate with the active
            NameNode.
          example: "null"
        startDependentServices:
          type: boolean
          description: Whether to re-start dependent services. Defaults to true.
        deployClientConfigs:
          type: boolean
          description: Whether to re-deploy client configurations. Defaults to true.
        disableQuorumStorage:
          type: boolean
          description: |-
            Whether to disable Quorum-based Storage. Defaults to false.

            Available since API v2.
      description: Arguments used for the HDFS disable HA command.
      example:
        activeName: '...'
        secondaryName: '...'
        startDependentServices: true
        deployClientConfigs: true
        disableQuorumStorage: true
    ApiHdfsFailoverArguments:
      title: ApiHdfsFailoverArguments
      type: object
      properties:
        nameservice:
          type: string
          description: Nameservice for which to enable automatic failover.
          example: "null"
        zooKeeperService:
          $ref: '#/components/schemas/ApiServiceRef'
        activeFCName:
          type: string
          description: Name of the failover controller to create for the active NameNode.
          example: "null"
        standByFCName:
          type: string
          description: Name of the failover controller to create for the stand-by
            NameNode.
          example: "null"
      description: Arguments used when enabling HDFS automatic failover.
      example:
        nameservice: '...'
        zooKeeperService:
          peerName: '...'
          clusterName: '...'
          serviceName: '...'
          serviceDisplayName: '...'
          serviceType: '...'
        activeFCName: '...'
        standByFCName: '...'
    ApiHdfsHaArguments:
      title: ApiHdfsHaArguments
      type: object
      properties:
        activeName:
          type: string
          description: Name of the active NameNode.
          example: "null"
        activeSharedEditsPath:
          type: string
          description: |-
            Path to the shared edits directory on the active NameNode's host.
            Ignored if Quorum-based Storage is being enabled.
          example: "null"
        standByName:
          type: string
          description: Name of the stand-by Namenode.
          example: "null"
        standBySharedEditsPath:
          type: string
          description: |-
            Path to the shared edits directory on the stand-by NameNode's host.
            Ignored if Quorum-based Storage is being enabled.
          example: "null"
        nameservice:
          type: string
          description: Nameservice that identifies the HA pair.
          example: "null"
        startDependentServices:
          type: boolean
          description: Whether to re-start dependent services. Defaults to true.
        deployClientConfigs:
          type: boolean
          description: Whether to re-deploy client configurations. Defaults to true.
        enableQuorumStorage:
          type: boolean
          description: |-
            This parameter has been deprecated as of CM 5.0, where HA
            is only supported using Quorum-based Storage.
            <p>
            Whether to enable Quorum-based Storage.

            Enabling Quorum-based Storage requires a minimum of three and
            an odd number of JournalNodes to be created and configured
            before enabling HDFS HA.
            <p>
            Available since API v2.
      description: Arguments used for HDFS HA commands.
      example:
        activeName: '...'
        activeSharedEditsPath: '...'
        standByName: '...'
        standBySharedEditsPath: '...'
        nameservice: '...'
        startDependentServices: true
        deployClientConfigs: true
    ApiHdfsReplicationArguments:
      title: ApiHdfsReplicationArguments
      type: object
      properties:
        sourceService:
          $ref: '#/components/schemas/ApiServiceRef'
        sourcePath:
          type: string
          description: The path to replicate.
          example: "null"
        destinationPath:
          type: string
          description: The destination to replicate to.
          example: "null"
        mapreduceServiceName:
          type: string
          description: The mapreduce service to use for the replication job.
          example: "null"
        schedulerPoolName:
          type: string
          description: |-
            Name of the scheduler pool to use when submitting the MapReduce job.
            Currently supports the capacity and fair schedulers. The option is
            ignored if a different scheduler is configured.
          example: "null"
        userName:
          type: string
          description: |-
            The user which will execute the MapReduce job. Required if running with
            Kerberos enabled.
          example: "null"
        sourceUser:
          type: string
          description: |-
            The user which will perform operations on source cluster. Required if
            running with Kerberos enabled.
          example: "null"
        numMaps:
          type: number
          description: The number of mappers to use for the mapreduce replication
            job.
        dryRun:
          type: boolean
          description: Whether to perform a dry run. Defaults to false.
        bandwidthPerMap:
          type: number
          description: |-
            The maximum bandwidth (in MB) per mapper in the mapreduce replication
            job.
        abortOnError:
          type: boolean
          description: Whether to abort on a replication failure. Defaults to false.
        removeMissingFiles:
          type: boolean
          description: |-
            Whether to delete destination files that are missing in source. Defaults
            to false.
        preserveReplicationCount:
          type: boolean
          description: Whether to preserve the HDFS replication count. Defaults to
            false.
        preserveBlockSize:
          type: boolean
          description: Whether to preserve the HDFS block size. Defaults to false.
        preservePermissions:
          type: boolean
          description: |-
            Whether to preserve the HDFS owner, group and permissions. Defaults to
            false.
            Starting from V10, it also preserves ACLs. Defaults to null (no preserve).
            ACLs is preserved if both clusters enable ACL support, and replication
            ignores any ACL related failures.
        logPath:
          type: string
          description: The HDFS path where the replication log files should be written
            to.
          example: "null"
        skipChecksumChecks:
          type: boolean
          description: |-
            Whether to skip checksum based file validation during
            replication. Defaults to false.
        skipListingChecksumChecks:
          type: boolean
          description: |-
            Whether to skip checksum based file comparison during
            replication. Defaults to false.
        skipTrash:
          type: boolean
          description: |-
            Whether to permanently delete destination files that are missing in source.
            Defaults to null.
        replicationStrategy:
          $ref: '#/components/schemas/ReplicationStrategy'
        preserveXAttrs:
          type: boolean
          description: |-
            Whether to preserve XAttrs, default to false
            This is introduced in V10. To preserve XAttrs, both CDH versions
            should be >= 5.2. Replication fails if either cluster does not support
            XAttrs.
        exclusionFilters:
          type: array
          description: |-
            Specify regular expression strings to match full paths of files and directories
            matching source paths and exclude them from the replication. Optional.
            Available since V11.
          example: "null"
          items:
            type: string
        raiseSnapshotDiffFailures:
          type: boolean
          description: |-
            Flag indicating if failures during snapshotDiff should be ignored or not.
            When it is set to false then,
            replication will fallback to full copy listing in case of any error in
            snapshot diff handling and
            it will ignore snapshot delete/rename failures at the end of a replication.
            The flag is by default set to false in distcp tool which means it will ignore
            snapshot diff failures and mark replication as success for snapshot
            delete/rename failures.
            In UI, the flag is set to true by default when source CM Version is greater than 5.14.
        destinationCloudAccount:
          type: string
          description: "The cloud account name which is used in direct hive cloud\
            \ replication, if specified."
          example: "null"
      description: Replication arguments for HDFS.
      example:
        sourceService:
          peerName: '...'
          clusterName: '...'
          serviceName: '...'
          serviceDisplayName: '...'
          serviceType: '...'
        sourcePath: '...'
        destinationPath: '...'
        mapreduceServiceName: '...'
        schedulerPoolName: '...'
        userName: '...'
        sourceUser: '...'
        numMaps: 12345
        dryRun: true
        bandwidthPerMap: 12345
        abortOnError: true
        removeMissingFiles: true
        preserveReplicationCount: true
        preserveBlockSize: true
        preservePermissions: true
        logPath: '...'
        skipChecksumChecks: true
        skipListingChecksumChecks: true
        skipTrash: true
        replicationStrategy: STATIC
        preserveXAttrs: true
        exclusionFilters:
        - '...'
        - '...'
        raiseSnapshotDiffFailures: true
        destinationCloudAccount: '...'
    ApiHdfsReplicationCounter:
      title: ApiHdfsReplicationCounter
      type: object
      properties:
        group:
          type: string
          description: ""
          example: "null"
        name:
          type: string
          description: ""
          example: "null"
        value:
          type: number
          description: ""
      description: A counter in an HDFS replication job.
      example:
        group: '...'
        name: '...'
        value: 12345
    ApiHdfsReplicationResult:
      title: ApiHdfsReplicationResult
      type: object
      properties:
        progress:
          type: number
          description: The file copy progress percentage.
        throughput:
          type: number
          description: The data throughput in KB/s.
        remainingTime:
          type: number
          description: The time remaining for mapper phase (seconds).
        estimatedCompletionTime:
          type: string
          description: The estimated completion time for the mapper phase.
          example: "null"
        counters:
          type: array
          description: |-
            The counters collected from the replication job.
            <p/>
            Starting with API v4, the full list of counters is only available in the
            full view.
          items:
            $ref: '#/components/schemas/ApiHdfsReplicationCounter'
        numFilesDryRun:
          type: number
          description: The number of files found to copy.
        numBytesDryRun:
          type: number
          description: The number of bytes found to copy.
        numFilesExpected:
          type: number
          description: The number of files expected to be copied.
        numBytesExpected:
          type: number
          description: The number of bytes expected to be copied.
        numFilesCopied:
          type: number
          description: The number of files actually copied.
        numBytesCopied:
          type: number
          description: The number of bytes actually copied.
        numFilesSkipped:
          type: number
          description: |-
            The number of files that were unchanged and thus skipped during
            copying.
        numBytesSkipped:
          type: number
          description: The aggregate number of bytes in the skipped files.
        numFilesDeleted:
          type: number
          description: |-
            The number of files deleted since they were present at destination, but
            missing from source.
        numFilesCopyFailed:
          type: number
          description: The number of files for which copy failed.
        numBytesCopyFailed:
          type: number
          description: The aggregate number of bytes in the files for which copy failed.
        setupError:
          type: string
          description: "The error that happened during job setup, if any."
          example: "null"
        jobId:
          type: string
          description: |-
            Read-only. The MapReduce job ID for the replication job.
            Available since API v4.
            <p/>
            This can be used to query information about the replication job from the
            MapReduce server where it was executed. Refer to the "/activities"
            resource for services for further details.
          example: "null"
        jobDetailsUri:
          type: string
          description: |-
            Read-only. The URI (relative to the CM server's root) where to find the
            Activity Monitor page for the job. Available since API v4.
          example: "null"
        dryRun:
          type: boolean
          description: Whether this was a dry run.
        snapshottedDirs:
          type: array
          description: |-
            The list of directories for which snapshots were taken and used as part of
            this replication.
          example: "null"
          items:
            type: string
        runAsUser:
          type: string
          description: |-
            Returns run-as user name.
            Available since API v11.
          example: "null"
        runOnSourceAsUser:
          type: string
          description: |-
            Returns run-as user name for source cluster.
            Available since API v18.
          example: "null"
        failedFiles:
          type: array
          description: |-
            The list of files that failed during replication.
            Available since API v11.
          example: "null"
          items:
            type: string
      description: Detailed information about an HDFS replication job.
      example:
        progress: 12345
        throughput: 12345.0
        remainingTime: 12345
        estimatedCompletionTime: '...'
        counters:
        - group: '...'
          name: '...'
          value: 12345
        - group: '...'
          name: '...'
          value: 12345
        numFilesDryRun: 12345
        numBytesDryRun: 12345
        numFilesExpected: 12345
        numBytesExpected: 12345
        numFilesCopied: 12345
        numBytesCopied: 12345
        numFilesSkipped: 12345
        numBytesSkipped: 12345
        numFilesDeleted: 12345
        numFilesCopyFailed: 12345
        numBytesCopyFailed: 12345
        setupError: '...'
        jobId: '...'
        jobDetailsUri: '...'
        dryRun: true
        snapshottedDirs:
        - '...'
        - '...'
        runAsUser: '...'
        runOnSourceAsUser: '...'
        failedFiles:
        - '...'
        - '...'
    ApiHdfsSnapshot:
      title: ApiHdfsSnapshot
      type: object
      properties:
        path:
          type: string
          description: Snapshotted path.
          example: "null"
        snapshotName:
          type: string
          description: Snapshot name.
          example: "null"
        snapshotPath:
          type: string
          description: |-
            Read-only. Fully qualified path for the snapshot version of "path".
            <p/>
            For example, if a snapshot "s1" is present at "/a/.snapshot/s1, then the
            snapshot path corresponding to "s1" for path "/a/b" will be
            "/a/.snapshot/s1/b".
          example: "null"
        creationTime:
          type: string
          description: Snapshot creation time.
          example: "null"
      description: An HDFS snapshot descriptor.
      example:
        path: '...'
        snapshotName: '...'
        snapshotPath: '...'
        creationTime: '...'
    ApiHdfsSnapshotError:
      title: ApiHdfsSnapshotError
      type: object
      properties:
        path:
          type: string
          description: Path for which the snapshot error occurred.
          example: "null"
        snapshotName:
          type: string
          description: Name of snapshot for which error occurred.
          example: "null"
        error:
          type: string
          description: Description of the error.
          example: "null"
      description: An HDFS snapshot operation error.
      example:
        path: '...'
        snapshotName: '...'
        error: '...'
    ApiHdfsSnapshotPolicyArguments:
      title: ApiHdfsSnapshotPolicyArguments
      type: object
      properties:
        pathPatterns:
          type: array
          description: |-
            The path patterns specifying the paths. Paths matching any of them will be
            eligible for snapshot creation.
            <p/>
            The pattern matching characters that can be specific are those supported
            by HDFS. please see the documentation for HDFS globs for more details.
          example: "null"
          items:
            type: string
      description: HDFS specific snapshot policy arguments.
      example:
        pathPatterns:
        - '...'
        - '...'
    ApiHdfsSnapshotResult:
      title: ApiHdfsSnapshotResult
      type: object
      properties:
        processedPathCount:
          type: number
          description: Number of processed paths.
        processedPaths:
          type: array
          description: |-
            The list of processed paths.
            <p/>
            This is only available in the full view.
          example: "null"
          items:
            type: string
        unprocessedPathCount:
          type: number
          description: Number of unprocessed paths.
        unprocessedPaths:
          type: array
          description: |-
            The list of unprocessed paths. Note that paths that are currently being
            processed will also be included in this list.
            <p/>
            This is only available in the full view.
          example: "null"
          items:
            type: string
        createdSnapshotCount:
          type: number
          description: Number of snapshots created.
        createdSnapshots:
          type: array
          description: |-
            List of snapshots created.
            <p/>
            This is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHdfsSnapshot'
        deletedSnapshotCount:
          type: number
          description: Number of snapshots deleted.
        deletedSnapshots:
          type: array
          description: |-
            List of snapshots deleted.
            <p/>
            This is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHdfsSnapshot'
        creationErrorCount:
          type: number
          description: Number of errors detected when creating snapshots.
        creationErrors:
          type: array
          description: |-
            List of errors encountered when creating snapshots.
            <p/>
            This is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHdfsSnapshotError'
        deletionErrorCount:
          type: number
          description: Number of errors detected when deleting snapshots.
        deletionErrors:
          type: array
          description: |-
            List of errors encountered when deleting snapshots.
            <p/>
            This is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHdfsSnapshotError'
      description: Detailed information about an HDFS snapshot command.
      example:
        processedPathCount: 12345
        processedPaths:
        - '...'
        - '...'
        unprocessedPathCount: 12345
        unprocessedPaths:
        - '...'
        - '...'
        createdSnapshotCount: 12345
        createdSnapshots:
        - path: '...'
          snapshotName: '...'
          snapshotPath: '...'
          creationTime: '...'
        - path: '...'
          snapshotName: '...'
          snapshotPath: '...'
          creationTime: '...'
        deletedSnapshotCount: 12345
        deletedSnapshots:
        - path: '...'
          snapshotName: '...'
          snapshotPath: '...'
          creationTime: '...'
        - path: '...'
          snapshotName: '...'
          snapshotPath: '...'
          creationTime: '...'
        creationErrorCount: 12345
        creationErrors:
        - path: '...'
          snapshotName: '...'
          error: '...'
        - path: '...'
          snapshotName: '...'
          error: '...'
        deletionErrorCount: 12345
        deletionErrors:
        - path: '...'
          snapshotName: '...'
          error: '...'
        - path: '...'
          snapshotName: '...'
          error: '...'
    ApiHdfsUsageReport:
      title: ApiHdfsUsageReport
      description: A generic list.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          lastUpdateTime:
            type: string
            description: |-
              The time when HDFS usage info was last collected. No information
              beyond this time can be provided.
            example: "null"
          items:
            type: array
            description: |-
              A list of per-user usage information at the requested
              time granularity.
            items:
              $ref: '#/components/schemas/ApiHdfsUsageReportRow'
    ApiHdfsUsageReportRow:
      title: ApiHdfsUsageReportRow
      type: object
      properties:
        date:
          type: string
          description: The date of the report row data.
          example: "null"
        user:
          type: string
          description: The user being reported.
          example: "null"
        size:
          type: number
          description: |-
            Total size (in bytes) of the files owned by this user. This does not
            include replication in HDFS.
        rawSize:
          type: number
          description: |-
            Total size (in bytes) of all the replicas of all the files owned by
            this user.
        numFiles:
          type: number
          description: Number of files owned by this user.
      description: ""
      example:
        date: '...'
        user: '...'
        size: 12345
        rawSize: 12345
        numFiles: 12345
    ApiHealthCheck:
      title: ApiHealthCheck
      type: object
      properties:
        name:
          type: string
          description: Unique name of this health check.
          example: "null"
        summary:
          $ref: '#/components/schemas/ApiHealthSummary'
        explanation:
          type: string
          description: |-
            The explanation of this health check.
            Available since v11.
          example: "null"
        suppressed:
          type: boolean
          description: |-
            Whether this health test is suppressed. A suppressed health test is not
            considered when computing an entity's overall health.
            Available since v11.
      description: |-
        Represents a result from a health test performed by Cloudera Manager for an
        entity.
      example:
        name: '...'
        summary: DISABLED
        explanation: '...'
        suppressed: true
    ApiHealthSummary:
      title: ApiHealthSummary
      type: string
      description: Represents of the high-level health status of a subject in the
        cluster.
      enum:
      - DISABLED
      - HISTORY_NOT_AVAILABLE
      - NOT_AVAILABLE
      - GOOD
      - CONCERNING
      - BAD
    ApiHiveCloudReplicationArguments:
      title: ApiHiveCloudReplicationArguments
      description: Replication arguments for Hive services.
      allOf:
      - $ref: '#/components/schemas/ApiHiveReplicationArguments'
      - type: object
        properties:
          sourceAccount:
            type: string
            description: ""
            example: "null"
          destinationAccount:
            type: string
            description: ""
            example: "null"
          cloudRootPath:
            type: string
            description: ""
            example: "null"
          replicationOption:
            $ref: '#/components/schemas/ReplicationOption'
    ApiHiveReplicationArguments:
      title: ApiHiveReplicationArguments
      type: object
      properties:
        sourceService:
          $ref: '#/components/schemas/ApiServiceRef'
        tableFilters:
          type: array
          description: |-
            Filters for tables to include in the replication. Optional. If not
            provided, include all tables in all databases.
          items:
            $ref: '#/components/schemas/ApiHiveTable'
        exportDir:
          type: string
          description: |-
            Directory, in the HDFS service where the target Hive service's data is
            stored, where the export file will be saved. Optional. If not provided,
            Cloudera Manager will pick a directory for storing the data.
          example: "null"
        force:
          type: boolean
          description: Whether to force overwriting of mismatched tables.
        replicateData:
          type: boolean
          description: |-
            Whether to replicate table data stored in HDFS.
            <p/>
            If set, the "hdfsArguments" property must be set to configure the
            HDFS replication job.
        hdfsArguments:
          $ref: '#/components/schemas/ApiHdfsReplicationArguments'
        replicateImpalaMetadata:
          type: boolean
          description: |-
            Whether to replicate the impala metadata. (i.e. the metadata for impala
            UDFs and their corresponding binaries in HDFS).
        runInvalidateMetadata:
          type: boolean
          description: Whether to run invalidate metadata query or not
        dryRun:
          type: boolean
          description: Whether to perform a dry run. Defaults to false.
        numThreads:
          type: number
          description: Number of threads to use in multi-threaded export/import phase
      description: Replication arguments for Hive services.
      example:
        sourceService:
          peerName: '...'
          clusterName: '...'
          serviceName: '...'
          serviceDisplayName: '...'
          serviceType: '...'
        tableFilters:
        - database: '...'
          tableName: '...'
        - database: '...'
          tableName: '...'
        exportDir: '...'
        force: true
        replicateData: true
        hdfsArguments:
          sourceService:
            peerName: '...'
            clusterName: '...'
            serviceName: '...'
            serviceDisplayName: '...'
            serviceType: '...'
          sourcePath: '...'
          destinationPath: '...'
          mapreduceServiceName: '...'
          schedulerPoolName: '...'
          userName: '...'
          sourceUser: '...'
          numMaps: 12345
          dryRun: true
          bandwidthPerMap: 12345
          abortOnError: true
          removeMissingFiles: true
          preserveReplicationCount: true
          preserveBlockSize: true
          preservePermissions: true
          logPath: '...'
          skipChecksumChecks: true
          skipListingChecksumChecks: true
          skipTrash: true
          replicationStrategy: STATIC
          preserveXAttrs: true
          exclusionFilters:
          - '...'
          - '...'
          raiseSnapshotDiffFailures: true
          destinationCloudAccount: '...'
        replicateImpalaMetadata: true
        runInvalidateMetadata: true
        dryRun: true
        numThreads: 12345
    ApiHiveReplicationError:
      title: ApiHiveReplicationError
      type: object
      properties:
        database:
          type: string
          description: Name of the database.
          example: "null"
        tableName:
          type: string
          description: Name of the table.
          example: "null"
        impalaUDF:
          type: string
          description: "UDF signature, includes the UDF name and parameter types."
          example: "null"
        hiveUDF:
          type: string
          description: "Hive UDF signature, includes the UDF name and parameter types."
          example: "null"
        error:
          type: string
          description: Description of the error.
          example: "null"
      description: A Hive replication error.
      example:
        database: '...'
        tableName: '...'
        impalaUDF: '...'
        hiveUDF: '...'
        error: '...'
    ApiHiveReplicationResult:
      title: ApiHiveReplicationResult
      type: object
      properties:
        phase:
          type: string
          description: |-
            Phase the replication is in.
            <p/>
            If the replication job is still active, this will contain a string
            describing the current phase. This will be one of: EXPORT, DATA or
            IMPORT, for, respectively, exporting the source metastore information,
            replicating table data (if configured), and importing metastore
            information in the target.
            <p/>
            This value will not be present if the replication is not active.
            <p/>
            Available since API v4.
          example: "null"
        tableCount:
          type: number
          description: Number of tables that were successfully replicated. Available
            since API v4.
        tables:
          type: array
          description: |-
            The list of tables successfully replicated.
            <p/>
            Since API v4, this is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHiveTable'
        impalaUDFCount:
          type: number
          description: |-
            Number of impala UDFs that were successfully replicated. Available since
            API v6.
        hiveUDFCount:
          type: number
          description: |-
            Number of hive UDFs that were successfully replicated. Available since
            API v14.
        impalaUDFs:
          type: array
          description: |-
            The list of Impala UDFs successfully replicated. Available since API v6
            in the full view.
          items:
            $ref: '#/components/schemas/ApiImpalaUDF'
        hiveUDFs:
          type: array
          description: |-
            The list of Impala UDFs successfully replicated. Available since API v6
            in the full view.
          items:
            $ref: '#/components/schemas/ApiHiveUDF'
        errorCount:
          type: number
          description: |-
            Number of errors detected during replication job.
            Available since API v4.
        errors:
          type: array
          description: |-
            List of errors encountered during replication.
            <p/>
            Since API v4, this is only available in the full view.
          items:
            $ref: '#/components/schemas/ApiHiveReplicationError'
        dataReplicationResult:
          $ref: '#/components/schemas/ApiHdfsReplicationResult'
        dryRun:
          type: boolean
          description: Whether this was a dry run.
        runAsUser:
          type: string
          description: |-
            Name of the of proxy user, if any.
            Available since API v11.
          example: "null"
        runOnSourceAsUser:
          type: string
          description: |-
            Name of the source proxy user, if any.
            Available since API v18.
          example: "null"
        statsAvailable:
          type: boolean
          description: |-
            Whether stats are available to display or not.
            Available since API v19.
        dbProcessed:
          type: number
          description: |-
            Number of Db's Imported/Exported.
            Available since API v19.
        tableProcessed:
          type: number
          description: |-
            Number of Tables Imported/Exported.
            Available since API v19.
        partitionProcessed:
          type: number
          description: |-
            Number of Partitions Imported/Exported.
            Available since API v19.
        functionProcessed:
          type: number
          description: |-
            Number of Functions Imported/Exported.
            Available since API v19.
        indexProcessed:
          type: number
          description: |-
            Number of Indexes Imported/Exported.
            Available since API v19.
        statsProcessed:
          type: number
          description: |-
            Number of Table and Partitions Statistics Imported/Exported.
            Available since API v19.
        dbExpected:
          type: number
          description: |-
            Number of Db's Expected.
            Available since API v19.
        tableExpected:
          type: number
          description: |-
            Number of Tables Expected.
            Available since API v19.
        partitionExpected:
          type: number
          description: |-
            Number of Partitions Expected.
            Available since API v19.
        functionExpected:
          type: number
          description: |-
            Number of Functions Expected.
            Available since API v19.
        indexExpected:
          type: number
          description: |-
            Number of Indexes Expected.
            Available since API v19.
        statsExpected:
          type: number
          description: |-
            Number of Table and Partition Statistics Expected.
            Available since API v19.
      description: Detailed information about a Hive replication job.
      example:
        phase: '...'
        tableCount: 12345
        tables:
        - database: '...'
          tableName: '...'
        - database: '...'
          tableName: '...'
        impalaUDFCount: 12345
        hiveUDFCount: 12345
        impalaUDFs:
        - database: '...'
          signature: '...'
        - database: '...'
          signature: '...'
        hiveUDFs:
        - database: '...'
          signature: '...'
        - database: '...'
          signature: '...'
        errorCount: 12345
        errors:
        - database: '...'
          tableName: '...'
          impalaUDF: '...'
          hiveUDF: '...'
          error: '...'
        - database: '...'
          tableName: '...'
          impalaUDF: '...'
          hiveUDF: '...'
          error: '...'
        dataReplicationResult:
          progress: 12345
          throughput: 12345.0
          remainingTime: 12345
          estimatedCompletionTime: '...'
          counters:
          - group: '...'
            name: '...'
            value: 12345
          - group: '...'
            name: '...'
            value: 12345
          numFilesDryRun: 12345
          numBytesDryRun: 12345
          numFilesExpected: 12345
          numBytesExpected: 12345
          numFilesCopied: 12345
          numBytesCopied: 12345
          numFilesSkipped: 12345
          numBytesSkipped: 12345
          numFilesDeleted: 12345
          numFilesCopyFailed: 12345
          numBytesCopyFailed: 12345
          setupError: '...'
          jobId: '...'
          jobDetailsUri: '...'
          dryRun: true
          snapshottedDirs:
          - '...'
          - '...'
          runAsUser: '...'
          runOnSourceAsUser: '...'
          failedFiles:
          - '...'
          - '...'
        dryRun: true
        runAsUser: '...'
        runOnSourceAsUser: '...'
        statsAvailable: true
        dbProcessed: 12345
        tableProcessed: 12345
        partitionProcessed: 12345
        functionProcessed: 12345
        indexProcessed: 12345
        statsProcessed: 12345
        dbExpected: 12345
        tableExpected: 12345
        partitionExpected: 12345
        functionExpected: 12345
        indexExpected: 12345
        statsExpected: 12345
    ApiHiveTable:
      title: ApiHiveTable
      type: object
      properties:
        database:
          type: string
          description: Name of the database to which this table belongs.
          example: "null"
        tableName:
          type: string
          description: |-
            Name of the table. When used as input for a replication job, this can
            be a regular expression that matches several table names. Refer to the
            Hive documentation for the syntax of regular expressions.
          example: "null"
      description: A Hive table identifier.
      example:
        database: '...'
        tableName: '...'
    ApiHiveUDF:
      title: ApiHiveUDF
      type: object
      properties:
        database:
          type: string
          description: Name of the database to which this UDF belongs.
          example: "null"
        signature:
          type: string
          description: "UDF signature, includes the UDF name and parameter types."
          example: "null"
      description: An hive UDF identifier.
      example:
        database: '...'
        signature: '...'
    ApiHost:
      title: ApiHost
      type: object
      properties:
        hostId:
          type: string
          description: |-
            A unique host identifier.
            This is not the same as the hostname (FQDN). It is a distinct
            value that remains the same even if the hostname changes.
          example: "null"
        ipAddress:
          type: string
          description: The host IP address. This field is not mutable after the initial
            creation.
          example: "null"
        hostname:
          type: string
          description: The hostname. This field is not mutable after the initial creation.
          example: "null"
        rackId:
          type: string
          description: The rack ID for this host.
          example: "null"
        lastHeartbeat:
          type: string
          description: |-
            Readonly. Requires "full" view.
            When the host agent sent the last heartbeat.
          example: "null"
        roleRefs:
          type: array
          description: |-
            Readonly. Requires "full" view.
            The list of roles assigned to this host.
          items:
            $ref: '#/components/schemas/ApiRoleRef'
        healthSummary:
          $ref: '#/components/schemas/ApiHealthSummary'
        healthChecks:
          type: array
          description: |-
            Readonly. Requires "full" view.
            The list of health checks performed on the host, with their results.
          items:
            $ref: '#/components/schemas/ApiHealthCheck'
        hostUrl:
          type: string
          description: |-
            Readonly.
            A URL into the Cloudera Manager web UI for this specific host.
          example: "null"
        maintenanceMode:
          type: boolean
          description: |-
            Readonly. Whether the host is in maintenance mode.
            Available since API v2.
        commissionState:
          $ref: '#/components/schemas/ApiCommissionState'
        maintenanceOwners:
          type: array
          description: |-
            Readonly. The list of objects that trigger this host to be in
            maintenance mode.
            Available since API v2.
          example: "null"
          items:
            $ref: '#/components/schemas/ApiEntityType'
        config:
          $ref: '#/components/schemas/ApiConfigList'
        numCores:
          type: number
          description: |-
            Readonly. The number of logical CPU cores on this host. Only populated
            after the host has heartbeated to the server.
            Available since API v4.
        numPhysicalCores:
          type: number
          description: |-
            Readonly. The number of physical CPU cores on this host. Only populated
            after the host has heartbeated to the server.
            Available since API v9.
        totalPhysMemBytes:
          type: number
          description: |-
            Readonly. The amount of physical RAM on this host, in bytes. Only
            populated after the host has heartbeated to the server.
            Available since API v4.
        entityStatus:
          $ref: '#/components/schemas/ApiEntityStatus'
        clusterRef:
          $ref: '#/components/schemas/ApiClusterRef'
      description: This is the model for a host in the system.
      example:
        hostId: '...'
        ipAddress: '...'
        hostname: '...'
        rackId: '...'
        lastHeartbeat: '...'
        roleRefs:
        - clusterName: '...'
          serviceName: '...'
          roleName: '...'
        - clusterName: '...'
          serviceName: '...'
          roleName: '...'
        healthSummary: GOOD
        healthChecks:
        - name: '...'
          summary: GOOD
          explanation: '...'
          suppressed: true
        - name: '...'
          summary: GOOD
          explanation: '...'
          suppressed: true
        hostUrl: '...'
        maintenanceMode: true
        commissionState: COMMISSIONED
        maintenanceOwners:
        - HOST
        - HOST
        config:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
        numCores: 12345
        numPhysicalCores: 12345
        totalPhysMemBytes: 12345
        entityStatus: CONCERNING_HEALTH
        clusterRef:
          clusterName: '...'
          displayName: '...'
    ApiHostCertInfo:
      title: ApiHostCertInfo
      type: object
      properties:
        hostname:
          type: string
          description: The FQDN of a host in the deployment.
          example: "null"
        certificate:
          type: string
          description: The certificate for this host in PEM format.
          example: host-cert.pem
        key:
          type: string
          description: The private key for this host in PEM format.
          example: host-key.pem
      description: Associates a hostname with its corresponding certificate and private
        key
      example:
        hostname: '...'
        certificate: host-cert.pem
        key: host-key.pem
    ApiHostInstallArguments:
      title: ApiHostInstallArguments
      type: object
      properties:
        hostNames:
          type: array
          description: |-
            List of hosts to configure for use with Cloudera Manager.
            A host may be specified by a hostname (FQDN) or an
            IP address.
          example: "null"
          items:
            type: string
        sshPort:
          type: number
          description: "SSH port. If unset, defaults to 22."
        userName:
          type: string
          description: |-
            The username used to authenticate with the hosts.
            Root access to your hosts is required to install Cloudera packages.
            The installer will connect to your hosts via SSH and log in either
            directly as root or as another user with password-less sudo
            privileges to become root.
          example: "null"
        password:
          type: string
          description: |-
            The password used to authenticate with the hosts.
            Specify either this or a private key.
            For password-less login, use an empty string as
            password.
          example: "null"
        privateKey:
          type: string
          description: |-
            The private key to authenticate with the hosts.
            Specify either this or a password.
            <br>
            The private key, if specified, needs to be a
            standard PEM-encoded key as a single string, with all line breaks
            replaced with the line-feed control character '\n'.
            <br>
            A value will typically look like the following string:
            <br>
            -----BEGIN RSA PRIVATE KEY-----\n[base-64 encoded key]\n-----END RSA PRIVATE KEY-----
            <br>
          example: "null"
        passphrase:
          type: string
          description: |-
            The passphrase associated with the private key
            used to authenticate with the hosts (optional).
          example: "null"
        parallelInstallCount:
          type: number
          description: |-
            Number of simultaneous installations.
            Defaults to 10. Running a large number of
            installations at once can consume large
            amounts of network bandwidth and other system
            resources.
        cmRepoUrl:
          type: string
          description: |-
            The Cloudera Manager repository URL to use (optional).
            Example for SLES, Redhat or Debian based distributions:
            https://archive.cloudera.com/cm6/6.0.0
          example: "null"
        gpgKeyCustomUrl:
          type: string
          description: |-
            The Cloudera Manager public GPG key (optional).
            Example for SLES, Redhat or other RPM based distributions:
            https://archive.cloudera.com/cm5/redhat/5/x86_64/cm/RPM-GPG-KEY-cloudera
            Example for Ubuntu or other Debian based distributions:
            https://archive.cloudera.com/cm5/ubuntu/lucid/amd64/cm/archive.key
          example: "null"
        javaInstallStrategy:
          type: string
          description: |-
            Added in v8: Strategy to use for JDK installation. Valid values are
            1. AUTO (default): Cloudera Manager will install the JDK versions that are
            required when the "AUTO" option is selected.
            Cloudera Manager may overwrite any of the existing JDK installations.
            2. NONE: Cloudera Manager will not install any JDK when "NONE" option is selected.
            It should be used if an existing JDK installation has to be used.
          example: "null"
        unlimitedJCE:
          type: boolean
          description: |-
            Added in v8: Flag for unlimited strength JCE policy files installation
            If unset, defaults to false
        gpgKeyOverrideBundle:
          type: string
          description: |-
            The Cloudera Manager public GPG key (optional). This points to the actual bundle contents
            and not a URL.
          example: "null"
      description: |-
        Arguments to perform installation on one
        or more hosts
      example:
        hostNames:
        - '...'
        - '...'
        sshPort: 12345
        userName: '...'
        password: '...'
        privateKey: '...'
        passphrase: '...'
        parallelInstallCount: 12345
        cmRepoUrl: '...'
        gpgKeyCustomUrl: '...'
        javaInstallStrategy: '...'
        unlimitedJCE: true
        gpgKeyOverrideBundle: '...'
    ApiHostList:
      title: ApiHostList
      description: A list of ApiHost objects
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiHost'
    ApiHostNameList:
      title: ApiHostNameList
      description: A list of host names.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: List of host names.
            example: "null"
            items:
              type: string
    ApiHostRef:
      title: ApiHostRef
      type: object
      properties:
        hostId:
          type: string
          description: The unique host ID.
          example: "null"
        hostname:
          type: string
          description: The hostname. Available since v31.
          example: "null"
      description: A reference to a host.
      example:
        hostId: '...'
        hostname: '...'
    ApiHostRefList:
      title: ApiHostRefList
      description: A list of host references.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiHostRef'
    ApiHostTemplate:
      title: ApiHostTemplate
      type: object
      properties:
        name:
          type: string
          description: The name of the host template. Unique across clusters.
          example: "null"
        clusterRef:
          $ref: '#/components/schemas/ApiClusterRef'
        roleConfigGroupRefs:
          type: array
          description: The role config groups belonging to this host tempalte.
          items:
            $ref: '#/components/schemas/ApiRoleConfigGroupRef'
      description: |-
        A host template belongs to a cluster and contains a set of role config
        groups for slave roles (such as DataNodes and TaskTrackers) from services
        in the cluster. At most one role config group per role type can be present
        in a host template. Host templates can be applied to fresh hosts (those with
        no roles on them) in order to create a role for each of the role groups on
        each host.
      example:
        name: '...'
        clusterRef:
          clusterName: '...'
          displayName: '...'
        roleConfigGroupRefs:
        - roleConfigGroupName: '...'
        - roleConfigGroupName: '...'
    ApiHostTemplateList:
      title: ApiHostTemplateList
      description: A list of host templates.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiHostTemplate'
    ApiHostsPerfInspectorArgs:
      title: ApiHostsPerfInspectorArgs
      type: object
      properties:
        sourceHostList:
          $ref: '#/components/schemas/ApiHostNameList'
        targetHostList:
          $ref: '#/components/schemas/ApiHostNameList'
        pingArgs:
          $ref: '#/components/schemas/ApiPerfInspectorPingArgs'
      description: |-
        Arguments used for the Cloudera Manager level performance inspector.
        Network diagnostics will be run from every host in sourceHostList to every host
        in targetHostList.
      example:
        sourceHostList:
          items:
          - '...'
          - '...'
        targetHostList:
          items:
          - '...'
          - '...'
        pingArgs:
          pingTimeoutSecs: 10
          pingCount: 10
          pingPacketSizeBytes: 56
    ApiImpalaCancelResponse:
      title: ApiImpalaCancelResponse
      type: object
      properties:
        warning:
          type: string
          description: The warning response. If there was no warning this will be
            null.
          example: "null"
      description: The response from an Impala cancel query response.
      example:
        warning: '...'
    ApiImpalaQuery:
      title: ApiImpalaQuery
      type: object
      properties:
        queryId:
          type: string
          description: The query id.
          example: "null"
        statement:
          type: string
          description: The SQL statement for the query.
          example: "null"
        queryType:
          type: string
          description: |-
            The query type. The possible values are: DML, DDL, QUERY and UNKNOWN.
            See the Impala documentation for more details.
          example: "null"
        queryState:
          type: string
          description: |-
            The query state. The possible values are: CREATED, INITIALIZED, COMPILED,
            RUNNING, FINISHED, EXCEPTION, and UNKNOWN.
            See the Impala documentation for more details.
          example: "null"
        startTime:
          type: string
          description: The time the query was issued.
          example: "null"
        endTime:
          type: string
          description: |-
            The time the query finished. If the query hasn't finished then this
            will return null.
          example: "null"
        rowsProduced:
          type: number
          description: |-
            The number of rows produced by the query. If the query hasn't completed
            this will return null.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: A map of additional query attributes which is generated by
            Cloudera Manager.
          example: "null"
        user:
          type: string
          description: The user who issued this query.
          example: "null"
        coordinator:
          $ref: '#/components/schemas/ApiHostRef'
        detailsAvailable:
          type: boolean
          description: |-
            Whether we have a detailed runtime profile available for the query.
            This profile is available at the endpoint /queries/{QUERY_ID}.
        database:
          type: string
          description: The database on which this query was issued.
          example: "null"
        durationMillis:
          type: number
          description: |-
            The duration of the query in milliseconds. If the query hasn't completed
            then this will return null.
      description: Represents an Impala Query.
      example:
        queryId: '...'
        statement: '...'
        queryType: '...'
        queryState: '...'
        startTime: '...'
        endTime: '...'
        rowsProduced: 12345
        attributes:
          property1: '...'
          property2: '...'
        user: '...'
        coordinator:
          hostId: '...'
          hostname: '...'
        detailsAvailable: true
        database: '...'
        durationMillis: 12345
    ApiImpalaQueryAttribute:
      title: ApiImpalaQueryAttribute
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the attribute. This name can be used in filters, for example
            'user' could be used in the filter 'user = root'.
          example: "null"
        type:
          type: string
          description: |-
            The type of the attribute. Valid types are STRING, NUMBER, BOOLEAN, BYTES,
            MILLISECONDS, BYTES_PER_SECOND, BYTE_SECONDS.
          example: "null"
        displayName:
          type: string
          description: The display name for the attribute.
          example: "null"
        supportsHistograms:
          type: boolean
          description: |-
            Whether the Service Monitor can generate a histogram of the distribution
            of the attribute across queries.
        description:
          type: string
          description: The description of the attribute.
          example: "null"
      description: Metadata about an Impala query attribute.
      example:
        name: '...'
        type: '...'
        displayName: '...'
        supportsHistograms: true
        description: '...'
    ApiImpalaQueryAttributeList:
      title: ApiImpalaQueryAttributeList
      description: The list of all the attributes that are applicable to Impala queries.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiImpalaQueryAttribute'
    ApiImpalaQueryDetailsResponse:
      title: ApiImpalaQueryDetailsResponse
      type: object
      properties:
        details:
          type: string
          description: |-
            The details for this query. Two formats are supported:
            <ul>
            <li>
            'text': this is a text based, human readable representation of the
            Impala runtime profile.
            </li>
            <li>
            'thrift_encoded': this a compact-thrift, base64 encoded representation
            of the impala RuntimeProfile.thrift object. See the Impala documentation
            for more details.
            </li>
            </ul>
          example: "null"
      description: A query details response.
      example:
        details: '...'
    ApiImpalaQueryResponse:
      title: ApiImpalaQueryResponse
      type: object
      properties:
        queries:
          type: array
          description: The list of queries for this response.
          items:
            $ref: '#/components/schemas/ApiImpalaQuery'
        warnings:
          type: array
          description: This list of warnings for this response.
          example: "null"
          items:
            type: string
      description: The response contains a list of queries and warnings.
      example:
        queries:
        - queryId: '...'
          statement: '...'
          queryType: '...'
          queryState: '...'
          startTime: '...'
          endTime: '...'
          rowsProduced: 12345
          attributes:
            property1: '...'
            property2: '...'
          user: '...'
          coordinator:
            hostId: '...'
            hostname: '...'
          detailsAvailable: true
          database: '...'
          durationMillis: 12345
        - queryId: '...'
          statement: '...'
          queryType: '...'
          queryState: '...'
          startTime: '...'
          endTime: '...'
          rowsProduced: 12345
          attributes:
            property1: '...'
            property2: '...'
          user: '...'
          coordinator:
            hostId: '...'
            hostname: '...'
          detailsAvailable: true
          database: '...'
          durationMillis: 12345
        warnings:
        - '...'
        - '...'
    ApiImpalaRoleDiagnosticsArgs:
      title: ApiImpalaRoleDiagnosticsArgs
      type: object
      properties:
        ticketNumber:
          type: string
          description: The support ticket number to attach to this data collection.
          example: "null"
        comments:
          type: string
          description: Comments to include with this data collection.
          example: "null"
        stacksCount:
          type: number
          description: ""
        stacksIntervalSeconds:
          type: number
          description: Interval between stack collections.
        jmap:
          type: boolean
          description: ""
        gcore:
          type: boolean
          description: ""
        minidumpsCount:
          type: number
          description: ""
        minidumpsIntervalSeconds:
          type: number
          description: ""
        phoneHome:
          type: boolean
          description: ""
      description: Arguments used for Rolling Restart commands.
      example:
        ticketNumber: '...'
        comments: '...'
        stacksCount: 12345
        stacksIntervalSeconds: 12345
        jmap: true
        gcore: true
        minidumpsCount: 12345
        minidumpsIntervalSeconds: 12345
        phoneHome: true
    ApiImpalaTenantUtilization:
      title: ApiImpalaTenantUtilization
      type: object
      properties:
        tenantName:
          type: string
          description: Name of the tenant.
          example: "null"
        totalQueries:
          type: number
          description: Total number of queries submitted to Impala.
        successfulQueries:
          type: number
          description: Number of queries that finished successfully.
        oomQueries:
          type: number
          description: Number of queries that failed due to insufficient memory.
        timeOutQueries:
          type: number
          description: Number of queries that timed out while waiting for resources
            in a pool.
        rejectedQueries:
          type: number
          description: Number of queries that were rejected by Impala because the
            pool was full.
        avgWaitTimeInQueue:
          type: number
          description: "Average time, in milliseconds, spent by a query in an Impala\
            \ pool while waiting for resources."
        peakAllocationTimestampMS:
          type: number
          description: The time when Impala reserved the maximum amount of memory
            for queries.
        maxAllocatedMemory:
          type: number
          description: The maximum memory (in bytes) that was reserved by Impala for
            executing queries.
        maxAllocatedMemoryPercentage:
          type: number
          description: The maximum percentage of memory that was reserved by Impala
            for executing queries.
        utilizedAtMaxAllocated:
          type: number
          description: |-
            The amount of memory (in bytes) used by Impala for running queries at the
            time when maximum memory was reserved.
        utilizedAtMaxAllocatedPercentage:
          type: number
          description: |-
            The percentage of memory used by Impala for running queries at the
            time when maximum memory was reserved.
        peakUsageTimestampMS:
          type: number
          description: The time when Impala used the maximum amount of memory for
            queries.
        maxUtilizedMemory:
          type: number
          description: The maximum memory (in bytes) that was used by Impala for executing
            queries.
        maxUtilizedMemoryPercentage:
          type: number
          description: The maximum percentage of memory that was used by Impala for
            executing queries.
        allocatedAtMaxUtilized:
          type: number
          description: |-
            The amount of memory (in bytes) reserved by Impala at the time when it was using the
            maximum memory for executing queries.
        allocatedAtMaxUtilizedPercentage:
          type: number
          description: |-
            The percentage of memory reserved by Impala at the time when it was using the
            maximum memory for executing queries.
        distributionUtilizedByImpalaDaemon:
          $ref: '#/components/schemas/ApiImpalaUtilizationHistogram'
        distributionAllocatedByImpalaDaemon:
          $ref: '#/components/schemas/ApiImpalaUtilizationHistogram'
        avgSpilledMemory:
          type: number
          description: Average spill per query.
        maxSpilledMemory:
          type: number
          description: Maximum spill per query.
      description: Utilization report information of a tenant of Impala application.
      example:
        tenantName: '...'
        totalQueries: 12345.0
        successfulQueries: 12345.0
        oomQueries: 12345.0
        timeOutQueries: 12345.0
        rejectedQueries: 12345.0
        avgWaitTimeInQueue: 12345.0
        peakAllocationTimestampMS: 12345
        maxAllocatedMemory: 12345.0
        maxAllocatedMemoryPercentage: 12345.0
        utilizedAtMaxAllocated: 12345.0
        utilizedAtMaxAllocatedPercentage: 12345.0
        peakUsageTimestampMS: 12345
        maxUtilizedMemory: 12345.0
        maxUtilizedMemoryPercentage: 12345.0
        allocatedAtMaxUtilized: 12345.0
        allocatedAtMaxUtilizedPercentage: 12345.0
        distributionUtilizedByImpalaDaemon:
          bins:
            items:
            - {}
            - {}
        distributionAllocatedByImpalaDaemon:
          bins:
            items:
            - {}
            - {}
        avgSpilledMemory: 12345.0
        maxSpilledMemory: 12345.0
    ApiImpalaTenantUtilizationList:
      title: ApiImpalaTenantUtilizationList
      description: A list of impala tenant utilization reports.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiImpalaTenantUtilization'
    ApiImpalaUDF:
      title: ApiImpalaUDF
      type: object
      properties:
        database:
          type: string
          description: Name of the database to which this UDF belongs.
          example: "null"
        signature:
          type: string
          description: "UDF signature, includes the UDF name and parameter types."
          example: "null"
      description: An impala UDF identifier.
      example:
        database: '...'
        signature: '...'
    ApiImpalaUtilization:
      title: ApiImpalaUtilization
      type: object
      properties:
        totalQueries:
          type: number
          description: Total number of queries submitted to Impala.
        successfulQueries:
          type: number
          description: Number of queries that finished successfully.
        oomQueries:
          type: number
          description: Number of queries that failed due to insufficient memory.
        timeOutQueries:
          type: number
          description: Number of queries that timed out while waiting for resources
            in a pool.
        rejectedQueries:
          type: number
          description: Number of queries that were rejected by Impala because the
            pool was full.
        successfulQueriesPercentage:
          type: number
          description: Percentage of queries that finished successfully.
        oomQueriesPercentage:
          type: number
          description: Percentage of queries that failed due to insufficient memory.
        timeOutQueriesPercentage:
          type: number
          description: Percentage of queries that timed out while waiting for resources
            in a pool.
        rejectedQueriesPercentage:
          type: number
          description: Percentage of queries that were rejected by Impala because
            the pool was full.
        avgWaitTimeInQueue:
          type: number
          description: "Average time, in milliseconds, spent by a query in an Impala\
            \ pool while waiting for resources."
        peakAllocationTimestampMS:
          type: number
          description: The time when Impala reserved the maximum amount of memory
            for queries.
        maxAllocatedMemory:
          type: number
          description: The maximum memory (in bytes) that was reserved by Impala for
            executing queries.
        maxAllocatedMemoryPercentage:
          type: number
          description: The maximum percentage of memory that was reserved by Impala
            for executing queries.
        utilizedAtMaxAllocated:
          type: number
          description: |-
            The amount of memory (in bytes) used by Impala for running queries at the
            time when maximum memory was reserved.
        utilizedAtMaxAllocatedPercentage:
          type: number
          description: |-
            The percentage of memory used by Impala for running queries at the
            time when maximum memory was reserved.
        peakUsageTimestampMS:
          type: number
          description: The time when Impala used the maximum amount of memory for
            queries.
        maxUtilizedMemory:
          type: number
          description: The maximum memory (in bytes) that was used by Impala for executing
            queries.
        maxUtilizedMemoryPercentage:
          type: number
          description: The maximum percentage of memory that was used by Impala for
            executing queries.
        allocatedAtMaxUtilized:
          type: number
          description: |-
            The amount of memory (in bytes) reserved by Impala at the time when it was using the
            maximum memory for executing queries.
        allocatedAtMaxUtilizedPercentage:
          type: number
          description: |-
            The percentage of memory reserved by Impala at the time when it was using the
            maximum memory for executing queries.
        distributionUtilizedByImpalaDaemon:
          $ref: '#/components/schemas/ApiImpalaUtilizationHistogram'
        distributionAllocatedByImpalaDaemon:
          $ref: '#/components/schemas/ApiImpalaUtilizationHistogram'
        tenantUtilizations:
          $ref: '#/components/schemas/ApiImpalaTenantUtilizationList'
        errorMessage:
          type: string
          description: error message of utilization report.
          example: "null"
      description: Utilization report information of a Impala application service.
      example:
        totalQueries: 12345.0
        successfulQueries: 12345.0
        oomQueries: 12345.0
        timeOutQueries: 12345.0
        rejectedQueries: 12345.0
        successfulQueriesPercentage: 12345.0
        oomQueriesPercentage: 12345.0
        timeOutQueriesPercentage: 12345.0
        rejectedQueriesPercentage: 12345.0
        avgWaitTimeInQueue: 12345.0
        peakAllocationTimestampMS: 12345
        maxAllocatedMemory: 12345.0
        maxAllocatedMemoryPercentage: 12345.0
        utilizedAtMaxAllocated: 12345.0
        utilizedAtMaxAllocatedPercentage: 12345.0
        peakUsageTimestampMS: 12345
        maxUtilizedMemory: 12345.0
        maxUtilizedMemoryPercentage: 12345.0
        allocatedAtMaxUtilized: 12345.0
        allocatedAtMaxUtilizedPercentage: 12345.0
        distributionUtilizedByImpalaDaemon:
          bins:
            items:
            - {}
            - {}
        distributionAllocatedByImpalaDaemon:
          bins:
            items:
            - {}
            - {}
        tenantUtilizations:
          items:
          - tenantName: '...'
            totalQueries: 12345.0
            successfulQueries: 12345.0
            oomQueries: 12345.0
            timeOutQueries: 12345.0
            rejectedQueries: 12345.0
            avgWaitTimeInQueue: 12345.0
            peakAllocationTimestampMS: 12345
            maxAllocatedMemory: 12345.0
            maxAllocatedMemoryPercentage: 12345.0
            utilizedAtMaxAllocated: 12345.0
            utilizedAtMaxAllocatedPercentage: 12345.0
            peakUsageTimestampMS: 12345
            maxUtilizedMemory: 12345.0
            maxUtilizedMemoryPercentage: 12345.0
            allocatedAtMaxUtilized: 12345.0
            allocatedAtMaxUtilizedPercentage: 12345.0
            distributionUtilizedByImpalaDaemon: {}
            distributionAllocatedByImpalaDaemon: {}
            avgSpilledMemory: 12345.0
            maxSpilledMemory: 12345.0
          - tenantName: '...'
            totalQueries: 12345.0
            successfulQueries: 12345.0
            oomQueries: 12345.0
            timeOutQueries: 12345.0
            rejectedQueries: 12345.0
            avgWaitTimeInQueue: 12345.0
            peakAllocationTimestampMS: 12345
            maxAllocatedMemory: 12345.0
            maxAllocatedMemoryPercentage: 12345.0
            utilizedAtMaxAllocated: 12345.0
            utilizedAtMaxAllocatedPercentage: 12345.0
            peakUsageTimestampMS: 12345
            maxUtilizedMemory: 12345.0
            maxUtilizedMemoryPercentage: 12345.0
            allocatedAtMaxUtilized: 12345.0
            allocatedAtMaxUtilizedPercentage: 12345.0
            distributionUtilizedByImpalaDaemon: {}
            distributionAllocatedByImpalaDaemon: {}
            avgSpilledMemory: 12345.0
            maxSpilledMemory: 12345.0
        errorMessage: '...'
    ApiImpalaUtilizationHistogram:
      title: ApiImpalaUtilizationHistogram
      type: object
      properties:
        bins:
          $ref: '#/components/schemas/ApiImpalaUtilizationHistogramBinList'
      description: Histogram of Impala utilization.
      example:
        bins:
          items:
          - startPointInclusive: 12345.0
            endPointExclusive: 12345.0
            numberOfImpalaDaemons: 12345
          - startPointInclusive: 12345.0
            endPointExclusive: 12345.0
            numberOfImpalaDaemons: 12345
    ApiImpalaUtilizationHistogramBin:
      title: ApiImpalaUtilizationHistogramBin
      type: object
      properties:
        startPointInclusive:
          type: number
          description: start point (inclusive) of the histogram bin.
        endPointExclusive:
          type: number
          description: end point (exclusive) of the histogram bin.
        numberOfImpalaDaemons:
          type: number
          description: Number of Impala daemons.
      description: Histogram bin of Impala utilization.
      example:
        startPointInclusive: 12345.0
        endPointExclusive: 12345.0
        numberOfImpalaDaemons: 12345
    ApiImpalaUtilizationHistogramBinList:
      title: ApiImpalaUtilizationHistogramBinList
      description: A generic list.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiImpalaUtilizationHistogramBin'
    ApiJournalNodeArguments:
      title: ApiJournalNodeArguments
      type: object
      properties:
        jnName:
          type: string
          description: Name of new JournalNode to be created. (Optional)
          example: "null"
        jnHostId:
          type: string
          description: ID of the host where the new JournalNode will be created.
          example: "null"
        jnEditsDir:
          type: string
          description: |-
            Path to the JournalNode edits directory. Need not be specified
            if it is already set at RoleConfigGroup level.
          example: "null"
      description: |-
        Arguments used as part of ApiEnableNnHaArguments to
        specify JournalNodes.
      example:
        jnName: '...'
        jnHostId: '...'
        jnEditsDir: '...'
    ApiKerberosInfo:
      title: ApiKerberosInfo
      type: object
      properties:
        kerberized:
          type: boolean
          description: ""
        kdcType:
          type: string
          description: ""
          example: "null"
        kerberosRealm:
          type: string
          description: ""
          example: "null"
        kdcHost:
          type: string
          description: ""
          example: "null"
        adminHost:
          type: string
          description: ""
          example: "null"
        domain:
          type: array
          description: ""
          example: "null"
          items:
            type: string
      description: Kerberos information of a Cluster or Cloudera Manager.
      example:
        kerberized: true
        kdcType: '...'
        kerberosRealm: '...'
        kdcHost: '...'
        adminHost: '...'
        domain:
        - '...'
        - '...'
    ApiLicense:
      title: ApiLicense
      type: object
      properties:
        owner:
          type: string
          description: The owner (organization name) of the license.
          example: "null"
        uuid:
          type: string
          description: A UUID of this license.
          example: "null"
        expiration:
          type: string
          description: The expiration date.
          example: "null"
        features:
          type: array
          description: Returns the list of available features as per the license
          items:
            $ref: '#/components/schemas/ApiLicenseFeature'
        deactivationDate:
          type: string
          description: The deactivation date.
          example: "null"
        startDate:
          type: string
          description: The start date.
          example: "null"
      description: Information about the Cloudera Manager license.
      example:
        owner: '...'
        uuid: '...'
        expiration: '...'
        features:
        - name: '...'
          enabled: true
          description: '...'
        - name: '...'
          enabled: true
          description: '...'
        deactivationDate: '...'
        startDate: '...'
    ApiLicenseFeature:
      title: ApiLicenseFeature
      type: object
      properties:
        name:
          type: string
          description: Returns feature name
          example: "null"
        enabled:
          type: boolean
          description: ""
        description:
          type: string
          description: Returns I18n description of the feature.
          example: "null"
      description: Information about the Cloudera Manager license feature details.
      example:
        name: '...'
        enabled: true
        description: '...'
    ApiLicensedFeatureUsage:
      title: ApiLicensedFeatureUsage
      type: object
      properties:
        totals:
          type: object
          additionalProperties:
            type: number
          description: Map from named features to the total number of nodes using
            those features.
        clusters:
          type: object
          additionalProperties:
            type: object
            properties: {}
          description: |-
            Map from clusters to maps of named features to the number of nodes in the
            cluster using those features.
      description: |-
        Information about the number of nodes using which product features.
        <p>
        Usage information is provided for individual clusters, as well as totals
        across all clusters.
      example:
        totals:
          property1: 12345
          property2: 12345
        clusters:
          property1: {}
          property2: {}
    ApiListBase:
      title: ApiListBase
      type: object
      description: A generic list.
      example: {}
    ApiMapEntry:
      title: ApiMapEntry
      type: object
      properties:
        key:
          type: string
          description: ""
          example: "null"
        value:
          type: string
          description: ""
          example: "null"
      description: |-
        Models a map entry, with a key and a value. By forming a list of these
        entries you can have the equivalent of Map&lt;String, String&gt; (since
        JAX-B doesn't support maps).
      example:
        key: '...'
        value: '...'
    ApiMetric:
      title: ApiMetric
      type: object
      properties:
        name:
          type: string
          description: Name of the metric.
          example: "null"
        context:
          type: string
          description: Context the metric is associated with.
          example: "null"
        unit:
          type: string
          description: Unit of the metric values.
          example: "null"
        data:
          type: array
          description: List of readings retrieved from the monitors.
          items:
            $ref: '#/components/schemas/ApiMetricData'
        displayName:
          type: string
          description: Requires "full" view. User-friendly display name for the metric.
          example: "null"
        description:
          type: string
          description: Requires "full" view. Description of the metric.
          example: "null"
      description: |-
        A metric represents a specific metric monitored by the Cloudera Management
        Services, and a list of values matching a user query.
        <p>
        These fields are available only in the "full" view:
        <ul>
        <li>displayName</li>
        <li>description</li>
        </ul>
      example:
        name: '...'
        context: '...'
        unit: '...'
        data:
        - timestamp: '...'
          value: 12345.0
        - timestamp: '...'
          value: 12345.0
        displayName: '...'
        description: '...'
    ApiMetricData:
      title: ApiMetricData
      type: object
      properties:
        timestamp:
          type: string
          description: When the metric reading was collected.
          example: "null"
        value:
          type: number
          description: The value of the metric.
      description: A single data point of metric data.
      example:
        timestamp: '...'
        value: 12345.0
    ApiMetricList:
      title: ApiMetricList
      description: A list of ApiMetric objects
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiMetric'
    ApiMetricSchema:
      title: ApiMetricSchema
      type: object
      properties:
        name:
          type: string
          description: |-
            Name of the metric.
            This name is guaranteed to be unique among the metrics.
          example: "null"
        displayName:
          type: string
          description: Display name of the metric.
          example: "null"
        description:
          type: string
          description: Description of the metric.
          example: "null"
        isCounter:
          type: boolean
          description: |-
            Is the metric a counter.
            A counter tracks the total count since a process / host started.
            The rate of change of a counter may often be more interesting than
            the raw value of a counter.
        unitNumerator:
          type: string
          description: Numerator for the unit of the metric.
          example: "null"
        unitDenominator:
          type: string
          description: Denominator for the unit of the metric.
          example: "null"
        aliases:
          type: array
          description: |-
            Aliases for the metric.
            An alias is unique per metric (per source and version) but
            is not globally unique. Aliases usually refer to previous
            names for the metric as metrics are renamed or replaced.
          example: "null"
          items:
            type: string
        sources:
          type: array
          description: |-
            Sources for the metric.
            Each source entry contains the name of the source
            and a list of versions for which this source is valid
          example: "null"
          items:
            type: object
            additionalProperties:
              type: string
      description: |-
        A metric schema represents the schema for a specific metric monitored by
        the Cloudera Management Services.
      example:
        name: '...'
        displayName: '...'
        description: '...'
        isCounter: true
        unitNumerator: '...'
        unitDenominator: '...'
        aliases:
        - '...'
        - '...'
        sources:
          property1:
          - '...'
          - '...'
          property2:
          - '...'
          - '...'
    ApiMetricSchemaList:
      title: ApiMetricSchemaList
      description: A list of ApiMetricSchema objects
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiMetricSchema'
    ApiMigrateRolesArguments:
      title: ApiMigrateRolesArguments
      type: object
      properties:
        roleNamesToMigrate:
          type: array
          description: The list of role names to migrate.
          example: "null"
          items:
            type: string
        destinationHostId:
          type: string
          description: The ID of the host to which the roles should be migrated.
          example: "null"
        clearStaleRoleData:
          type: boolean
          description: |-
            Delete existing stale role data, if any. For example, when migrating
            a NameNode, if the destination host has stale data in the NameNode data
            directories (possibly because a NameNode role was previously located
            there), this stale data will be deleted before migrating the role.
      description: ""
      example:
        roleNamesToMigrate:
        - '...'
        - '...'
        destinationHostId: '...'
        clearStaleRoleData: true
    ApiMr2AppInformation:
      title: ApiMr2AppInformation
      type: object
      properties:
        jobState:
          type: string
          description: |-
            The state of the job. This is only set on completed jobs. This can
            take on the following values: "NEW", "INITED", "RUNNING", "SUCCEEDED",
            "FAILED", "KILLED", "ERROR".
          example: "null"
      description: Represents MapReduce2 information for a YARN application.
      example:
        jobState: '...'
    ApiMrUsageReport:
      title: ApiMrUsageReport
      description: A generic list.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: |-
              A list of per-user usage information at the requested time
              granularity.
            items:
              $ref: '#/components/schemas/ApiMrUsageReportRow'
    ApiMrUsageReportRow:
      title: ApiMrUsageReportRow
      type: object
      properties:
        timePeriod:
          type: string
          description: The time period over which this report is generated.
          example: "null"
        user:
          type: string
          description: The user being reported.
          example: "null"
        group:
          type: string
          description: The group this user belongs to.
          example: "null"
        cpuSec:
          type: number
          description: |-
            Amount of CPU time (in seconds) taken up this user's MapReduce
            jobs.
        memoryBytes:
          type: number
          description: |-
            The sum of physical memory used (collected as a snapshot) by this user's
            MapReduce jobs.
        jobCount:
          type: number
          description: Number of jobs.
        taskCount:
          type: number
          description: Number of tasks.
        durationSec:
          type: number
          description: Total duration of this user's MapReduce jobs.
        failedMaps:
          type: number
          description: |-
            Failed maps of this user's MapReduce jobs.
            Available since v11.
        totalMaps:
          type: number
          description: |-
            Total maps of this user's MapReduce jobs.
            Available since v11.
        failedReduces:
          type: number
          description: |-
            Failed reduces of this user's MapReduce jobs.
            Available since v11.
        totalReduces:
          type: number
          description: |-
            Total reduces of this user's MapReduce jobs.
            Available since v11.
        mapInputBytes:
          type: number
          description: |-
            Map input bytes of this user's MapReduce jobs.
            Available since v11.
        mapOutputBytes:
          type: number
          description: |-
            Map output bytes of this user's MapReduce jobs.
            Available since v11.
        hdfsBytesRead:
          type: number
          description: |-
            HDFS bytes read of this user's MapReduce jobs.
            Available since v11.
        hdfsBytesWritten:
          type: number
          description: |-
            HDFS bytes written of this user's MapReduce jobs.
            Available since v11.
        localBytesRead:
          type: number
          description: |-
            Local bytes read of this user's MapReduce jobs.
            Available since v11.
        localBytesWritten:
          type: number
          description: |-
            Local bytes written of this user's MapReduce jobs.
            Available since v11.
        dataLocalMaps:
          type: number
          description: |-
            Data local maps of this user's MapReduce jobs.
            Available since v11.
        rackLocalMaps:
          type: number
          description: |-
            Rack local maps of this user's MapReduce jobs.
            Available since v11.
      description: ""
      example:
        timePeriod: '...'
        user: '...'
        group: '...'
        cpuSec: 12345
        memoryBytes: 12345
        jobCount: 12345
        taskCount: 12345
        durationSec: 12345
        failedMaps: 12345
        totalMaps: 12345
        failedReduces: 12345
        totalReduces: 12345
        mapInputBytes: 12345
        mapOutputBytes: 12345
        hdfsBytesRead: 12345
        hdfsBytesWritten: 12345
        localBytesRead: 12345
        localBytesWritten: 12345
        dataLocalMaps: 12345
        rackLocalMaps: 12345
    ApiNameservice:
      title: ApiNameservice
      type: object
      properties:
        name:
          type: string
          description: Name of the nameservice.
          example: "null"
        active:
          $ref: '#/components/schemas/ApiRoleRef'
        activeFailoverController:
          $ref: '#/components/schemas/ApiRoleRef'
        standBy:
          $ref: '#/components/schemas/ApiRoleRef'
        standByFailoverController:
          $ref: '#/components/schemas/ApiRoleRef'
        secondary:
          $ref: '#/components/schemas/ApiRoleRef'
        mountPoints:
          type: array
          description: Mount points assigned to this nameservice in a federation.
          example: "null"
          items:
            type: string
        healthSummary:
          $ref: '#/components/schemas/ApiHealthSummary'
        healthChecks:
          type: array
          description: Requires "full" view. List of health checks performed on the
            nameservice.
          items:
            $ref: '#/components/schemas/ApiHealthCheck'
      description: |-
        Provides information about an HDFS nameservice.
        <p>
        Nameservices can be either a stand-alone NameNode, a NameNode paired with
        a SecondaryNameNode, or a high-availability pair formed by an active and
        a stand-by NameNode.
        <p>
        The following fields are only available in the object's full view:
        <ul>
        <li>healthSummary</li>
        <li>healthChecks</li>
        </ul>
      example:
        name: '...'
        active:
          clusterName: '...'
          serviceName: '...'
          roleName: '...'
        activeFailoverController:
          clusterName: '...'
          serviceName: '...'
          roleName: '...'
        standBy:
          clusterName: '...'
          serviceName: '...'
          roleName: '...'
        standByFailoverController:
          clusterName: '...'
          serviceName: '...'
          roleName: '...'
        secondary:
          clusterName: '...'
          serviceName: '...'
          roleName: '...'
        mountPoints:
        - '...'
        - '...'
        healthSummary: NOT_AVAILABLE
        healthChecks:
        - name: '...'
          summary: BAD
          explanation: '...'
          suppressed: true
        - name: '...'
          summary: HISTORY_NOT_AVAILABLE
          explanation: '...'
          suppressed: true
    ApiNameserviceList:
      title: ApiNameserviceList
      description: A list of HDFS nameservices.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiNameservice'
    ApiParcel:
      title: ApiParcel
      type: object
      properties:
        product:
          type: string
          description: "The name of the product, e.g. CDH, Impala"
          example: "null"
        version:
          type: string
          description: "The version of the product, e.g. 1.1.0, 2.3.0."
          example: "null"
        stage:
          type: string
          description: |-
            Returns the current stage of the parcel.
            <p>
            There are a number of stages a parcel can be in. There are two types of
            stages - stable and transient. A parcel is in a transient stage when it is
            transitioning between two stable stages. The stages are listed below with
            some additional information.

            <ul>
            <li><b>AVAILABLE_REMOTELY</b>: Stable stage - the parcel can be
            downloaded to the server.</li>
            <li><b>DOWNLOADING</b>: Transient stage - the parcel is in the process of being
            downloaded to the server.</li>
            <li><b>DOWNLOADED</b>: Stable stage - the parcel is downloaded and
            ready to be distributed or removed from the server.</li>
            <li><b>DISTRIBUTING</b>: Transient stage - the parcel is being sent to all
            the hosts in the cluster.</li>
            <li><b>DISTRIBUTED</b>: Stable stage - the parcel is on all the hosts in
            the cluster. The parcel can now be activated, or removed from all the hosts.</li>
            <li><b>UNDISTRIBUTING</b>: Transient stage - the parcel is being removed
            from all the hosts in the cluster></li>
            <li><b>ACTIVATING</b>: Transient stage - the parcel is being activated on
            the hosts in the cluster. <i>New in API v7</i></li>
            <li><b>ACTIVATED</b>: Steady stage - the parcel is set to active on every host
            in the cluster. If desired, a parcel can be deactivated from this stage.</li>
            </ul>
          example: "null"
        state:
          $ref: '#/components/schemas/ApiParcelState'
        clusterRef:
          $ref: '#/components/schemas/ApiClusterRef'
      description: |-
        A Parcel encapsulate a specific product and version. For example,
        (CDH 4.1). A parcel is downloaded, distributed to all the machines of a
        cluster and then allowed to be activated.
        <p>>
        The available parcels are determined by which cluster they will be running on.
        For example, a SLES parcel won't show up for a RHEL cluster.
        </p>
      example:
        product: '...'
        version: '...'
        stage: '...'
        state:
          progress: 12345
          totalProgress: 12345
          count: 12345
          totalCount: 12345
          errors:
          - '...'
          - '...'
          warnings:
          - '...'
          - '...'
        clusterRef:
          clusterName: '...'
          displayName: '...'
    ApiParcelList:
      title: ApiParcelList
      description: A list of ApiParcel.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiParcel'
    ApiParcelRef:
      title: ApiParcelRef
      type: object
      properties:
        clusterName:
          type: string
          description: The name of the cluster that the parcel is used by.
          example: "null"
        parcelName:
          type: string
          description: The name of the parcel.
          example: "null"
        parcelVersion:
          type: string
          description: The version of the parcel.
          example: "null"
      description: |-
        A parcelRef references a parcel. Each parcel is identified by its "parcelName"
        and "parcelVersion", and the "clusterName" of the cluster that is using it.
        To operate on the parcel object, use the API with the those fields as
        parameters.
      example:
        clusterName: '...'
        parcelName: '...'
        parcelVersion: '...'
    ApiParcelState:
      title: ApiParcelState
      type: object
      properties:
        progress:
          type: number
          description: The progress of the state transition.
        totalProgress:
          type: number
          description: "The total amount that #getProgress() needs to get to."
        count:
          type: number
          description: The current hosts that have completed.
        totalCount:
          type: number
          description: "The total amount that #getCount() needs to get to."
        errors:
          type: array
          description: The errors that exist for this parcel.
          example: "null"
          items:
            type: string
        warnings:
          type: array
          description: The warnings that exist for this parcel.
          example: "null"
          items:
            type: string
      description: |-
        The ApiParcelState encapsulates the state of a parcel while it is in
        transition and reports any errors that may have occurred..
        <p>
        The complete progress of a parcel is broken up into two different reporting
        indicators - progress and count. Progress is the primary indicator that reports
        the global state of transitions. For example, when downloading,
        progress and totalProgress will show the current number of bytes downloaded
        and the total number of bytes needed to be downloaded respectively.
        </p>
        <p>
        The count and totalCount indicator is used when a state transition affects
        multiple hosts. The count and totalCount show the current number of hosts
        completed and the total number of hosts respectively. For example, during distribution,
        the progress and totalProgress will show how many bytes have been transferred
        to each host and the count will indicate how many hosts of of totalCount
        have had parcels unpacked.
        </p>
        <p>
        Along with the two progress indicators, the ApiParcelState shows both errors
        and warnings that may have turned up during a state transition.
        </p>
      example:
        progress: 12345
        totalProgress: 12345
        count: 12345
        totalCount: 12345
        errors:
        - '...'
        - '...'
        warnings:
        - '...'
        - '...'
    ApiParcelUsage:
      title: ApiParcelUsage
      type: object
      properties:
        racks:
          type: array
          description: The racks that contain hosts that are part of this cluster.
          items:
            $ref: '#/components/schemas/ApiParcelUsageRack'
        parcels:
          type: array
          description: The parcel's that are activated and/or in-use on this cluster.
          items:
            $ref: '#/components/schemas/ApiParcelUsageParcel'
      description: |-
        This object provides a complete view of the usage of parcels in a given
        cluster - particularly which parcels are in use for which roles.
      example:
        racks:
        - hosts:
          - hostRef: {}
            roles:
            - {}
            - {}
          - hostRef: {}
            roles:
            - {}
            - {}
          rackId: '...'
        - hosts:
          - hostRef: {}
            roles:
            - {}
            - {}
          - hostRef: {}
            roles:
            - {}
            - {}
          rackId: '...'
        parcels:
        - parcelRef:
            clusterName: '...'
            parcelName: '...'
            parcelVersion: '...'
          processCount: 12345
          activated: true
        - parcelRef:
            clusterName: '...'
            parcelName: '...'
            parcelVersion: '...'
          processCount: 12345
          activated: true
    ApiParcelUsageHost:
      title: ApiParcelUsageHost
      type: object
      properties:
        hostRef:
          $ref: '#/components/schemas/ApiHostRef'
        roles:
          type: array
          description: A collection of the roles present on the host.
          items:
            $ref: '#/components/schemas/ApiParcelUsageRole'
      description: This object is used to represent a host within an ApiParcelUsage.
      example:
        hostRef:
          hostId: '...'
          hostname: '...'
        roles:
        - roleRef:
            clusterName: '...'
            serviceName: '...'
            roleName: '...'
          parcelRefs:
          - clusterName: '...'
            parcelName: '...'
            parcelVersion: '...'
          - clusterName: '...'
            parcelName: '...'
            parcelVersion: '...'
        - roleRef:
            clusterName: '...'
            serviceName: '...'
            roleName: '...'
          parcelRefs:
          - clusterName: '...'
            parcelName: '...'
            parcelVersion: '...'
          - clusterName: '...'
            parcelName: '...'
            parcelVersion: '...'
    ApiParcelUsageParcel:
      title: ApiParcelUsageParcel
      type: object
      properties:
        parcelRef:
          $ref: '#/components/schemas/ApiParcelRef'
        processCount:
          type: number
          description: How many running processes on the cluster are using the parcel.
        activated:
          type: boolean
          description: Is this parcel currently activated on the cluster.
      description: This object is used to represent a parcel within an ApiParcelUsage.
      example:
        parcelRef:
          clusterName: '...'
          parcelName: '...'
          parcelVersion: '...'
        processCount: 12345
        activated: true
    ApiParcelUsageRack:
      title: ApiParcelUsageRack
      type: object
      properties:
        hosts:
          type: array
          description: A collection of the hosts in the rack.
          items:
            $ref: '#/components/schemas/ApiParcelUsageHost'
        rackId:
          type: string
          description: The rack ID for the rack.
          example: "null"
      description: This object is used to represent a rack within an ApiParcelUsage.
      example:
        hosts:
        - hostRef:
            hostId: '...'
            hostname: '...'
          roles:
          - roleRef: {}
            parcelRefs:
            - {}
            - {}
          - roleRef: {}
            parcelRefs:
            - {}
            - {}
        - hostRef:
            hostId: '...'
            hostname: '...'
          roles:
          - roleRef: {}
            parcelRefs:
            - {}
            - {}
          - roleRef: {}
            parcelRefs:
            - {}
            - {}
        rackId: '...'
    ApiParcelUsageRole:
      title: ApiParcelUsageRole
      type: object
      properties:
        roleRef:
          $ref: '#/components/schemas/ApiRoleRef'
        parcelRefs:
          type: array
          description: A collection of references to the parcels being used by the
            role.
          items:
            $ref: '#/components/schemas/ApiParcelRef'
      description: This object is used to represent a role within an ApiParcelUsage.
      example:
        roleRef:
          clusterName: '...'
          serviceName: '...'
          roleName: '...'
        parcelRefs:
        - clusterName: '...'
          parcelName: '...'
          parcelVersion: '...'
        - clusterName: '...'
          parcelName: '...'
          parcelVersion: '...'
    ApiPerfInspectorBandwidthArgs:
      title: ApiPerfInspectorBandwidthArgs
      type: object
      properties:
        runBandwidthDiagnostics:
          type: boolean
          description: |-
            Optional flag to run bandwidth diagnostics test.
            Exercise caution, running bandwidth test will have an impact on currently running
            workloads.
            If not specified, defaults to false.
          example: false
        bandwidthTimeoutSecs:
          type: number
          description: |-
            Timeout in seconds for the bandwidth request to each target host.
            If not specified, defaults to 10 seconds.
          example: 10.0
      description: |-
        Arguments to run bandwidth diagnostics as part of performance inspector.
        Requires iperf3 package installed on hosts.
      example:
        runBandwidthDiagnostics: false
        bandwidthTimeoutSecs: 10
    ApiPerfInspectorPingArgs:
      title: ApiPerfInspectorPingArgs
      type: object
      properties:
        pingTimeoutSecs:
          type: number
          description: |-
            Timeout in seconds for the ping request to each target host.
            If not specified, defaults to 10 seconds.
            Must be a value between 1 and 3600 seconds, inclusive.
          example: 10.0
        pingCount:
          type: number
          description: |-
            Number of iterations of the ping request to each target host.
            If not specified, defaults to 10 count.
          example: 10.0
        pingPacketSizeBytes:
          type: number
          description: |-
            Packet size in bytes for each ping request.
            If not specified, defaults to 56 bytes.
            Must be a value between 1 and 65507 bytes, inclusive.
          example: 56.0
      description: Arguments to run ping test.
      example:
        pingTimeoutSecs: 10
        pingCount: 10
        pingPacketSizeBytes: 56
    ApiPrincipalList:
      title: ApiPrincipalList
      description: A list of kerberos principals.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            example: "null"
            items:
              type: string
    ApiProcess:
      title: ApiProcess
      type: object
      properties:
        configFiles:
          type: array
          description: List of config files supplied to the process.
          example: "null"
          items:
            type: string
      description: |-
        A process represents a unix process to be managed by the Cloudera
        Manager agents. A process can be a daemon, e.g. if it is associated
        with a running role. It can also be a one-off process which is expected
        to start, run and finish.
      example:
        configFiles:
        - '...'
        - '...'
    ApiProductVersion:
      title: ApiProductVersion
      type: object
      properties:
        version:
          type: string
          description: ""
          example: "null"
        product:
          type: string
          description: ""
          example: "null"
      description: ""
      example:
        version: '...'
        product: '...'
    ApiReplicationCommand:
      title: ApiReplicationCommand
      description: |-
        Information about a replication command.
        <p/>
        This object holds all the information a regular ApiCommand object provides,
        and adds specific information about the results of a replication command.
        <p/>
        Depending on the type of the service where the replication was run, a
        different result property will be populated.
      allOf:
      - $ref: '#/components/schemas/ApiCommand'
      - type: object
        properties:
          hdfsResult:
            $ref: '#/components/schemas/ApiHdfsReplicationResult'
          hiveResult:
            $ref: '#/components/schemas/ApiHiveReplicationResult'
    ApiReplicationCommandList:
      title: ApiReplicationCommandList
      description: A list of replication commands.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiReplicationCommand'
    ApiReplicationDiagnosticsCollectionArgs:
      title: ApiReplicationDiagnosticsCollectionArgs
      type: object
      properties:
        commands:
          $ref: '#/components/schemas/ApiCommandList'
        ticketNumber:
          type: string
          description: Ticket number to which this bundle must be associated with.
          example: "null"
        comments:
          type: string
          description: Additional comments for the bundle.
          example: "null"
        phoneHome:
          type: boolean
          description: Whether the diagnostics bundle must be uploaded to Cloudera.
      description: Optional arguments for diagnostics collection.
      example:
        commands:
          items:
          - id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          - id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
        ticketNumber: '...'
        comments: '...'
        phoneHome: true
    ApiReplicationSchedule:
      title: ApiReplicationSchedule
      description: |-
        A replication job schedule.
        <p/>
        Replication jobs have service-specific arguments. This object has methods
        to retrieve arguments for all supported types of replication, but only
        one argument type is allowed to be set; the backend will check that the
        provided argument matches the service type where the replication is
        being scheduled.
        <p/>
        The replication job's arguments should match the underlying service. Refer
        to each property's documentation to find out which properties correspond to
        which services.
      allOf:
      - $ref: '#/components/schemas/ApiSchedule'
      - type: object
        properties:
          hdfsArguments:
            $ref: '#/components/schemas/ApiHdfsReplicationArguments'
          hiveArguments:
            $ref: '#/components/schemas/ApiHiveReplicationArguments'
          hdfsCloudArguments:
            $ref: '#/components/schemas/ApiHdfsCloudReplicationArguments'
          history:
            type: array
            description: List of active and/or finished commands for this schedule.
            items:
              $ref: '#/components/schemas/ApiReplicationCommand'
          active:
            type: boolean
            description: |-
              Read-only field that is true if this schedule is currently active, false if not.
              Available since API v11.
          hiveCloudArguments:
            $ref: '#/components/schemas/ApiHiveCloudReplicationArguments'
    ApiReplicationScheduleList:
      title: ApiReplicationScheduleList
      description: A list of replication schedules.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiReplicationSchedule'
    ApiReplicationState:
      title: ApiReplicationState
      type: object
      properties:
        incrementalExportEnabled:
          type: boolean
          description: |-
            returns if incremental export is enabled for the given Hive service.
            Not applicable for HDFS service.
      description: The state of Hive/HDFS Replication.
      example:
        incrementalExportEnabled: true
    ApiRestartClusterArgs:
      title: ApiRestartClusterArgs
      type: object
      properties:
        restartOnlyStaleServices:
          type: boolean
          description: |-
            Only restart services that have stale configuration and their dependent
            services.
        redeployClientConfiguration:
          type: boolean
          description: Re-deploy client configuration for all services in the cluster.
        restartServiceNames:
          type: array
          description: |-
            Only restart services that are specified and their dependent services.
            Available since V11.
          example: "null"
          items:
            type: string
      description: |-
        Arguments used for Cluster Restart command.

        Since V11:
        If both restartOnlyStaleServices and restartServiceNames are specified,
        a service must be specified in restartServiceNames and also be stale,
        in order to be restarted.
      example:
        restartOnlyStaleServices: true
        redeployClientConfiguration: true
        restartServiceNames:
        - '...'
        - '...'
    ApiRole:
      title: ApiRole
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the role.
            Optional when creating a role since API v6. If not specified, a name will
            be automatically generated for the role.
          example: "null"
        type:
          type: string
          description: "The type of the role, e.g. NAMENODE, DATANODE, TASKTRACKER."
          example: "null"
        hostRef:
          $ref: '#/components/schemas/ApiHostRef'
        serviceRef:
          $ref: '#/components/schemas/ApiServiceRef'
        roleState:
          $ref: '#/components/schemas/ApiRoleState'
        commissionState:
          $ref: '#/components/schemas/ApiCommissionState'
        healthSummary:
          $ref: '#/components/schemas/ApiHealthSummary'
        configStale:
          type: boolean
          description: Readonly. Expresses whether the role configuration is stale.
        configStalenessStatus:
          $ref: '#/components/schemas/ApiConfigStalenessStatus'
        healthChecks:
          type: array
          description: Readonly. The list of health checks of this service.
          items:
            $ref: '#/components/schemas/ApiHealthCheck'
        haStatus:
          $ref: '#/components/schemas/HaStatus'
        roleUrl:
          type: string
          description: |-
            Readonly.
            Link into the Cloudera Manager web UI for this specific role.
          example: "null"
        maintenanceMode:
          type: boolean
          description: |-
            Readonly. Whether the role is in maintenance mode.
            Available since API v2.
        maintenanceOwners:
          type: array
          description: |-
            Readonly. The list of objects that trigger this role to be in
            maintenance mode.
            Available since API v2.
          example: "null"
          items:
            $ref: '#/components/schemas/ApiEntityType'
        config:
          $ref: '#/components/schemas/ApiConfigList'
        roleConfigGroupRef:
          $ref: '#/components/schemas/ApiRoleConfigGroupRef'
        zooKeeperServerMode:
          $ref: '#/components/schemas/ZooKeeperServerMode'
        entityStatus:
          $ref: '#/components/schemas/ApiEntityStatus'
      description: |-
        A role represents a specific entity that participate in a service. Examples
        are JobTrackers, DataNodes, HBase Masters. Each role is assigned a host
        where it runs on.
      example:
        name: '...'
        type: '...'
        hostRef:
          hostId: '...'
          hostname: '...'
        serviceRef:
          peerName: '...'
          clusterName: '...'
          serviceName: '...'
          serviceDisplayName: '...'
          serviceType: '...'
        roleState: UNKNOWN
        commissionState: OFFLINING
        healthSummary: BAD
        configStalenessStatus: STALE
        healthChecks:
        - name: '...'
          summary: DISABLED
          explanation: '...'
          suppressed: true
        - name: '...'
          summary: NOT_AVAILABLE
          explanation: '...'
          suppressed: true
        haStatus: STANDBY
        roleUrl: '...'
        maintenanceMode: true
        maintenanceOwners:
        - ROLE
        - CLUSTER
        config:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
        roleConfigGroupRef:
          roleConfigGroupName: '...'
        zooKeeperServerMode: REPLICATED_LEADER_ELECTION
        entityStatus: UNKNOWN_HEALTH
    ApiRoleConfigGroup:
      title: ApiRoleConfigGroup
      type: object
      properties:
        name:
          type: string
          description: Readonly. The unique name of this role config group.
          example: "null"
        roleType:
          type: string
          description: Readonly. The type of the roles in this group.
          example: "null"
        base:
          type: boolean
          description: Readonly. Indicates whether this is a base group.
        config:
          $ref: '#/components/schemas/ApiConfigList'
        displayName:
          type: string
          description: The display name of this group.
          example: "null"
        serviceRef:
          $ref: '#/components/schemas/ApiServiceRef'
      description: |-
        A role config group contains roles of the same role type
        sharing the same configuration. While each role has to belong
        to a group, a role config group may be empty.

        There exists a default role config group for each role type.
        Default groups cannot be removed nor created.

        The name of a role config group is unique and cannot be changed.

        The configuration of individual roles may be overridden on
        role level.
      example:
        name: '...'
        roleType: '...'
        base: true
        config:
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: WARNING
            validationMessage: '...'
            validationWarningsSuppressed: true
        displayName: '...'
        serviceRef:
          peerName: '...'
          clusterName: '...'
          serviceName: '...'
          serviceDisplayName: '...'
          serviceType: '...'
    ApiRoleConfigGroupList:
      title: ApiRoleConfigGroupList
      description: A list of role config groups.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiRoleConfigGroup'
    ApiRoleConfigGroupRef:
      title: ApiRoleConfigGroupRef
      type: object
      properties:
        roleConfigGroupName:
          type: string
          description: |-
            The name of the role config group, which uniquely identifies it in a CM
            installation.
          example: "null"
      description: ""
      example:
        roleConfigGroupName: '...'
    ApiRoleList:
      title: ApiRoleList
      description: A list of roles.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiRole'
    ApiRoleNameList:
      title: ApiRoleNameList
      description: A list of role names.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            example: "null"
            items:
              type: string
    ApiRoleRef:
      title: ApiRoleRef
      type: object
      properties:
        clusterName:
          type: string
          description: ""
          example: "null"
        serviceName:
          type: string
          description: ""
          example: "null"
        roleName:
          type: string
          description: ""
          example: "null"
      description: |-
        A roleRef references a role. Each role is identified by its "roleName",
        the "serviceName" for the service it belongs to, and the "clusterName" in
        which the service resides. To operate on the role object,
        use the API with the those fields as parameters.
      example:
        clusterName: '...'
        serviceName: '...'
        roleName: '...'
    ApiRoleState:
      title: ApiRoleState
      type: string
      description: Represents the configured run state of a role.
      enum:
      - HISTORY_NOT_AVAILABLE
      - UNKNOWN
      - STARTING
      - STARTED
      - BUSY
      - STOPPING
      - STOPPED
      - NA
    ApiRoleTypeConfig:
      title: ApiRoleTypeConfig
      description: Role type configuration information.
      allOf:
      - $ref: '#/components/schemas/ApiConfigList'
      - type: object
        properties:
          roleType:
            type: string
            description: The role type.
            example: "null"
    ApiRoleTypeList:
      title: ApiRoleTypeList
      description: A list of roles types that exists for a given service.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            example: "null"
            items:
              type: string
    ApiRolesToInclude:
      title: ApiRolesToInclude
      type: string
      description: Roles to include during a cluster rolling restart.
      enum:
      - SLAVES_ONLY
      - NON_SLAVES_ONLY
      - ALL_ROLES
    ApiRollEditsArgs:
      title: ApiRollEditsArgs
      type: object
      properties:
        nameservice:
          type: string
          description: |-
            Nameservice whose edits need to be rolled.
            Required only if HDFS service is federated.
          example: "null"
      description: Arguments used for the Roll Edits command.
      example:
        nameservice: '...'
    ApiRollingRestartArgs:
      title: ApiRollingRestartArgs
      type: object
      properties:
        slaveBatchSize:
          type: number
          description: |-
            Number of slave roles to restart at a time.
            Must be greater than zero. Default is 1.

            Please note that for HDFS, this number should be less than
            the replication factor (default 3) to ensure data availability
            during rolling restart.
        sleepSeconds:
          type: number
          description: |-
            Number of seconds to sleep between restarts of slave role batches.

            Must be greater than or equal to 0. Default is 0.
        slaveFailCountThreshold:
          type: number
          description: |-
            The threshold for number of slave batches that are allowed to fail
            to restart before the entire command is considered failed.

            Must be greather than or equal to 0. Default is 0.
            <p>
            This argument is for ADVANCED users only.
            </p>
        staleConfigsOnly:
          type: boolean
          description: Restart roles with stale configs only.
        unUpgradedOnly:
          type: boolean
          description: Restart roles that haven't been upgraded yet.
        restartRoleTypes:
          type: array
          description: |-
            Role types to restart. If not specified, all startable roles are restarted.

            Both role types and role names should not be specified.
          example: "null"
          items:
            type: string
        restartRoleNames:
          type: array
          description: |-
            List of specific roles to restart.
            If none are specified, then all roles of specified role types are restarted.

            Both role types and role names should not be specified.
          example: "null"
          items:
            type: string
      description: Arguments used for Rolling Restart commands.
      example:
        slaveBatchSize: 12345
        sleepSeconds: 12345
        slaveFailCountThreshold: 12345
        staleConfigsOnly: true
        unUpgradedOnly: true
        restartRoleTypes:
        - '...'
        - '...'
        restartRoleNames:
        - '...'
        - '...'
    ApiRollingRestartClusterArgs:
      title: ApiRollingRestartClusterArgs
      type: object
      properties:
        slaveBatchSize:
          type: number
          description: |-
            Number of hosts with slave roles to restart at a time.
            Must be greater than zero. Default is 1.
        sleepSeconds:
          type: number
          description: |-
            Number of seconds to sleep between restarts of slave host batches.
            <p>
            Must be greater than or equal to 0. Default is 0.
        slaveFailCountThreshold:
          type: number
          description: |-
            The threshold for number of slave host batches that are allowed to fail
            to restart before the entire command is considered failed.
            <p>
            Must be greater than or equal to 0. Default is 0.
            <p>
            This argument is for ADVANCED users only.
            </p>
        staleConfigsOnly:
          type: boolean
          description: Restart roles with stale configs only.
        unUpgradedOnly:
          type: boolean
          description: Restart roles that haven't been upgraded yet.
        redeployClientConfiguration:
          type: boolean
          description: Re-deploy client configuration. Available since API v6.
        rolesToInclude:
          $ref: '#/components/schemas/ApiRolesToInclude'
        restartServiceNames:
          type: array
          description: List of services to restart.
          example: "null"
          items:
            type: string
      description: Arguments used for Rolling Restart Cluster command.
      example:
        slaveBatchSize: 12345
        sleepSeconds: 12345
        slaveFailCountThreshold: 12345
        staleConfigsOnly: true
        unUpgradedOnly: true
        redeployClientConfiguration: true
        rolesToInclude: SLAVES_ONLY
        restartServiceNames:
        - '...'
        - '...'
    ApiRollingUpgradeClusterArgs:
      title: ApiRollingUpgradeClusterArgs
      type: object
      properties:
        slaveBatchSize:
          type: number
          description: |-
            Number of slave roles to restart at a time.
            Must be greater than zero. Default is 1.

            Please note that for HDFS, this number should be less than
            the replication factor (default 3) to ensure data availability
            during rolling restart.
        sleepSeconds:
          type: number
          description: |-
            Number of seconds to sleep between restarts of slave role batches.

            Must be greater than or equal to 0. Default is 0.
        slaveFailCountThreshold:
          type: number
          description: |-
            The threshold for number of slave batches that are allowed to fail
            to restart before the entire command is considered failed.

            Must be greather than or equal to 0. Default is 0.
            <p>
            This argument is for ADVANCED users only.
            </p>
      description: |-
        Rolling upgrade arguments used in the CDH Upgrade Command. Part of
        ApiCdhUpgradeArgs.
      example:
        slaveBatchSize: 12345
        sleepSeconds: 12345
        slaveFailCountThreshold: 12345
    ApiRollingUpgradeServicesArgs:
      title: ApiRollingUpgradeServicesArgs
      type: object
      properties:
        upgradeFromCdhVersion:
          type: string
          description: |-
            Current CDH Version of the services. Example versions are:
            "5.1.0", "5.2.2" or "5.4.0"
          example: "null"
        upgradeToCdhVersion:
          type: string
          description: |-
            Target CDH Version for the services. The CDH version should already
            be present and activated on the nodes. Example versions are:
            "5.1.0", "5.2.2" or "5.4.0"
          example: "null"
        slaveBatchSize:
          type: number
          description: |-
            Number of hosts with slave roles to upgrade at a time.
            Must be greater than zero. Default is 1.
        sleepSeconds:
          type: number
          description: |-
            Number of seconds to sleep between restarts of slave host batches.

            Must be greater than or equal to 0. Default is 0.
        slaveFailCountThreshold:
          type: number
          description: |-
            The threshold for number of slave host batches that are allowed to fail
            to restart before the entire command is considered failed.

            Must be greater than or equal to 0. Default is 0.
            <p>
            This argument is for ADVANCED users only.
            </p>
        upgradeServiceNames:
          type: array
          description: |-
            List of services to upgrade.
            Only the services that support rolling upgrade should be included.
          example: "null"
          items:
            type: string
      description: Arguments used for Rolling Upgrade command.
      example:
        upgradeFromCdhVersion: '...'
        upgradeToCdhVersion: '...'
        slaveBatchSize: 12345
        sleepSeconds: 12345
        slaveFailCountThreshold: 12345
        upgradeServiceNames:
        - '...'
        - '...'
    ApiSchedule:
      title: ApiSchedule
      type: object
      properties:
        id:
          type: number
          description: The schedule id.
        displayName:
          type: string
          description: The schedule display name.
          example: "null"
        description:
          type: string
          description: The schedule description.
          example: "null"
        startTime:
          type: string
          description: |-
            The time at which the scheduled activity is triggered for the first
            time.
          example: "null"
        endTime:
          type: string
          description: The time after which the scheduled activity will no longer
            be triggered.
          example: "null"
        interval:
          type: number
          description: The duration between consecutive triggers of a scheduled activity.
        intervalUnit:
          $ref: '#/components/schemas/ApiScheduleInterval'
        nextRun:
          type: string
          description: Readonly. The time the scheduled command will run next.
          example: "null"
        paused:
          type: boolean
          description: |-
            The paused state for the schedule. The scheduled activity will not be
            triggered as long as the scheduled is paused.
        alertOnStart:
          type: boolean
          description: Whether to alert on start of the scheduled activity.
        alertOnSuccess:
          type: boolean
          description: Whether to alert on successful completion of the scheduled
            activity.
        alertOnFail:
          type: boolean
          description: Whether to alert on failure of the scheduled activity.
        alertOnAbort:
          type: boolean
          description: Whether to alert on abort of the scheduled activity.
      description: |-
        Base class for commands that can be scheduled in Cloudera Manager.
        <p/>
        Note that schedule IDs are not preserved upon import.
        <p/>
      example:
        id: 12345
        displayName: '...'
        description: '...'
        startTime: '...'
        endTime: '...'
        interval: 12345
        intervalUnit: MINUTE
        nextRun: '...'
        paused: true
        alertOnStart: true
        alertOnSuccess: true
        alertOnFail: true
        alertOnAbort: true
    ApiScheduleInterval:
      title: ApiScheduleInterval
      type: string
      description: Represents the unit for the repeat interval for schedules.
      enum:
      - MINUTE
      - HOUR
      - DAY
      - WEEK
      - MONTH
      - YEAR
    ApiScmDbInfo:
      title: ApiScmDbInfo
      type: object
      properties:
        scmDbType:
          $ref: '#/components/schemas/ScmDbType'
        embeddedDbUsed:
          type: boolean
          description: Whether Cloudera Manager server is using embedded DB
      description: Cloudera Manager server's database information
      example:
        scmDbType: ORACLE
        embeddedDbUsed: true
    ApiService:
      title: ApiService
      type: object
      properties:
        name:
          type: string
          description: The name of the service.
          example: "null"
        type:
          type: string
          description: "The type of the service, e.g. HDFS, MAPREDUCE, HBASE."
          example: "null"
        clusterRef:
          $ref: '#/components/schemas/ApiClusterRef'
        serviceState:
          $ref: '#/components/schemas/ApiServiceState'
        healthSummary:
          $ref: '#/components/schemas/ApiHealthSummary'
        configStale:
          type: boolean
          description: Readonly. Expresses whether the service configuration is stale.
        configStalenessStatus:
          $ref: '#/components/schemas/ApiConfigStalenessStatus'
        clientConfigStalenessStatus:
          $ref: '#/components/schemas/ApiConfigStalenessStatus'
        healthChecks:
          type: array
          description: Readonly. The list of health checks of this service.
          items:
            $ref: '#/components/schemas/ApiHealthCheck'
        serviceUrl:
          type: string
          description: Readonly. Link into the Cloudera Manager web UI for this specific
            service.
          example: "null"
        roleInstancesUrl:
          type: string
          description: |-
            Readonly. Link into the Cloudera Manager web UI for role instances table for
            this specific service.
            Available since API v11.
          example: "null"
        maintenanceMode:
          type: boolean
          description: |-
            Readonly. Whether the service is in maintenance mode.
            Available since API v2.
        maintenanceOwners:
          type: array
          description: |-
            Readonly. The list of objects that trigger this service to be in
            maintenance mode.
            Available since API v2.
          example: "null"
          items:
            $ref: '#/components/schemas/ApiEntityType'
        config:
          $ref: '#/components/schemas/ApiServiceConfig'
        roles:
          type: array
          description: The list of service roles. Optional.
          items:
            $ref: '#/components/schemas/ApiRole'
        displayName:
          type: string
          description: |-
            The display name for the service that is shown in the UI.
            Available since API v2.
          example: "null"
        roleConfigGroups:
          type: array
          description: |-
            The list of role configuration groups in this service. Optional.
            Available since API v3.
          items:
            $ref: '#/components/schemas/ApiRoleConfigGroup'
        replicationSchedules:
          type: array
          description: |-
            The list of replication schedules for this service. Optional.
            Available since API v6.
          items:
            $ref: '#/components/schemas/ApiReplicationSchedule'
        snapshotPolicies:
          type: array
          description: |-
            The list of snapshot policies for this service. Optional.
            Available since API v6.
          items:
            $ref: '#/components/schemas/ApiSnapshotPolicy'
        entityStatus:
          $ref: '#/components/schemas/ApiEntityStatus'
      description: |-
        A service (such as HDFS, MapReduce, HBase) runs in a cluster. It has roles,
        which are the actual entities (NameNode, DataNodes, etc.) that perform the
        service's functions.

        <h3>HDFS services and health checks</h3>

        In CDH4, HDFS services may not present any health checks. This will happen
        if the service has more than one nameservice configured. In those cases,
        the health information will be available by fetching information about the
        nameservices instead.
        <p>
        The health summary is still available, and reflects a service-wide summary.
      example:
        name: '...'
        type: '...'
        clusterRef:
          clusterName: '...'
          displayName: '...'
        serviceState: UNKNOWN
        healthSummary: HISTORY_NOT_AVAILABLE
        configStalenessStatus: STALE
        clientConfigStalenessStatus: STALE
        healthChecks:
        - name: '...'
          summary: NOT_AVAILABLE
          explanation: '...'
          suppressed: true
        - name: '...'
          summary: CONCERNING
          explanation: '...'
          suppressed: true
        serviceUrl: '...'
        roleInstancesUrl: '...'
        maintenanceMode: true
        maintenanceOwners:
        - ROLE
        - CLUSTER
        config:
          roleTypeConfigs:
          - roleType: '...'
            items:
            - {}
            - {}
          - roleType: '...'
            items:
            - {}
            - {}
          items:
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: OK
            validationMessage: '...'
            validationWarningsSuppressed: true
          - name: '...'
            value: '...'
            required: true
            default: '...'
            displayName: '...'
            description: '...'
            relatedName: '...'
            sensitive: true
            validationState: WARNING
            validationMessage: '...'
            validationWarningsSuppressed: true
        roles:
        - name: '...'
          type: '...'
          hostRef:
            hostId: '...'
            hostname: '...'
          serviceRef:
            peerName: '...'
            clusterName: '...'
            serviceName: '...'
            serviceDisplayName: '...'
            serviceType: '...'
          roleState: STOPPED
          commissionState: OFFLINED
          healthSummary: NOT_AVAILABLE
          configStalenessStatus: STALE_REFRESHABLE
          healthChecks:
          - name: '...'
            summary: NOT_AVAILABLE
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: BAD
            explanation: '...'
            suppressed: true
          haStatus: ACTIVE
          roleUrl: '...'
          maintenanceMode: true
          maintenanceOwners:
          - ROLE
          - SERVICE
          config:
            items:
            - {}
            - {}
          roleConfigGroupRef:
            roleConfigGroupName: '...'
          zooKeeperServerMode: REPLICATED_FOLLOWER
          entityStatus: NONE
        - name: '...'
          type: '...'
          hostRef:
            hostId: '...'
            hostname: '...'
          serviceRef:
            peerName: '...'
            clusterName: '...'
            serviceName: '...'
            serviceDisplayName: '...'
            serviceType: '...'
          roleState: HISTORY_NOT_AVAILABLE
          commissionState: OFFLINING
          healthSummary: NOT_AVAILABLE
          configStalenessStatus: FRESH
          healthChecks:
          - name: '...'
            summary: DISABLED
            explanation: '...'
            suppressed: true
          - name: '...'
            summary: GOOD
            explanation: '...'
            suppressed: true
          haStatus: STANDBY
          roleUrl: '...'
          maintenanceMode: true
          maintenanceOwners:
          - ROLE
          - HOST
          config:
            items:
            - {}
            - {}
          roleConfigGroupRef:
            roleConfigGroupName: '...'
          zooKeeperServerMode: UNKNOWN
          entityStatus: CONCERNING_HEALTH
        displayName: '...'
        roleConfigGroups:
        - name: '...'
          roleType: '...'
          base: true
          config:
            items:
            - {}
            - {}
          displayName: '...'
          serviceRef:
            peerName: '...'
            clusterName: '...'
            serviceName: '...'
            serviceDisplayName: '...'
            serviceType: '...'
        - name: '...'
          roleType: '...'
          base: true
          config:
            items:
            - {}
            - {}
          displayName: '...'
          serviceRef:
            peerName: '...'
            clusterName: '...'
            serviceName: '...'
            serviceDisplayName: '...'
            serviceType: '...'
        replicationSchedules:
        - hdfsArguments:
            sourceService: {}
            sourcePath: '...'
            destinationPath: '...'
            mapreduceServiceName: '...'
            schedulerPoolName: '...'
            userName: '...'
            sourceUser: '...'
            numMaps: 12345
            dryRun: true
            bandwidthPerMap: 12345
            abortOnError: true
            removeMissingFiles: true
            preserveReplicationCount: true
            preserveBlockSize: true
            preservePermissions: true
            logPath: '...'
            skipChecksumChecks: true
            skipListingChecksumChecks: true
            skipTrash: true
            replicationStrategy: DYNAMIC
            preserveXAttrs: true
            exclusionFilters:
            - '...'
            - '...'
            raiseSnapshotDiffFailures: true
            destinationCloudAccount: '...'
          hiveArguments:
            sourceService: {}
            tableFilters:
            - {}
            - {}
            exportDir: '...'
            force: true
            replicateData: true
            hdfsArguments: {}
            replicateImpalaMetadata: true
            runInvalidateMetadata: true
            dryRun: true
            numThreads: 12345
          hdfsCloudArguments:
            sourceAccount: '...'
            destinationAccount: '...'
            sourceService: {}
            sourcePath: '...'
            destinationPath: '...'
            mapreduceServiceName: '...'
            schedulerPoolName: '...'
            userName: '...'
            sourceUser: '...'
            numMaps: 12345
            dryRun: true
            bandwidthPerMap: 12345
            abortOnError: true
            removeMissingFiles: true
            preserveReplicationCount: true
            preserveBlockSize: true
            preservePermissions: true
            logPath: '...'
            skipChecksumChecks: true
            skipListingChecksumChecks: true
            skipTrash: true
            replicationStrategy: STATIC
            preserveXAttrs: true
            exclusionFilters:
            - '...'
            - '...'
            raiseSnapshotDiffFailures: true
            destinationCloudAccount: '...'
          history:
          - hdfsResult: {}
            hiveResult: {}
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          - hdfsResult: {}
            hiveResult: {}
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          active: true
          hiveCloudArguments:
            sourceAccount: '...'
            destinationAccount: '...'
            cloudRootPath: '...'
            replicationOption: METADATA_ONLY
            sourceService: {}
            tableFilters:
            - {}
            - {}
            exportDir: '...'
            force: true
            replicateData: true
            hdfsArguments: {}
            replicateImpalaMetadata: true
            runInvalidateMetadata: true
            dryRun: true
            numThreads: 12345
          id: 12345
          displayName: '...'
          description: '...'
          startTime: '...'
          endTime: '...'
          interval: 12345
          intervalUnit: WEEK
          nextRun: '...'
          paused: true
          alertOnStart: true
          alertOnSuccess: true
          alertOnFail: true
          alertOnAbort: true
        - hdfsArguments:
            sourceService: {}
            sourcePath: '...'
            destinationPath: '...'
            mapreduceServiceName: '...'
            schedulerPoolName: '...'
            userName: '...'
            sourceUser: '...'
            numMaps: 12345
            dryRun: true
            bandwidthPerMap: 12345
            abortOnError: true
            removeMissingFiles: true
            preserveReplicationCount: true
            preserveBlockSize: true
            preservePermissions: true
            logPath: '...'
            skipChecksumChecks: true
            skipListingChecksumChecks: true
            skipTrash: true
            replicationStrategy: STATIC
            preserveXAttrs: true
            exclusionFilters:
            - '...'
            - '...'
            raiseSnapshotDiffFailures: true
            destinationCloudAccount: '...'
          hiveArguments:
            sourceService: {}
            tableFilters:
            - {}
            - {}
            exportDir: '...'
            force: true
            replicateData: true
            hdfsArguments: {}
            replicateImpalaMetadata: true
            runInvalidateMetadata: true
            dryRun: true
            numThreads: 12345
          hdfsCloudArguments:
            sourceAccount: '...'
            destinationAccount: '...'
            sourceService: {}
            sourcePath: '...'
            destinationPath: '...'
            mapreduceServiceName: '...'
            schedulerPoolName: '...'
            userName: '...'
            sourceUser: '...'
            numMaps: 12345
            dryRun: true
            bandwidthPerMap: 12345
            abortOnError: true
            removeMissingFiles: true
            preserveReplicationCount: true
            preserveBlockSize: true
            preservePermissions: true
            logPath: '...'
            skipChecksumChecks: true
            skipListingChecksumChecks: true
            skipTrash: true
            replicationStrategy: DYNAMIC
            preserveXAttrs: true
            exclusionFilters:
            - '...'
            - '...'
            raiseSnapshotDiffFailures: true
            destinationCloudAccount: '...'
          history:
          - hdfsResult: {}
            hiveResult: {}
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          - hdfsResult: {}
            hiveResult: {}
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          active: true
          hiveCloudArguments:
            sourceAccount: '...'
            destinationAccount: '...'
            cloudRootPath: '...'
            replicationOption: METADATA_AND_DATA
            sourceService: {}
            tableFilters:
            - {}
            - {}
            exportDir: '...'
            force: true
            replicateData: true
            hdfsArguments: {}
            replicateImpalaMetadata: true
            runInvalidateMetadata: true
            dryRun: true
            numThreads: 12345
          id: 12345
          displayName: '...'
          description: '...'
          startTime: '...'
          endTime: '...'
          interval: 12345
          intervalUnit: DAY
          nextRun: '...'
          paused: true
          alertOnStart: true
          alertOnSuccess: true
          alertOnFail: true
          alertOnAbort: true
        snapshotPolicies:
        - name: '...'
          description: '...'
          hourlySnapshots: 12345
          dailySnapshots: 12345
          weeklySnapshots: 12345
          monthlySnapshots: 12345
          yearlySnapshots: 12345
          minuteOfHour: 12345
          hoursForHourlySnapshots:
          - 12345
          - 12345
          hourOfDay: 12345
          dayOfWeek: 12345
          dayOfMonth: 12345
          monthOfYear: 12345
          alertOnStart: true
          alertOnSuccess: true
          alertOnFail: true
          alertOnAbort: true
          hbaseArguments:
            tableRegExps:
            - '...'
            - '...'
            storage: REMOTE_S3
          hdfsArguments:
            pathPatterns:
            - '...'
            - '...'
          lastCommand:
            hbaseResult: {}
            hdfsResult: {}
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          lastSuccessfulCommand:
            hbaseResult: {}
            hdfsResult: {}
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          paused: true
        - name: '...'
          description: '...'
          hourlySnapshots: 12345
          dailySnapshots: 12345
          weeklySnapshots: 12345
          monthlySnapshots: 12345
          yearlySnapshots: 12345
          minuteOfHour: 12345
          hoursForHourlySnapshots:
          - 12345
          - 12345
          hourOfDay: 12345
          dayOfWeek: 12345
          dayOfMonth: 12345
          monthOfYear: 12345
          alertOnStart: true
          alertOnSuccess: true
          alertOnFail: true
          alertOnAbort: true
          hbaseArguments:
            tableRegExps:
            - '...'
            - '...'
            storage: LOCAL
          hdfsArguments:
            pathPatterns:
            - '...'
            - '...'
          lastCommand:
            hbaseResult: {}
            hdfsResult: {}
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          lastSuccessfulCommand:
            hbaseResult: {}
            hdfsResult: {}
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          paused: true
        entityStatus: STOPPED
    ApiServiceConfig:
      title: ApiServiceConfig
      description: Service and role type configuration.
      allOf:
      - $ref: '#/components/schemas/ApiConfigList'
      - type: object
        properties:
          roleTypeConfigs:
            type: array
            description: |-
              List of role type configurations.
              Only available up to API v2.
            items:
              $ref: '#/components/schemas/ApiRoleTypeConfig'
    ApiServiceList:
      title: ApiServiceList
      description: A list of services.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiService'
    ApiServiceRef:
      title: ApiServiceRef
      type: object
      properties:
        peerName:
          type: string
          description: |-
            The name of the CM peer corresponding to the remote CM that manages the
            referenced service. This should only be set when referencing a remote
            service.
          example: "null"
        clusterName:
          type: string
          description: The enclosing cluster for this service.
          example: "null"
        serviceName:
          type: string
          description: The service name.
          example: "null"
        serviceDisplayName:
          type: string
          description: ""
          example: "null"
        serviceType:
          type: string
          description: The service type. This is available since version 32
          example: "null"
      description: |-
        A serviceRef references a service. It is identified by the "serviceName",
        "clusterName" (name of the cluster which the service belongs to) and
        an optional "peerName" (to reference a remote service i.e. services managed
        by other CM instances). To operate on the service object, use the API with
        those fields as parameters.
      example:
        peerName: '...'
        clusterName: '...'
        serviceName: '...'
        serviceDisplayName: '...'
        serviceType: '...'
    ApiServiceState:
      title: ApiServiceState
      type: string
      description: Represents the configured run state of a service.
      enum:
      - HISTORY_NOT_AVAILABLE
      - UNKNOWN
      - STARTING
      - STARTED
      - STOPPING
      - STOPPED
      - NA
    ApiServiceTypeList:
      title: ApiServiceTypeList
      description: A list of service types that exists for a given cluster.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            example: "null"
            items:
              type: string
    ApiShutdownReadiness:
      title: ApiShutdownReadiness
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ShutdownReadinessState'
      description: Cloudera Manager server's shutdown readiness
      example:
        state: NOT_READY
    ApiSimpleRollingRestartClusterArgs:
      title: ApiSimpleRollingRestartClusterArgs
      type: object
      properties:
        slaveBatchSize:
          type: number
          description: |-
            Number of hosts with slave roles to restart at a time.
            Must be greater than zero. Default is 1.
        sleepSeconds:
          type: number
          description: |-
            Number of seconds to sleep between restarts of slave host batches.
            <p>
            Must be greater than or equal to 0. Default is 0.
        slaveFailCountThreshold:
          type: number
          description: |-
            The threshold for number of slave host batches that are allowed to fail
            to restart before the entire command is considered failed.
            <p>
            Must be greater than or equal to 0. Default is 0.
            <p>
            This argument is for ADVANCED users only.
            </p>
      description: Basic arguments used for Rolling Restart Cluster commands.
      example:
        slaveBatchSize: 12345
        sleepSeconds: 12345
        slaveFailCountThreshold: 12345
    ApiSnapshotCommand:
      title: ApiSnapshotCommand
      description: |-
        Information about snapshot commands.
        <p/>
        This object holds all the information a regular ApiCommand object provides,
        and adds specific information about the results of a snapshot command.
        <p/>
        Depending on the type of the service where the snapshot command was run, a
        different result property will be populated.
      allOf:
      - $ref: '#/components/schemas/ApiCommand'
      - type: object
        properties:
          hbaseResult:
            $ref: '#/components/schemas/ApiHBaseSnapshotResult'
          hdfsResult:
            $ref: '#/components/schemas/ApiHdfsSnapshotResult'
    ApiSnapshotCommandList:
      title: ApiSnapshotCommandList
      description: A list of snapshot commands.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiSnapshotCommand'
    ApiSnapshotPolicy:
      title: ApiSnapshotPolicy
      type: object
      properties:
        name:
          type: string
          description: Name of the snapshot policy.
          example: "null"
        description:
          type: string
          description: Description of the snapshot policy.
          example: "null"
        hourlySnapshots:
          type: number
          description: Number of hourly snapshots to be retained.
        dailySnapshots:
          type: number
          description: Number of daily snapshots to be retained.
        weeklySnapshots:
          type: number
          description: Number of weekly snapshots to be retained.
        monthlySnapshots:
          type: number
          description: Number of monthly snapshots to be retained.
        yearlySnapshots:
          type: number
          description: Number of yearly snapshots to be retained.
        minuteOfHour:
          type: number
          description: |-
            Minute in the hour that hourly, daily, weekly, monthly and yearly
            snapshots should be created. Valid values are 0 to 59. Default value is 0.
        hoursForHourlySnapshots:
          type: array
          description: |-
            Hours of the day that hourly snapshots should be created. Valid values
            are 0 to 23. If this list is null or empty, then hourly snapshots are
            created for every hour.
          items:
            type: number
        hourOfDay:
          type: number
          description: |-
            Hour in the day that daily, weekly, monthly and yearly snapshots should be
            created. Valid values are 0 to 23. Default value is 0.
        dayOfWeek:
          type: number
          description: |-
            Day of the week that weekly snapshots should be created. Valid values are
            1 to 7, 1 representing Sunday. Default value is 1.
        dayOfMonth:
          type: number
          description: |-
            Day of the month that monthly and yearly snapshots should be created.
            Values from 1 to 31 are allowed. Additionally 0 to -30 can be used to
            specify offsets from the last day of the month. Default value is 1.
            <p/>
            If this value is invalid for any month for which snapshots are required,
            the backend will throw an exception.
        monthOfYear:
          type: number
          description: |-
            Month of the year that yearly snapshots should be created. Valid values
            are 1 to 12, 1 representing January. Default value is 1.
        alertOnStart:
          type: boolean
          description: Whether to alert on start of snapshot creation/deletion activity.
        alertOnSuccess:
          type: boolean
          description: |-
            Whether to alert on successful completion of snapshot creation/deletion
            activity.
        alertOnFail:
          type: boolean
          description: Whether to alert on failure of snapshot creation/deletion activity.
        alertOnAbort:
          type: boolean
          description: Whether to alert on abort of snapshot creation/deletion activity.
        hbaseArguments:
          $ref: '#/components/schemas/ApiHBaseSnapshotPolicyArguments'
        hdfsArguments:
          $ref: '#/components/schemas/ApiHdfsSnapshotPolicyArguments'
        lastCommand:
          $ref: '#/components/schemas/ApiSnapshotCommand'
        lastSuccessfulCommand:
          $ref: '#/components/schemas/ApiSnapshotCommand'
        paused:
          type: boolean
          description: "Whether to pause a snapshot policy, available since V11."
      description: |-
        A snapshot policy.
        <p/>
        Snapshot policies have service specific arguments. This object has methods
        to retrieve arguments for all supported types of snapshots, but only one
        argument type is allowed to be set; the backend will check that the provided
        argument matches the type of the service with which the snapshot policy is
        associated.
      example:
        name: '...'
        description: '...'
        hourlySnapshots: 12345
        dailySnapshots: 12345
        weeklySnapshots: 12345
        monthlySnapshots: 12345
        yearlySnapshots: 12345
        minuteOfHour: 12345
        hoursForHourlySnapshots:
        - 12345
        - 12345
        hourOfDay: 12345
        dayOfWeek: 12345
        dayOfMonth: 12345
        monthOfYear: 12345
        alertOnStart: true
        alertOnSuccess: true
        alertOnFail: true
        alertOnAbort: true
        hbaseArguments:
          tableRegExps:
          - '...'
          - '...'
          storage: REMOTE_S3
        hdfsArguments:
          pathPatterns:
          - '...'
          - '...'
        lastCommand:
          hbaseResult:
            processedTableCount: 12345
            processedTables:
            - '...'
            - '...'
            unprocessedTableCount: 12345
            unprocessedTables:
            - '...'
            - '...'
            createdSnapshotCount: 12345
            createdSnapshots:
            - {}
            - {}
            deletedSnapshotCount: 12345
            deletedSnapshots:
            - {}
            - {}
            creationErrorCount: 12345
            creationErrors:
            - {}
            - {}
            deletionErrorCount: 12345
            deletionErrors:
            - {}
            - {}
          hdfsResult:
            processedPathCount: 12345
            processedPaths:
            - '...'
            - '...'
            unprocessedPathCount: 12345
            unprocessedPaths:
            - '...'
            - '...'
            createdSnapshotCount: 12345
            createdSnapshots:
            - {}
            - {}
            deletedSnapshotCount: 12345
            deletedSnapshots:
            - {}
            - {}
            creationErrorCount: 12345
            creationErrors:
            - {}
            - {}
            deletionErrorCount: 12345
            deletionErrors:
            - {}
            - {}
          id: 12345
          name: '...'
          startTime: '...'
          endTime: '...'
          active: true
          success: true
          resultMessage: '...'
          resultDataUrl: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceRef:
            peerName: '...'
            clusterName: '...'
            serviceName: '...'
            serviceDisplayName: '...'
            serviceType: '...'
          roleRef:
            clusterName: '...'
            serviceName: '...'
            roleName: '...'
          hostRef:
            hostId: '...'
            hostname: '...'
          parent:
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          children:
            items:
            - {}
            - {}
          canRetry: true
        lastSuccessfulCommand:
          hbaseResult:
            processedTableCount: 12345
            processedTables:
            - '...'
            - '...'
            unprocessedTableCount: 12345
            unprocessedTables:
            - '...'
            - '...'
            createdSnapshotCount: 12345
            createdSnapshots:
            - {}
            - {}
            deletedSnapshotCount: 12345
            deletedSnapshots:
            - {}
            - {}
            creationErrorCount: 12345
            creationErrors:
            - {}
            - {}
            deletionErrorCount: 12345
            deletionErrors:
            - {}
            - {}
          hdfsResult:
            processedPathCount: 12345
            processedPaths:
            - '...'
            - '...'
            unprocessedPathCount: 12345
            unprocessedPaths:
            - '...'
            - '...'
            createdSnapshotCount: 12345
            createdSnapshots:
            - {}
            - {}
            deletedSnapshotCount: 12345
            deletedSnapshots:
            - {}
            - {}
            creationErrorCount: 12345
            creationErrors:
            - {}
            - {}
            deletionErrorCount: 12345
            deletionErrors:
            - {}
            - {}
          id: 12345
          name: '...'
          startTime: '...'
          endTime: '...'
          active: true
          success: true
          resultMessage: '...'
          resultDataUrl: '...'
          clusterRef:
            clusterName: '...'
            displayName: '...'
          serviceRef:
            peerName: '...'
            clusterName: '...'
            serviceName: '...'
            serviceDisplayName: '...'
            serviceType: '...'
          roleRef:
            clusterName: '...'
            serviceName: '...'
            roleName: '...'
          hostRef:
            hostId: '...'
            hostname: '...'
          parent:
            id: 12345
            name: '...'
            startTime: '...'
            endTime: '...'
            active: true
            success: true
            resultMessage: '...'
            resultDataUrl: '...'
            clusterRef: {}
            serviceRef: {}
            roleRef: {}
            hostRef: {}
            parent: {}
            children: {}
            canRetry: true
          children:
            items:
            - {}
            - {}
          canRetry: true
        paused: true
    ApiSnapshotPolicyList:
      title: ApiSnapshotPolicyList
      description: A list of snapshot policies.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiSnapshotPolicy'
    ApiTenantUtilization:
      title: ApiTenantUtilization
      type: object
      properties:
        tenantName:
          type: string
          description: Name of the tenant.
          example: "null"
        cpuUtilizationPercentage:
          type: number
          description: Percentage of CPU resource used by workloads.
        memoryUtilizationPercentage:
          type: number
          description: Percentage of memory used by workloads.
      description: Utilization report information of a tenant.
      example:
        tenantName: '...'
        cpuUtilizationPercentage: 12345.0
        memoryUtilizationPercentage: 12345.0
    ApiTenantUtilizationList:
      title: ApiTenantUtilizationList
      description: A list of tenant utilization reports.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiTenantUtilization'
    ApiTimeSeries:
      title: ApiTimeSeries
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ApiTimeSeriesMetadata'
        data:
          type: array
          description: List of metric data points.
          items:
            $ref: '#/components/schemas/ApiTimeSeriesData'
      description: |-
        A time series represents a stream of data points.
        Each data point contains a time and a value.
        Time series are returned by executing a tsquery.
      example:
        metadata:
          metricName: '...'
          entityName: '...'
          startTime: '...'
          endTime: '...'
          attributes:
            property1: '...'
            property2: '...'
          unitNumerators:
          - '...'
          - '...'
          unitDenominators:
          - '...'
          - '...'
          expression: '...'
          alias: '...'
          metricCollectionFrequencyMs: 12345
          rollupUsed: '...'
        data:
        - timestamp: '...'
          value: 12345.0
          type: '...'
          aggregateStatistics:
            sampleTime: '...'
            sampleValue: 12345.0
            count: 12345
            min: 12345.0
            minTime: '...'
            max: 12345.0
            maxTime: '...'
            mean: 12345.0
            stdDev: 12345.0
            crossEntityMetadata: {}
        - timestamp: '...'
          value: 12345.0
          type: '...'
          aggregateStatistics:
            sampleTime: '...'
            sampleValue: 12345.0
            count: 12345
            min: 12345.0
            minTime: '...'
            max: 12345.0
            maxTime: '...'
            mean: 12345.0
            stdDev: 12345.0
            crossEntityMetadata: {}
    ApiTimeSeriesAggregateStatistics:
      title: ApiTimeSeriesAggregateStatistics
      type: object
      properties:
        sampleTime:
          type: string
          description: |-
            The timestamp of the sample data point. Note that the timestamp
            reflects coordinated universal time (UTC) and not necessarily the server's
            time zone. The rest API formats the UTC timestamp as an ISO-8061 string.
          example: "null"
        sampleValue:
          type: number
          description: |-
            The sample data point value representing an actual sample value picked
            from the underlying data that is being aggregated.
        count:
          type: number
          description: The number of individual data points aggregated in this data
            point.
        min:
          type: number
          description: |-
            This minimum value encountered while producing this aggregate data point.
            If this is a cross-time aggregate then this is the minimum value
            encountered during the aggregation period. If this is a cross-entity
            aggregate then this is the minimum value encountered across all entities.
            If this is a cross-time, cross-entity aggregate, then this is the minimum
            value for any entity across the aggregation period.
        minTime:
          type: string
          description: |-
            The timestamp of the minimum data point. Note that the timestamp
            reflects coordinated universal time (UTC) and not necessarily the server's
            time zone. The rest API formats the UTC timestamp as an ISO-8061 string.
          example: "null"
        max:
          type: number
          description: |-
            This maximum value encountered while producing this aggregate data point.
            If this is a cross-time aggregate then this is the maximum value
            encountered during the aggregation period. If this is a cross-entity
            aggregate then this is the maximum value encountered across all entities.
            If this is a cross-time, cross-entity aggregate, then this is the maximum
            value for any entity across the aggregation period.
        maxTime:
          type: string
          description: |-
            The timestamp of the maximum data point. Note that the timestamp
            reflects coordinated universal time (UTC) and not necessarily the server's
            time zone. The rest API formats the UTC timestamp as an ISO-8061 string.
          example: "null"
        mean:
          type: number
          description: The mean of the values of all data-points for this aggregate
            data point.
        stdDev:
          type: number
          description: |-
            The standard deviation of the values of all data-points for this aggregate
            data point.
        crossEntityMetadata:
          $ref: '#/components/schemas/ApiTimeSeriesCrossEntityMetadata'
      description: |-
        Statistics related to one time series aggregate data point. It is
        available from v6 for data points containing aggregate data. It includes
        further statistics about the data point. An aggregate can be across
        entities (e.g., fd_open_across_datanodes), over time (e.g., a daily point
        for the fd_open metric for a specific DataNode), or both (e.g., a daily
        point for the fd_open_across_datanodes metric). If the data point is for
        non-aggregate date this will return null.
      example:
        sampleTime: '...'
        sampleValue: 12345.0
        count: 12345
        min: 12345.0
        minTime: '...'
        max: 12345.0
        maxTime: '...'
        mean: 12345.0
        stdDev: 12345.0
        crossEntityMetadata:
          maxEntityDisplayName: '...'
          maxEntityName: '...'
          minEntityDisplayName: '...'
          minEntityName: '...'
          numEntities: 12345.0
    ApiTimeSeriesCrossEntityMetadata:
      title: ApiTimeSeriesCrossEntityMetadata
      type: object
      properties:
        maxEntityDisplayName:
          type: string
          description: |-
            The display name of the entity that had the maximum value for the
            cross-entity aggregate metric.
          example: "null"
        maxEntityName:
          type: string
          description: |-
            The name of the entity that had the maximum value for the
            cross-entity aggregate metric.
            <p>
            Available since API v11.
          example: "null"
        minEntityDisplayName:
          type: string
          description: |-
            The display name of the entity that had the minimum value for the
            cross-entity aggregate metric.
          example: "null"
        minEntityName:
          type: string
          description: |-
            The name of the entity that had the minimum value for the
            cross-entity aggregate metric.
            <p>
            Available since API v11.
          example: "null"
        numEntities:
          type: number
          description: |-
            The number of entities covered by this point. For a raw cross-entity point
            this number is exact. For a rollup point this number is an average, since
            the number of entities being aggregated can change over the aggregation
            period.
      description: |-
        A class holding additional metadata to the ApiTimeSeriesAggregateStatistics
        class that applies specifically to cross-entity aggregate metrics.
      example:
        maxEntityDisplayName: '...'
        maxEntityName: '...'
        minEntityDisplayName: '...'
        minEntityName: '...'
        numEntities: 12345.0
    ApiTimeSeriesData:
      title: ApiTimeSeriesData
      type: object
      properties:
        timestamp:
          type: string
          description: |-
            The timestamp for this time series data point. Note that the timestamp
            reflects coordinated universal time (UTC) and not necessarily the server's
            time zone. The rest API formats the UTC timestamp as an ISO-8061 string.
          example: "null"
        value:
          type: number
          description: The value of the time series data.
        type:
          type: string
          description: The type of the time series data.
          example: "null"
        aggregateStatistics:
          $ref: '#/components/schemas/ApiTimeSeriesAggregateStatistics'
      description: A single data point of time series data.
      example:
        timestamp: '...'
        value: 12345.0
        type: '...'
        aggregateStatistics:
          sampleTime: '...'
          sampleValue: 12345.0
          count: 12345
          min: 12345.0
          minTime: '...'
          max: 12345.0
          maxTime: '...'
          mean: 12345.0
          stdDev: 12345.0
          crossEntityMetadata:
            maxEntityDisplayName: '...'
            maxEntityName: '...'
            minEntityDisplayName: '...'
            minEntityName: '...'
            numEntities: 12345.0
    ApiTimeSeriesEntityAttribute:
      title: ApiTimeSeriesEntityAttribute
      type: object
      properties:
        name:
          type: string
          description: |-
            Name of the of the attribute.
            This name uniquely identifies this attribute.
          example: "null"
        displayName:
          type: string
          description: Display name of the attribute.
          example: "null"
        description:
          type: string
          description: Description of the attribute.
          example: "null"
        isValueCaseSensitive:
          type: boolean
          description: Returns whether to treat attribute values as case-sensitive.
      description: |-
        A time series entity attribute represents a possible attribute of a time
        series entity type monitored by the Cloudera Management Services.
        <p>
        Available since API v11.
      example:
        name: '...'
        displayName: '...'
        description: '...'
        isValueCaseSensitive: true
    ApiTimeSeriesEntityAttributeList:
      title: ApiTimeSeriesEntityAttributeList
      description: A list of ApiTimeSeriesEntityAttribute objects
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiTimeSeriesEntityAttribute'
    ApiTimeSeriesEntityType:
      title: ApiTimeSeriesEntityType
      type: object
      properties:
        name:
          type: string
          description: |-
            Returns the name of the entity type. This name uniquely identifies this
            entity type.
          example: "null"
        category:
          type: string
          description: Returns the category of the entity type.
          example: "null"
        nameForCrossEntityAggregateMetrics:
          type: string
          description: |-
            Returns the string to use to pluralize the name of the entity for cross
            entity aggregate metrics.
          example: "null"
        displayName:
          type: string
          description: Returns the display name of the entity type.
          example: "null"
        description:
          type: string
          description: Returns the description of the entity type.
          example: "null"
        immutableAttributeNames:
          type: array
          description: |-
            Returns the list of immutable attributes for this entity type. Immutable
            attributes values for an entity may not change over its lifetime.
          example: "null"
          items:
            type: string
        mutableAttributeNames:
          type: array
          description: |-
            Returns the list of mutable attributes for this entity type. Mutable
            attributes for an entity may change over its lifetime.
          example: "null"
          items:
            type: string
        entityNameFormat:
          type: array
          description: |-
            Returns a list of attribute names that will be used to construct entity
            names for entities of this type. The attributes named here must be immutable
            attributes of this type or a parent type.
          example: "null"
          items:
            type: string
        entityDisplayNameFormat:
          type: string
          description: |-
            Returns a format string that will be used to construct the display name of
            entities of this type. If this returns null the entity name would be used
            as the display name.

            The entity attribute values are used to replace $attribute name portions of
            this format string. For example, an entity with roleType "DATANODE" and
            hostname "foo.com" will have a display name "DATANODE (foo.com)" if the
            format is "$roleType ($hostname)".
          example: "null"
        parentMetricEntityTypeNames:
          type: array
          description: |-
            Returns a list of metric entity type names which are parents of this
            metric entity type. A metric entity type inherits the attributes of
            its ancestors. For example a role metric entity type has its service as a
            parent. A service metric entity type has a cluster as a parent. The role
            type inherits its cluster name attribute through its service parent. Only
            parent ancestors should be returned here. In the example given, only the
            service metric entity type should be specified in the parent list.
          example: "null"
          items:
            type: string
      description: |-
        Describe a time series entity type and attributes associated with
        this entity type.
        <p>
        Available since API v11.
      example:
        name: '...'
        category: '...'
        nameForCrossEntityAggregateMetrics: '...'
        displayName: '...'
        description: '...'
        immutableAttributeNames:
        - '...'
        - '...'
        mutableAttributeNames:
        - '...'
        - '...'
        entityNameFormat:
        - '...'
        - '...'
        entityDisplayNameFormat: '...'
        parentMetricEntityTypeNames:
        - '...'
        - '...'
    ApiTimeSeriesEntityTypeList:
      title: ApiTimeSeriesEntityTypeList
      description: A list of ApiTimeSeriesEntityType objects
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiTimeSeriesEntityType'
    ApiTimeSeriesMetadata:
      title: ApiTimeSeriesMetadata
      type: object
      properties:
        metricName:
          type: string
          description: The metric name for the time series.
          example: "null"
        entityName:
          type: string
          description: |-
            The display name for the entity associated with this time series.
            For example, if this was a time series for an HDFS service the entity name
            might be something like "My HDFS Service". If it was for a host it might
            be something like "myhost.mysite.com".
          example: "null"
        startTime:
          type: string
          description: The start time for the time series.
          example: "null"
        endTime:
          type: string
          description: The end time for the time series.
          example: "null"
        attributes:
          type: object
          additionalProperties:
            type: string
          description: |-
            The attributes for the time series. Note that the entityName entry in
            this map is not the same as the entityName field in this
            ApiTimeSeriesMetadata. The entityName entry in this map is a unique
            identifier for the entity and not the name displayed in the UI.

            For example, if this was a time series for the YARN Job History Server
            the entityName entry in this map might be something like
            "yarn-JOBHISTORY-6bd17ceb1489aae93fef4c867350d0dd"
          example: "null"
        unitNumerators:
          type: array
          description: The numerators of the units for the time series.
          example: "null"
          items:
            type: string
        unitDenominators:
          type: array
          description: The denominators of the units for the time series.
          example: "null"
          items:
            type: string
        expression:
          type: string
          description: The tsquery expression that could be used to extract just this
            stream.
          example: "null"
        alias:
          type: string
          description: |-
            The alias for this stream's metric. Aliases correspond to use of the 'as'
            keyword in the tsquery.
          example: "null"
        metricCollectionFrequencyMs:
          type: number
          description: |-
            The minimum frequency at which the underlying metric for this stream is
            collected. Note that this can be null if the stream returns irregularly
            sampled data.
        rollupUsed:
          type: string
          description: |-
            The aggregate rollup for the returned data. This can be TEN_MINUTELY,
            HOURLY, SIX_HOURLY, DAILY, or WEEKLY.
          example: "null"
      description: Metadata for a time series.
      example:
        metricName: '...'
        entityName: '...'
        startTime: '...'
        endTime: '...'
        attributes:
          property1: '...'
          property2: '...'
        unitNumerators:
        - '...'
        - '...'
        unitDenominators:
        - '...'
        - '...'
        expression: '...'
        alias: '...'
        metricCollectionFrequencyMs: 12345
        rollupUsed: '...'
    ApiTimeSeriesRequest:
      title: ApiTimeSeriesRequest
      type: object
      properties:
        query:
          type: string
          description: |-
            tsquery to run against the CM time-series data store.
            Please see the <a href="http://tiny.cloudera.com/cm_tsquery">
            tsquery language documentation</a>.<p/>
          example: "null"
        from:
          type: string
          description: |-
            Start of the period to query in ISO 8601 format (defaults to 5 minutes
            before the end of the period).
          example: "null"
        to:
          type: string
          description: End of the period to query in ISO 8601 format (defaults to
            current time).
          example: "null"
        contentType:
          type: string
          description: |-
            contentType to return the response in. The content types "application/json"
            and "text/csv" are supported. This defaults to "application/json". If
            "text/csv" is specified then we return one row per time series data point,
            and we don't return any of the metadata.
          example: "null"
        desiredRollup:
          type: string
          description: |-
            Aggregate rollup level desired for the response data.
            Valid values are RAW, TEN_MINUTELY, HOURLY, SIX_HOURLY, DAILY, and WEEKLY.
            Note that if the mustUseDesiredRollup parameter is not set, then the
            monitoring server can decide to return a different rollup level.
          example: "null"
        mustUseDesiredRollup:
          type: boolean
          description: |-
            If set to true, then the tsquery will return data with the desired
            aggregate rollup level.
      description: |-
        Request object containing information needed for querying timeseries data.

        Available since API v11.
      example:
        query: '...'
        from: '...'
        to: '...'
        contentType: '...'
        desiredRollup: '...'
        mustUseDesiredRollup: true
    ApiTimeSeriesResponse:
      title: ApiTimeSeriesResponse
      type: object
      properties:
        timeSeries:
          type: array
          description: The time series data for this single query response.
          items:
            $ref: '#/components/schemas/ApiTimeSeries'
        warnings:
          type: array
          description: The warnings for this single query response.
          example: "null"
          items:
            type: string
        timeSeriesQuery:
          type: string
          description: The query for this single query response.
          example: "null"
      description: The time series response for a time series query.
      example:
        timeSeries:
        - metadata:
            metricName: '...'
            entityName: '...'
            startTime: '...'
            endTime: '...'
            attributes:
              property1: '...'
              property2: '...'
            unitNumerators:
            - '...'
            - '...'
            unitDenominators:
            - '...'
            - '...'
            expression: '...'
            alias: '...'
            metricCollectionFrequencyMs: 12345
            rollupUsed: '...'
          data:
          - timestamp: '...'
            value: 12345.0
            type: '...'
            aggregateStatistics: {}
          - timestamp: '...'
            value: 12345.0
            type: '...'
            aggregateStatistics: {}
        - metadata:
            metricName: '...'
            entityName: '...'
            startTime: '...'
            endTime: '...'
            attributes:
              property1: '...'
              property2: '...'
            unitNumerators:
            - '...'
            - '...'
            unitDenominators:
            - '...'
            - '...'
            expression: '...'
            alias: '...'
            metricCollectionFrequencyMs: 12345
            rollupUsed: '...'
          data:
          - timestamp: '...'
            value: 12345.0
            type: '...'
            aggregateStatistics: {}
          - timestamp: '...'
            value: 12345.0
            type: '...'
            aggregateStatistics: {}
        warnings:
        - '...'
        - '...'
        timeSeriesQuery: '...'
    ApiTimeSeriesResponseList:
      title: ApiTimeSeriesResponseList
      description: A generic list.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: The list of responses for this query response list.
            items:
              $ref: '#/components/schemas/ApiTimeSeriesResponse'
    ApiUser:
      title: ApiUser
      type: object
      properties:
        name:
          type: string
          description: "The username, which is unique within a Cloudera Manager installation."
          example: "null"
        password:
          type: string
          description: |-
            Returns the user password.
            <p>
            Passwords are not returned when querying user information, so this
            property will always be empty when reading information from a server.
          example: "null"
        roles:
          type: array
          description: |-
            A list of roles this user belongs to.
            <p>
            In Cloudera Express, possible values are:
            <ul>
            <li><b>ROLE_ADMIN</b></li>
            <li><b>ROLE_USER</b></li>
            </ul>
            In Cloudera Enterprise Datahub Edition, additional possible values are:
            <ul>
            <li><b>ROLE_LIMITED</b>: Added in Cloudera Manager 5.0</li>
            <li><b>ROLE_OPERATOR</b>: Added in Cloudera Manager 5.1</li>
            <li><b>ROLE_CONFIGURATOR</b>: Added in Cloudera Manager 5.1</li>
            <li><b>ROLE_CLUSTER_ADMIN</b>: Added in Cloudera Manager 5.2</li>
            <li><b>ROLE_BDR_ADMIN</b>: Added in Cloudera Manager 5.2</li>
            <li><b>ROLE_NAVIGATOR_ADMIN</b>: Added in Cloudera Manager 5.2</li>
            <li><b>ROLE_USER_ADMIN</b>: Added in Cloudera Manager 5.2</li>
            <li><b>ROLE_KEY_ADMIN</b>: Added in Cloudera Manager 5.5</li>
            </ul>
            An empty list implies ROLE_USER.
            <p>
            Note that although this interface provides a list of roles, a user should
            only be assigned a single role at a time.
          example: "null"
          items:
            type: string
        pwHash:
          type: string
          description: "NOTE: Only available in the \"export\" view"
          example: "null"
        pwSalt:
          type: number
          description: "NOTE: Only available in the \"export\" view"
        pwLogin:
          type: boolean
          description: "NOTE: Only available in the \"export\" view"
      description: |-
        This is the model for user information in the API prior to v18. Post v18,
        please refer to ApiUser2.java.
        <p>
        Note that any method that returns user information will not contain any
        password information. The password property is only used when creating
        or updating users.
      example:
        name: '...'
        password: '...'
        roles:
        - '...'
        - '...'
        pwHash: '...'
        pwSalt: 12345
        pwLogin: true
    ApiUser2:
      title: ApiUser2
      type: object
      properties:
        name:
          type: string
          description: "The username, which is unique within a Cloudera Manager installation."
          example: "null"
        password:
          type: string
          description: |-
            Returns the user password.
            <p>
            Passwords are not returned when querying user information, so this
            property will always be empty when reading information from a server.
          example: "null"
        authRoles:
          type: array
          description: A list of ApiAuthRole that this user possesses.
          items:
            $ref: '#/components/schemas/ApiAuthRoleRef'
        pwHash:
          type: string
          description: "NOTE: Only available in the \"export\" view"
          example: "null"
        pwSalt:
          type: number
          description: "NOTE: Only available in the \"export\" view"
        pwLogin:
          type: boolean
          description: "NOTE: Only available in the \"export\" view"
      description: |-
        This is the model for user information in the API, v18 and beyond.
        <p>
        Note that any method that returns user information will not contain any
        password information. The password property is only used when creating
        or updating users.
      example:
        name: '...'
        password: '...'
        authRoles:
        - displayName: '...'
          name: '...'
          uuid: '...'
        - displayName: '...'
          name: '...'
          uuid: '...'
        pwHash: '...'
        pwSalt: 12345
        pwLogin: true
    ApiUser2List:
      title: ApiUser2List
      description: A list of users.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiUser2'
    ApiUser2Ref:
      title: ApiUser2Ref
      type: object
      properties:
        name:
          type: string
          description: "The name of the user, which uniquely identifies it in a CM\
            \ installation."
          example: "null"
      description: A userRef references a user.
      example:
        name: '...'
    ApiUserList:
      title: ApiUserList
      description: A list of users.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiUser'
    ApiUserSession:
      title: ApiUserSession
      type: object
      properties:
        name:
          type: string
          description: |-
            The username associated with the session.
            <p>
            This will be the same value shown to the logged in user in the UI, which
            will normally be the same value they typed when logging in, but it is
            possible that in certain external authentication scenarios, it will differ
            from that value.
          example: "null"
        remoteAddr:
          type: string
          description: |-
            The remote IP address for the session.
            <p>
            This will be the remote IP address for the last request made as part of
            this session. It is not guaranteed to be the same IP address as was
            previously used, or the address used to initiate the session.
          example: "null"
        lastRequest:
          type: string
          description: |-
            The date and time of the last request received as part of this session.
            <p>
            This will be returned in ISO 8601 format from the REST API.
          example: "null"
      description: |-
        This is the model for interactive user session information in the API.
        <p>
        A user may have more than one active session. Each such session will have
        its own session object.
      example:
        name: '...'
        remoteAddr: '...'
        lastRequest: '...'
    ApiUserSessionList:
      title: ApiUserSessionList
      description: A list of user sessions.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiUserSession'
    ApiVersionInfo:
      title: ApiVersionInfo
      type: object
      properties:
        version:
          type: string
          description: Version.
          example: "null"
        snapshot:
          type: boolean
          description: Whether this build is a development snapshot.
        buildUser:
          type: string
          description: The user performing the build.
          example: "null"
        buildTimestamp:
          type: string
          description: Build timestamp.
          example: "null"
        gitHash:
          type: string
          description: Source control management hash.
          example: "null"
      description: Version information of Cloudera Manager itself.
      example:
        version: '...'
        snapshot: true
        buildUser: '...'
        buildTimestamp: '...'
        gitHash: '...'
    ApiWatchedDir:
      title: ApiWatchedDir
      type: object
      properties:
        path:
          type: string
          description: ""
          example: "null"
      description: ""
      example:
        path: '...'
    ApiWatchedDirList:
      title: ApiWatchedDirList
      description: A list of watched directories.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiWatchedDir'
    ApiYarnApplication:
      title: ApiYarnApplication
      type: object
      properties:
        allocatedMB:
          type: number
          description: |-
            The sum of memory in MB allocated to the application's running containers
            Available since v12.
        allocatedVCores:
          type: number
          description: |-
            The sum of virtual cores allocated to the application's running containers
            Available since v12.
        runningContainers:
          type: number
          description: |-
            The number of containers currently running for the application
            Available since v12.
        applicationTags:
          type: array
          description: List of YARN application tags. Available since v12.
          example: "null"
          items:
            type: string
        allocatedMemorySeconds:
          type: number
          description: |-
            Allocated memory to the application in units of mb-secs.
            Available since v12.
        allocatedVcoreSeconds:
          type: number
          description: Allocated vcore-secs to the application. Available since v12.
        applicationId:
          type: string
          description: The application id.
          example: "null"
        name:
          type: string
          description: The name of the application.
          example: "null"
        startTime:
          type: string
          description: The time the application was submitted.
          example: "null"
        endTime:
          type: string
          description: |-
            The time the application finished. If the application hasn't finished
            this will return null.
          example: "null"
        user:
          type: string
          description: The user who submitted the application.
          example: "null"
        pool:
          type: string
          description: The pool the application was submitted to.
          example: "null"
        progress:
          type: number
          description: |-
            The progress, as a percentage, the application has made. This is only
            set if the application is currently executing.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: |-
            A map of additional application attributes which is generated by
            Cloudera Manager. For example MR2 job counters are exposed as key/value
            pairs here. For more details see the Cloudera Manager documentation.
          example: "null"
        mr2AppInformation:
          $ref: '#/components/schemas/ApiMr2AppInformation'
        state:
          type: string
          description: ""
          example: "null"
        containerUsedMemorySeconds:
          type: number
          description: |-
            Actual memory (in MB-secs) used by containers launched by the YARN application.
            Computed by running a MapReduce job from Cloudera Service Monitor to
            aggregate YARN usage metrics.
            Available since v12.
        containerUsedMemoryMax:
          type: number
          description: |-
            Maximum memory used by containers launched by the YARN application.
            Computed by running a MapReduce job from Cloudera Service Monitor to
            aggregate YARN usage metrics
            Available since v16
        containerUsedCpuSeconds:
          type: number
          description: |-
            Actual CPU (in percent-secs) used by containers launched by the YARN application.
            Computed by running a MapReduce job from Cloudera Service Monitor to
            aggregate YARN usage metrics.
            Available since v12.
        containerUsedVcoreSeconds:
          type: number
          description: |-
            Actual VCore-secs used by containers launched by the YARN application.
            Computed by running a MapReduce job from Cloudera Service Monitor to
            aggregate YARN usage metrics.
            Available since v12.
        containerAllocatedMemorySeconds:
          type: number
          description: |-
            Total memory (in mb-secs) allocated to containers launched by the YARN application.
            Computed by running a MapReduce job from Cloudera Service Monitor to
            aggregate YARN usage metrics.
            Available since v12.
        containerAllocatedVcoreSeconds:
          type: number
          description: |-
            Total vcore-secs allocated to containers launched by the YARN application.
            Computed by running a MapReduce job from Cloudera Service Monitor to
            aggregate YARN usage metrics.
            Available since v12.
      description: Represents a Yarn application
      example:
        allocatedMB: 12345
        allocatedVCores: 12345
        runningContainers: 12345
        applicationTags:
        - '...'
        - '...'
        allocatedMemorySeconds: 12345
        allocatedVcoreSeconds: 12345
        applicationId: '...'
        name: '...'
        startTime: '...'
        endTime: '...'
        user: '...'
        pool: '...'
        progress: 12345.0
        attributes:
          property1: '...'
          property2: '...'
        mr2AppInformation:
          jobState: '...'
        state: '...'
        containerUsedMemorySeconds: 12345.0
        containerUsedMemoryMax: 12345.0
        containerUsedCpuSeconds: 12345.0
        containerUsedVcoreSeconds: 12345.0
        containerAllocatedMemorySeconds: 12345.0
        containerAllocatedVcoreSeconds: 12345.0
    ApiYarnApplicationAttribute:
      title: ApiYarnApplicationAttribute
      type: object
      properties:
        name:
          type: string
          description: |-
            The name of the attribute. This name can be used in filters, for example
            'user' could be used in the filter 'user = root'.
          example: "null"
        type:
          type: string
          description: |-
            The type of the attribute. Valid types are STRING, NUMBER, BOOLEAN, BYTES,
            MILLISECONDS, BYTES_PER_SECOND, BYTE_SECONDS.
          example: "null"
        displayName:
          type: string
          description: The display name for the attribute.
          example: "null"
        supportsHistograms:
          type: boolean
          description: |-
            Whether the Service Monitor can generate a histogram of the distribution
            of the attribute across applications.
        description:
          type: string
          description: The description of the attribute.
          example: "null"
      description: Metadata about a YARN application attribute.
      example:
        name: '...'
        type: '...'
        displayName: '...'
        supportsHistograms: true
        description: '...'
    ApiYarnApplicationAttributeList:
      title: ApiYarnApplicationAttributeList
      description: The list of all attributes that are applicable to YARN applications.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiYarnApplicationAttribute'
    ApiYarnApplicationDiagnosticsCollectionArgs:
      title: ApiYarnApplicationDiagnosticsCollectionArgs
      type: object
      properties:
        applicationIds:
          type: array
          description: Id's of the applications whose diagnostics data has to be collected
          example: "null"
          items:
            type: string
        ticketNumber:
          type: string
          description: Ticket Number of the Cloudera Support Ticket
          example: "null"
        comments:
          type: string
          description: Comments to add to the support bundle
          example: "null"
      description: Arguments used for collecting diagnostics data for Yarn applications
      example:
        applicationIds:
        - '...'
        - '...'
        ticketNumber: '...'
        comments: '...'
    ApiYarnApplicationResponse:
      title: ApiYarnApplicationResponse
      type: object
      properties:
        applications:
          type: array
          description: The list of applications for this response.
          items:
            $ref: '#/components/schemas/ApiYarnApplication'
        warnings:
          type: array
          description: This list of warnings for this response.
          example: "null"
          items:
            type: string
      description: The response contains a list of applications and warnings.
      example:
        applications:
        - allocatedMB: 12345
          allocatedVCores: 12345
          runningContainers: 12345
          applicationTags:
          - '...'
          - '...'
          allocatedMemorySeconds: 12345
          allocatedVcoreSeconds: 12345
          applicationId: '...'
          name: '...'
          startTime: '...'
          endTime: '...'
          user: '...'
          pool: '...'
          progress: 12345.0
          attributes:
            property1: '...'
            property2: '...'
          mr2AppInformation:
            jobState: '...'
          state: '...'
          containerUsedMemorySeconds: 12345.0
          containerUsedMemoryMax: 12345.0
          containerUsedCpuSeconds: 12345.0
          containerUsedVcoreSeconds: 12345.0
          containerAllocatedMemorySeconds: 12345.0
          containerAllocatedVcoreSeconds: 12345.0
        - allocatedMB: 12345
          allocatedVCores: 12345
          runningContainers: 12345
          applicationTags:
          - '...'
          - '...'
          allocatedMemorySeconds: 12345
          allocatedVcoreSeconds: 12345
          applicationId: '...'
          name: '...'
          startTime: '...'
          endTime: '...'
          user: '...'
          pool: '...'
          progress: 12345.0
          attributes:
            property1: '...'
            property2: '...'
          mr2AppInformation:
            jobState: '...'
          state: '...'
          containerUsedMemorySeconds: 12345.0
          containerUsedMemoryMax: 12345.0
          containerUsedCpuSeconds: 12345.0
          containerUsedVcoreSeconds: 12345.0
          containerAllocatedMemorySeconds: 12345.0
          containerAllocatedVcoreSeconds: 12345.0
        warnings:
        - '...'
        - '...'
    ApiYarnKillResponse:
      title: ApiYarnKillResponse
      type: object
      properties:
        warning:
          type: string
          description: |-
            The warning, if any, from the call. We will return a warning if the caller
            attempts to cancel an application that has already completed.
          example: "null"
      description: The response from an Yarn kill application response.
      example:
        warning: '...'
    ApiYarnTenantUtilization:
      title: ApiYarnTenantUtilization
      type: object
      properties:
        tenantName:
          type: string
          description: Name of the tenant.
          example: "null"
        avgYarnCpuAllocation:
          type: number
          description: Average number of VCores allocated to YARN applications of
            the tenant.
        avgYarnCpuUtilization:
          type: number
          description: Average number of VCores used by YARN applications of the tenant.
        avgYarnCpuUnusedCapacity:
          type: number
          description: Average unused VCores of the tenant.
        avgYarnCpuSteadyFairShare:
          type: number
          description: Average steady fair share VCores.
        avgYarnPoolAllocatedCpuDuringContention:
          type: number
          description: Average allocated Vcores with pending containers.
        avgYarnPoolFairShareCpuDuringContention:
          type: number
          description: Average fair share VCores with pending containers.
        avgYarnPoolSteadyFairShareCpuDuringContention:
          type: number
          description: Average steady fair share VCores with pending containers.
        avgYarnContainerWaitRatio:
          type: number
          description: |-
            Average percentage of pending containers for the pool during periods of
            contention.
        avgYarnMemoryAllocation:
          type: number
          description: Average memory allocated to YARN applications of the tenant.
        avgYarnMemoryUtilization:
          type: number
          description: Average memory used by YARN applications of the tenant.
        avgYarnMemoryUnusedCapacity:
          type: number
          description: Average unused memory of the tenant.
        avgYarnMemorySteadyFairShare:
          type: number
          description: Average steady fair share memory.
        avgYarnPoolAllocatedMemoryDuringContention:
          type: number
          description: Average allocated memory with pending containers.
        avgYarnPoolFairShareMemoryDuringContention:
          type: number
          description: Average fair share memory with pending containers.
        avgYarnPoolSteadyFairShareMemoryDuringContention:
          type: number
          description: Average steady fair share memory with pending containers.
      description: Utilization report information of a tenant of Yarn application.
      example:
        tenantName: '...'
        avgYarnCpuAllocation: 12345.0
        avgYarnCpuUtilization: 12345.0
        avgYarnCpuUnusedCapacity: 12345.0
        avgYarnCpuSteadyFairShare: 12345.0
        avgYarnPoolAllocatedCpuDuringContention: 12345.0
        avgYarnPoolFairShareCpuDuringContention: 12345.0
        avgYarnPoolSteadyFairShareCpuDuringContention: 12345.0
        avgYarnContainerWaitRatio: 12345.0
        avgYarnMemoryAllocation: 12345.0
        avgYarnMemoryUtilization: 12345.0
        avgYarnMemoryUnusedCapacity: 12345.0
        avgYarnMemorySteadyFairShare: 12345.0
        avgYarnPoolAllocatedMemoryDuringContention: 12345.0
        avgYarnPoolFairShareMemoryDuringContention: 12345.0
        avgYarnPoolSteadyFairShareMemoryDuringContention: 12345.0
    ApiYarnTenantUtilizationList:
      title: ApiYarnTenantUtilizationList
      description: A list of yarn tenant utilization reports.
      allOf:
      - $ref: '#/components/schemas/ApiListBase'
      - type: object
        properties:
          items:
            type: array
            description: ""
            items:
              $ref: '#/components/schemas/ApiYarnTenantUtilization'
    ApiYarnUtilization:
      title: ApiYarnUtilization
      type: object
      properties:
        avgCpuUtilization:
          type: number
          description: |-
            Average number of VCores used by YARN applications during the report
            window.
        maxCpuUtilization:
          type: number
          description: |-
            Maximum number of VCores used by YARN applications during the report
            window.
        avgCpuDailyPeak:
          type: number
          description: |-
            Average daily peak VCores used by YARN applications during the report
            window. The number is computed by first finding the maximum resource
            consumption per day and then taking their mean.
        maxCpuUtilizationTimestampMs:
          type: number
          description: |-
            Timestamp corresponds to maximum number of VCores used by YARN applications
            during the report window.
        avgCpuUtilizationPercentage:
          type: number
          description: |-
            Average percentage of VCores used by YARN applications during the report
            window.
        maxCpuUtilizationPercentage:
          type: number
          description: |-
            Maximum percentage of VCores used by YARN applications during the report
            window.
        avgCpuDailyPeakPercentage:
          type: number
          description: |-
            Average daily peak percentage of VCores used by YARN applications during
            the report window.
        avgMemoryUtilization:
          type: number
          description: Average memory used by YARN applications during the report
            window.
        maxMemoryUtilization:
          type: number
          description: Maximum memory used by YARN applications during the report
            window.
        avgMemoryDailyPeak:
          type: number
          description: |-
            Average daily peak memory used by YARN applications during the report
            window. The number is computed by first finding the maximum resource
            consumption per day and then taking their mean.
        maxMemoryUtilizationTimestampMs:
          type: number
          description: |-
            Timestamp corresponds to maximum memory used by YARN applications during
            the report window.
        avgMemoryUtilizationPercentage:
          type: number
          description: Average percentage memory used by YARN applications during
            the report window.
        maxMemoryUtilizationPercentage:
          type: number
          description: Maximum percentage of memory used by YARN applications during
            the report window.
        avgMemoryDailyPeakPercentage:
          type: number
          description: |-
            Average daily peak percentage of memory used by YARN applications during the report
            window.
        tenantUtilizations:
          $ref: '#/components/schemas/ApiYarnTenantUtilizationList'
        errorMessage:
          type: string
          description: error message of utilization report.
          example: "null"
      description: Utilization report information of a Yarn application service.
      example:
        avgCpuUtilization: 12345.0
        maxCpuUtilization: 12345.0
        avgCpuDailyPeak: 12345.0
        maxCpuUtilizationTimestampMs: 12345
        avgCpuUtilizationPercentage: 12345.0
        maxCpuUtilizationPercentage: 12345.0
        avgCpuDailyPeakPercentage: 12345.0
        avgMemoryUtilization: 12345.0
        maxMemoryUtilization: 12345.0
        avgMemoryDailyPeak: 12345.0
        maxMemoryUtilizationTimestampMs: 12345
        avgMemoryUtilizationPercentage: 12345.0
        maxMemoryUtilizationPercentage: 12345.0
        avgMemoryDailyPeakPercentage: 12345.0
        tenantUtilizations:
          items:
          - tenantName: '...'
            avgYarnCpuAllocation: 12345.0
            avgYarnCpuUtilization: 12345.0
            avgYarnCpuUnusedCapacity: 12345.0
            avgYarnCpuSteadyFairShare: 12345.0
            avgYarnPoolAllocatedCpuDuringContention: 12345.0
            avgYarnPoolFairShareCpuDuringContention: 12345.0
            avgYarnPoolSteadyFairShareCpuDuringContention: 12345.0
            avgYarnContainerWaitRatio: 12345.0
            avgYarnMemoryAllocation: 12345.0
            avgYarnMemoryUtilization: 12345.0
            avgYarnMemoryUnusedCapacity: 12345.0
            avgYarnMemorySteadyFairShare: 12345.0
            avgYarnPoolAllocatedMemoryDuringContention: 12345.0
            avgYarnPoolFairShareMemoryDuringContention: 12345.0
            avgYarnPoolSteadyFairShareMemoryDuringContention: 12345.0
          - tenantName: '...'
            avgYarnCpuAllocation: 12345.0
            avgYarnCpuUtilization: 12345.0
            avgYarnCpuUnusedCapacity: 12345.0
            avgYarnCpuSteadyFairShare: 12345.0
            avgYarnPoolAllocatedCpuDuringContention: 12345.0
            avgYarnPoolFairShareCpuDuringContention: 12345.0
            avgYarnPoolSteadyFairShareCpuDuringContention: 12345.0
            avgYarnContainerWaitRatio: 12345.0
            avgYarnMemoryAllocation: 12345.0
            avgYarnMemoryUtilization: 12345.0
            avgYarnMemoryUnusedCapacity: 12345.0
            avgYarnMemorySteadyFairShare: 12345.0
            avgYarnPoolAllocatedMemoryDuringContention: 12345.0
            avgYarnPoolFairShareMemoryDuringContention: 12345.0
            avgYarnPoolSteadyFairShareMemoryDuringContention: 12345.0
        errorMessage: '...'
    BaseApiSshCmdArguments:
      title: BaseApiSshCmdArguments
      type: object
      properties:
        sshPort:
          type: number
          description: "SSH port. If unset, defaults to 22."
          example: 22.0
        userName:
          type: string
          description: |-
            The username used to authenticate with the hosts.
            Root access to your hosts is required to install Cloudera packages.
            The installer will connect to your hosts via SSH and log in either
            directly as root or as another user with password-less sudo
            privileges to become root.
          example: "null"
        password:
          type: string
          description: |-
            The password used to authenticate with the hosts.
            Specify either this or a private key.
            For password-less login, use an empty string as
            password.
          example: "null"
        privateKey:
          type: string
          description: |-
            The private key to authenticate with the hosts.
            Specify either this or a password.
            <br>
            The private key, if specified, needs to be a
            standard PEM-encoded key as a single string, with all line breaks
            replaced with the line-feed control character '\n'.
            <br>
            A value will typically look like the following string:
            <br>
            -----BEGIN RSA PRIVATE KEY-----\n[base-64 encoded key]\n-----END RSA PRIVATE KEY-----
            <br>
          example: "null"
        passphrase:
          type: string
          description: |-
            The passphrase associated with the private key
            used to authenticate with the hosts (optional).
          example: "null"
      description: Contains common arguments for commands which require SSH'ing into
        one or more hosts.
      example:
        sshPort: 22
        userName: '...'
        password: '...'
        privateKey: '...'
        passphrase: '...'
    HTTPMethod:
      title: HTTPMethod
      type: string
      description: ""
      enum:
      - GET
      - POST
      - PUT
      - DELETE
    HaStatus:
      title: HaStatus
      type: string
      description: ""
      enum:
      - ACTIVE
      - STANDBY
      - UNKNOWN
    PerfInspectorPolicyType:
      title: PerfInspectorPolicyType
      type: string
      description: Enum to pick the type of Performance Inspector Diagnostics to run
      enum:
      - FULL
      - QUICK
    ReplicationOption:
      title: ReplicationOption
      type: string
      description: This will decide how cloud replication will take place
      enum:
      - METADATA_ONLY
      - METADATA_AND_DATA
      - KEEP_DATA_IN_CLOUD
    ReplicationStrategy:
      title: ReplicationStrategy
      type: string
      description: |-
        The strategy for distributing the file replication tasks among the mappers
        of the MR job associated with a replication.
      enum:
      - STATIC
      - DYNAMIC
    ScmDbType:
      title: ScmDbType
      type: string
      description: |-
        Enum for Cloudera Manager DB type.
        Note that DERBY and SQLITE3 are not supported DBs
      enum:
      - MYSQL
      - POSTGRESQL
      - HSQL
      - ORACLE
      - DERBY
      - SQLITE3
    ShutdownReadinessState:
      title: ShutdownReadinessState
      type: string
      description: Enum for Cloudera Manager shutdown readiness state.
      enum:
      - READY
      - NOT_READY
    Storage:
      title: Storage
      type: string
      description: ""
      enum:
      - LOCAL
      - REMOTE_S3
    ValidationState:
      title: ValidationState
      type: string
      description: ""
      enum:
      - OK
      - WARNING
      - ERROR
    ZooKeeperServerMode:
      title: ZooKeeperServerMode
      type: string
      description: The state of the Zookeeper server.
      enum:
      - STANDALONE
      - REPLICATED_FOLLOWER
      - REPLICATED_LEADER
      - REPLICATED_LEADER_ELECTION
      - REPLICATED_OBSERVER
      - UNKNOWN
    cm_license_body:
      type: object
      properties:
        license:
          type: string
          description: ""
          format: binary
  securitySchemes:
    basic:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
